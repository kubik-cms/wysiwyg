// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

(function (modules, entry, mainEntry, parcelRequireName, globalName) {
  /* eslint-disable no-undef */
  var globalObject =
    typeof globalThis !== 'undefined'
      ? globalThis
      : typeof self !== 'undefined'
      ? self
      : typeof window !== 'undefined'
      ? window
      : typeof global !== 'undefined'
      ? global
      : {};
  /* eslint-enable no-undef */

  // Save the require from previous bundle to this closure if any
  var previousRequire =
    typeof globalObject[parcelRequireName] === 'function' &&
    globalObject[parcelRequireName];

  var cache = previousRequire.cache || {};
  // Do not use `require` to prevent Webpack from trying to bundle this call
  var nodeRequire =
    typeof module !== 'undefined' &&
    typeof module.require === 'function' &&
    module.require.bind(module);

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire =
          typeof globalObject[parcelRequireName] === 'function' &&
          globalObject[parcelRequireName];
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error("Cannot find module '" + name + "'");
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = (cache[name] = new newRequire.Module(name));

      modules[name][0].call(
        module.exports,
        localRequire,
        module,
        module.exports,
        this
      );
    }

    return cache[name].exports;

    function localRequire(x) {
      var res = localRequire.resolve(x);
      return res === false ? {} : newRequire(res);
    }

    function resolve(x) {
      var id = modules[name][1][x];
      return id != null ? id : x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [
      function (require, module) {
        module.exports = exports;
      },
      {},
    ];
  };

  Object.defineProperty(newRequire, 'root', {
    get: function () {
      return globalObject[parcelRequireName];
    },
  });

  globalObject[parcelRequireName] = newRequire;

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  if (mainEntry) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(mainEntry);

    // CommonJS
    if (typeof exports === 'object' && typeof module !== 'undefined') {
      module.exports = mainExports;

      // RequireJS
    } else if (typeof define === 'function' && define.amd) {
      define(function () {
        return mainExports;
      });

      // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }
})({"hhGPZ":[function(require,module,exports) {
"use strict";
var global = arguments[3];
var HMR_HOST = null;
var HMR_PORT = 1234;
var HMR_SECURE = false;
var HMR_ENV_HASH = "916932b22e4085ab";
module.bundle.HMR_BUNDLE_ID = "09eec459b12eab87";
/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, globalThis, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */ /*::
import type {
  HMRAsset,
  HMRMessage,
} from '@parcel/reporter-dev-server/src/HMRServer.js';
interface ParcelRequire {
  (string): mixed;
  cache: {|[string]: ParcelModule|};
  hotData: mixed;
  Module: any;
  parent: ?ParcelRequire;
  isParcelRequire: true;
  modules: {|[string]: [Function, {|[string]: string|}]|};
  HMR_BUNDLE_ID: string;
  root: ParcelRequire;
}
interface ParcelModule {
  hot: {|
    data: mixed,
    accept(cb: (Function) => void): void,
    dispose(cb: (mixed) => void): void,
    // accept(deps: Array<string> | string, cb: (Function) => void): void,
    // decline(): void,
    _acceptCallbacks: Array<(Function) => void>,
    _disposeCallbacks: Array<(mixed) => void>,
  |};
}
interface ExtensionContext {
  runtime: {|
    reload(): void,
    getURL(url: string): string;
    getManifest(): {manifest_version: number, ...};
  |};
}
declare var module: {bundle: ParcelRequire, ...};
declare var HMR_HOST: string;
declare var HMR_PORT: string;
declare var HMR_ENV_HASH: string;
declare var HMR_SECURE: boolean;
declare var chrome: ExtensionContext;
declare var browser: ExtensionContext;
declare var __parcel__import__: (string) => Promise<void>;
declare var __parcel__importScripts__: (string) => Promise<void>;
declare var globalThis: typeof self;
declare var ServiceWorkerGlobalScope: Object;
*/ var OVERLAY_ID = "__parcel__error__overlay__";
var OldModule = module.bundle.Module;
function Module(moduleName) {
    OldModule.call(this, moduleName);
    this.hot = {
        data: module.bundle.hotData,
        _acceptCallbacks: [],
        _disposeCallbacks: [],
        accept: function(fn) {
            this._acceptCallbacks.push(fn || function() {});
        },
        dispose: function(fn) {
            this._disposeCallbacks.push(fn);
        }
    };
    module.bundle.hotData = undefined;
}
module.bundle.Module = Module;
var checkedAssets, acceptedAssets, assetsToAccept /*: Array<[ParcelRequire, string]> */ ;
function getHostname() {
    return HMR_HOST || (location.protocol.indexOf("http") === 0 ? location.hostname : "localhost");
}
function getPort() {
    return HMR_PORT || location.port;
} // eslint-disable-next-line no-redeclare
var parent = module.bundle.parent;
if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== "undefined") {
    var hostname = getHostname();
    var port = getPort();
    var protocol = HMR_SECURE || location.protocol == "https:" && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? "wss" : "ws";
    var ws = new WebSocket(protocol + "://" + hostname + (port ? ":" + port : "") + "/"); // Web extension context
    var extCtx = typeof chrome === "undefined" ? typeof browser === "undefined" ? null : browser : chrome; // Safari doesn't support sourceURL in error stacks.
    // eval may also be disabled via CSP, so do a quick check.
    var supportsSourceURL = false;
    try {
        (0, eval)('throw new Error("test"); //# sourceURL=test.js');
    } catch (err) {
        supportsSourceURL = err.stack.includes("test.js");
    } // $FlowFixMe
    ws.onmessage = async function(event) {
        checkedAssets = {} /*: {|[string]: boolean|} */ ;
        acceptedAssets = {} /*: {|[string]: boolean|} */ ;
        assetsToAccept = [];
        var data = JSON.parse(event.data);
        if (data.type === "update") {
            // Remove error overlay if there is one
            if (typeof document !== "undefined") removeErrorOverlay();
            let assets = data.assets.filter((asset)=>asset.envHash === HMR_ENV_HASH); // Handle HMR Update
            let handled = assets.every((asset)=>{
                return asset.type === "css" || asset.type === "js" && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);
            });
            if (handled) {
                console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.
                if (typeof window !== "undefined" && typeof CustomEvent !== "undefined") window.dispatchEvent(new CustomEvent("parcelhmraccept"));
                await hmrApplyUpdates(assets);
                for(var i = 0; i < assetsToAccept.length; i++){
                    var id = assetsToAccept[i][1];
                    if (!acceptedAssets[id]) hmrAcceptRun(assetsToAccept[i][0], id);
                }
            } else fullReload();
        }
        if (data.type === "error") {
            // Log parcel errors to console
            for (let ansiDiagnostic of data.diagnostics.ansi){
                let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;
                console.error("\uD83D\uDEA8 [parcel]: " + ansiDiagnostic.message + "\n" + stack + "\n\n" + ansiDiagnostic.hints.join("\n"));
            }
            if (typeof document !== "undefined") {
                // Render the fancy html overlay
                removeErrorOverlay();
                var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe
                document.body.appendChild(overlay);
            }
        }
    };
    ws.onerror = function(e) {
        console.error(e.message);
    };
    ws.onclose = function() {
        console.warn("[parcel] \uD83D\uDEA8 Connection to the HMR server was lost");
    };
}
function removeErrorOverlay() {
    var overlay = document.getElementById(OVERLAY_ID);
    if (overlay) {
        overlay.remove();
        console.log("[parcel] ✨ Error resolved");
    }
}
function createErrorOverlay(diagnostics) {
    var overlay = document.createElement("div");
    overlay.id = OVERLAY_ID;
    let errorHTML = '<div style="background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;">';
    for (let diagnostic of diagnostics){
        let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame)=>{
            return `${p}
<a href="/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}" style="text-decoration: underline; color: #888" onclick="fetch(this.href); return false">${frame.location}</a>
${frame.code}`;
        }, "") : diagnostic.stack;
        errorHTML += `
      <div>
        <div style="font-size: 18px; font-weight: bold; margin-top: 20px;">
          🚨 ${diagnostic.message}
        </div>
        <pre>${stack}</pre>
        <div>
          ${diagnostic.hints.map((hint)=>"<div>\uD83D\uDCA1 " + hint + "</div>").join("")}
        </div>
        ${diagnostic.documentation ? `<div>📝 <a style="color: violet" href="${diagnostic.documentation}" target="_blank">Learn more</a></div>` : ""}
      </div>
    `;
    }
    errorHTML += "</div>";
    overlay.innerHTML = errorHTML;
    return overlay;
}
function fullReload() {
    if ("reload" in location) location.reload();
    else if (extCtx && extCtx.runtime && extCtx.runtime.reload) extCtx.runtime.reload();
}
function getParents(bundle, id) /*: Array<[ParcelRequire, string]> */ {
    var modules = bundle.modules;
    if (!modules) return [];
    var parents = [];
    var k, d, dep;
    for(k in modules)for(d in modules[k][1]){
        dep = modules[k][1][d];
        if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) parents.push([
            bundle,
            k
        ]);
    }
    if (bundle.parent) parents = parents.concat(getParents(bundle.parent, id));
    return parents;
}
function updateLink(link) {
    var newLink = link.cloneNode();
    newLink.onload = function() {
        if (link.parentNode !== null) // $FlowFixMe
        link.parentNode.removeChild(link);
    };
    newLink.setAttribute("href", link.getAttribute("href").split("?")[0] + "?" + Date.now()); // $FlowFixMe
    link.parentNode.insertBefore(newLink, link.nextSibling);
}
var cssTimeout = null;
function reloadCSS() {
    if (cssTimeout) return;
    cssTimeout = setTimeout(function() {
        var links = document.querySelectorAll('link[rel="stylesheet"]');
        for(var i = 0; i < links.length; i++){
            // $FlowFixMe[incompatible-type]
            var href = links[i].getAttribute("href");
            var hostname = getHostname();
            var servedFromHMRServer = hostname === "localhost" ? new RegExp("^(https?:\\/\\/(0.0.0.0|127.0.0.1)|localhost):" + getPort()).test(href) : href.indexOf(hostname + ":" + getPort());
            var absolute = /^https?:\/\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;
            if (!absolute) updateLink(links[i]);
        }
        cssTimeout = null;
    }, 50);
}
function hmrDownload(asset) {
    if (asset.type === "js") {
        if (typeof document !== "undefined") {
            let script = document.createElement("script");
            script.src = asset.url + "?t=" + Date.now();
            if (asset.outputFormat === "esmodule") script.type = "module";
            return new Promise((resolve, reject)=>{
                var _document$head;
                script.onload = ()=>resolve(script);
                script.onerror = reject;
                (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);
            });
        } else if (typeof importScripts === "function") {
            // Worker scripts
            if (asset.outputFormat === "esmodule") return import(asset.url + "?t=" + Date.now());
            else return new Promise((resolve, reject)=>{
                try {
                    importScripts(asset.url + "?t=" + Date.now());
                    resolve();
                } catch (err) {
                    reject(err);
                }
            });
        }
    }
}
async function hmrApplyUpdates(assets) {
    global.parcelHotUpdate = Object.create(null);
    let scriptsToRemove;
    try {
        // If sourceURL comments aren't supported in eval, we need to load
        // the update from the dev server over HTTP so that stack traces
        // are correct in errors/logs. This is much slower than eval, so
        // we only do it if needed (currently just Safari).
        // https://bugs.webkit.org/show_bug.cgi?id=137297
        // This path is also taken if a CSP disallows eval.
        if (!supportsSourceURL) {
            let promises = assets.map((asset)=>{
                var _hmrDownload;
                return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch((err)=>{
                    // Web extension bugfix for Chromium
                    // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12
                    if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {
                        if (typeof ServiceWorkerGlobalScope != "undefined" && global instanceof ServiceWorkerGlobalScope) {
                            extCtx.runtime.reload();
                            return;
                        }
                        asset.url = extCtx.runtime.getURL("/__parcel_hmr_proxy__?url=" + encodeURIComponent(asset.url + "?t=" + Date.now()));
                        return hmrDownload(asset);
                    }
                    throw err;
                });
            });
            scriptsToRemove = await Promise.all(promises);
        }
        assets.forEach(function(asset) {
            hmrApply(module.bundle.root, asset);
        });
    } finally{
        delete global.parcelHotUpdate;
        if (scriptsToRemove) scriptsToRemove.forEach((script)=>{
            if (script) {
                var _document$head2;
                (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);
            }
        });
    }
}
function hmrApply(bundle, asset) {
    var modules = bundle.modules;
    if (!modules) return;
    if (asset.type === "css") reloadCSS();
    else if (asset.type === "js") {
        let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];
        if (deps) {
            if (modules[asset.id]) {
                // Remove dependencies that are removed and will become orphaned.
                // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.
                let oldDeps = modules[asset.id][1];
                for(let dep in oldDeps)if (!deps[dep] || deps[dep] !== oldDeps[dep]) {
                    let id = oldDeps[dep];
                    let parents = getParents(module.bundle.root, id);
                    if (parents.length === 1) hmrDelete(module.bundle.root, id);
                }
            }
            if (supportsSourceURL) // Global eval. We would use `new Function` here but browser
            // support for source maps is better with eval.
            (0, eval)(asset.output);
             // $FlowFixMe
            let fn = global.parcelHotUpdate[asset.id];
            modules[asset.id] = [
                fn,
                deps
            ];
        } else if (bundle.parent) hmrApply(bundle.parent, asset);
    }
}
function hmrDelete(bundle, id) {
    let modules = bundle.modules;
    if (!modules) return;
    if (modules[id]) {
        // Collect dependencies that will become orphaned when this module is deleted.
        let deps = modules[id][1];
        let orphans = [];
        for(let dep in deps){
            let parents = getParents(module.bundle.root, deps[dep]);
            if (parents.length === 1) orphans.push(deps[dep]);
        } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.
        delete modules[id];
        delete bundle.cache[id]; // Now delete the orphans.
        orphans.forEach((id)=>{
            hmrDelete(module.bundle.root, id);
        });
    } else if (bundle.parent) hmrDelete(bundle.parent, id);
}
function hmrAcceptCheck(bundle, id, depsByBundle) {
    if (hmrAcceptCheckOne(bundle, id, depsByBundle)) return true;
     // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.
    let parents = getParents(module.bundle.root, id);
    let accepted = false;
    while(parents.length > 0){
        let v = parents.shift();
        let a = hmrAcceptCheckOne(v[0], v[1], null);
        if (a) // If this parent accepts, stop traversing upward, but still consider siblings.
        accepted = true;
        else {
            // Otherwise, queue the parents in the next level upward.
            let p = getParents(module.bundle.root, v[1]);
            if (p.length === 0) {
                // If there are no parents, then we've reached an entry without accepting. Reload.
                accepted = false;
                break;
            }
            parents.push(...p);
        }
    }
    return accepted;
}
function hmrAcceptCheckOne(bundle, id, depsByBundle) {
    var modules = bundle.modules;
    if (!modules) return;
    if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {
        // If we reached the root bundle without finding where the asset should go,
        // there's nothing to do. Mark as "accepted" so we don't reload the page.
        if (!bundle.parent) return true;
        return hmrAcceptCheck(bundle.parent, id, depsByBundle);
    }
    if (checkedAssets[id]) return true;
    checkedAssets[id] = true;
    var cached = bundle.cache[id];
    assetsToAccept.push([
        bundle,
        id
    ]);
    if (!cached || cached.hot && cached.hot._acceptCallbacks.length) return true;
}
function hmrAcceptRun(bundle, id) {
    var cached = bundle.cache[id];
    bundle.hotData = {};
    if (cached && cached.hot) cached.hot.data = bundle.hotData;
    if (cached && cached.hot && cached.hot._disposeCallbacks.length) cached.hot._disposeCallbacks.forEach(function(cb) {
        cb(bundle.hotData);
    });
    delete bundle.cache[id];
    bundle(id);
    cached = bundle.cache[id];
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) cached.hot._acceptCallbacks.forEach(function(cb) {
        var assetsToAlsoAccept = cb(function() {
            return getParents(module.bundle.root, id);
        });
        if (assetsToAlsoAccept && assetsToAccept.length) // $FlowFixMe[method-unbinding]
        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);
    });
    acceptedAssets[id] = true;
}

},{}],"3Cw6g":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
var _stimulus = require("@hotwired/stimulus");
var _turbo = require("@hotwired/turbo");
var _mediaLibrary = require("@kubik-cms/media_library");
var _interfaceElements = require("@kubik-cms/interface_elements");
var _wysiwygEditorController = require("./controllers/wysiwyg_editor_controller");
var _wysiwygEditorControllerDefault = parcelHelpers.interopDefault(_wysiwygEditorController);
var _mediaWidgetController = require("./controllers/media_widget_controller");
var _mediaWidgetControllerDefault = parcelHelpers.interopDefault(_mediaWidgetController);
const KubikInterfaceStimulus = (0, _stimulus.Application).start();
if (typeof KubikInterfaceStimulus != "undefined") {
    KubikInterfaceStimulus.register("image_selector", (0, _mediaLibrary.ImageSelectorController));
    KubikInterfaceStimulus.register("multiple_image_selector", (0, _mediaLibrary.MultipleImageSelectorController));
    KubikInterfaceStimulus.register("image_dropzone", (0, _mediaLibrary.ImageDropzoneController));
    KubikInterfaceStimulus.register("kubik-modal", (0, _interfaceElements.ModalController));
    KubikInterfaceStimulus.register("editor", (0, _wysiwygEditorControllerDefault.default));
    KubikInterfaceStimulus.register("media-widget", (0, _mediaWidgetControllerDefault.default));
}
(0, _interfaceElements.modalInit)();

},{"@hotwired/stimulus":"hVNih","./controllers/wysiwyg_editor_controller":"9OSSh","./controllers/media_widget_controller":"7x0nF","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU","@hotwired/turbo":"lw7OH","@kubik-cms/media_library":"8TR10","@kubik-cms/interface_elements":"ky8gR"}],"hVNih":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Application", ()=>Application);
parcelHelpers.export(exports, "AttributeObserver", ()=>AttributeObserver);
parcelHelpers.export(exports, "Context", ()=>Context);
parcelHelpers.export(exports, "Controller", ()=>Controller);
parcelHelpers.export(exports, "ElementObserver", ()=>ElementObserver);
parcelHelpers.export(exports, "IndexedMultimap", ()=>IndexedMultimap);
parcelHelpers.export(exports, "Multimap", ()=>Multimap);
parcelHelpers.export(exports, "StringMapObserver", ()=>StringMapObserver);
parcelHelpers.export(exports, "TokenListObserver", ()=>TokenListObserver);
parcelHelpers.export(exports, "ValueListObserver", ()=>ValueListObserver);
parcelHelpers.export(exports, "add", ()=>add);
parcelHelpers.export(exports, "defaultSchema", ()=>defaultSchema);
parcelHelpers.export(exports, "del", ()=>del);
parcelHelpers.export(exports, "fetch", ()=>fetch);
parcelHelpers.export(exports, "prune", ()=>prune);
/*
Stimulus 3.1.0
Copyright © 2022 Basecamp, LLC
 */ class EventListener {
    connect() {
        this.eventTarget.addEventListener(this.eventName, this, this.eventOptions);
    }
    disconnect() {
        this.eventTarget.removeEventListener(this.eventName, this, this.eventOptions);
    }
    bindingConnected(binding) {
        this.unorderedBindings.add(binding);
    }
    bindingDisconnected(binding) {
        this.unorderedBindings.delete(binding);
    }
    handleEvent(event) {
        const extendedEvent = extendEvent(event);
        for (const binding of this.bindings){
            if (extendedEvent.immediatePropagationStopped) break;
            else binding.handleEvent(extendedEvent);
        }
    }
    get bindings() {
        return Array.from(this.unorderedBindings).sort((left, right)=>{
            const leftIndex = left.index, rightIndex = right.index;
            return leftIndex < rightIndex ? -1 : leftIndex > rightIndex ? 1 : 0;
        });
    }
    constructor(eventTarget, eventName, eventOptions){
        this.eventTarget = eventTarget;
        this.eventName = eventName;
        this.eventOptions = eventOptions;
        this.unorderedBindings = new Set();
    }
}
function extendEvent(event) {
    if ("immediatePropagationStopped" in event) return event;
    else {
        const { stopImmediatePropagation  } = event;
        return Object.assign(event, {
            immediatePropagationStopped: false,
            stopImmediatePropagation () {
                this.immediatePropagationStopped = true;
                stopImmediatePropagation.call(this);
            }
        });
    }
}
class Dispatcher {
    start() {
        if (!this.started) {
            this.started = true;
            this.eventListeners.forEach((eventListener)=>eventListener.connect());
        }
    }
    stop() {
        if (this.started) {
            this.started = false;
            this.eventListeners.forEach((eventListener)=>eventListener.disconnect());
        }
    }
    get eventListeners() {
        return Array.from(this.eventListenerMaps.values()).reduce((listeners, map)=>listeners.concat(Array.from(map.values())), []);
    }
    bindingConnected(binding) {
        this.fetchEventListenerForBinding(binding).bindingConnected(binding);
    }
    bindingDisconnected(binding) {
        this.fetchEventListenerForBinding(binding).bindingDisconnected(binding);
    }
    handleError(error, message, detail = {}) {
        this.application.handleError(error, `Error ${message}`, detail);
    }
    fetchEventListenerForBinding(binding) {
        const { eventTarget , eventName , eventOptions  } = binding;
        return this.fetchEventListener(eventTarget, eventName, eventOptions);
    }
    fetchEventListener(eventTarget, eventName, eventOptions) {
        const eventListenerMap = this.fetchEventListenerMapForEventTarget(eventTarget);
        const cacheKey = this.cacheKey(eventName, eventOptions);
        let eventListener = eventListenerMap.get(cacheKey);
        if (!eventListener) {
            eventListener = this.createEventListener(eventTarget, eventName, eventOptions);
            eventListenerMap.set(cacheKey, eventListener);
        }
        return eventListener;
    }
    createEventListener(eventTarget, eventName, eventOptions) {
        const eventListener = new EventListener(eventTarget, eventName, eventOptions);
        if (this.started) eventListener.connect();
        return eventListener;
    }
    fetchEventListenerMapForEventTarget(eventTarget) {
        let eventListenerMap = this.eventListenerMaps.get(eventTarget);
        if (!eventListenerMap) {
            eventListenerMap = new Map;
            this.eventListenerMaps.set(eventTarget, eventListenerMap);
        }
        return eventListenerMap;
    }
    cacheKey(eventName, eventOptions) {
        const parts = [
            eventName
        ];
        Object.keys(eventOptions).sort().forEach((key)=>{
            parts.push(`${eventOptions[key] ? "" : "!"}${key}`);
        });
        return parts.join(":");
    }
    constructor(application){
        this.application = application;
        this.eventListenerMaps = new Map;
        this.started = false;
    }
}
const descriptorPattern = /^((.+?)(@(window|document))?->)?(.+?)(#([^:]+?))(:(.+))?$/;
function parseActionDescriptorString(descriptorString) {
    const source = descriptorString.trim();
    const matches = source.match(descriptorPattern) || [];
    return {
        eventTarget: parseEventTarget(matches[4]),
        eventName: matches[2],
        eventOptions: matches[9] ? parseEventOptions(matches[9]) : {},
        identifier: matches[5],
        methodName: matches[7]
    };
}
function parseEventTarget(eventTargetName) {
    if (eventTargetName == "window") return window;
    else if (eventTargetName == "document") return document;
}
function parseEventOptions(eventOptions) {
    return eventOptions.split(":").reduce((options, token)=>Object.assign(options, {
            [token.replace(/^!/, "")]: !/^!/.test(token)
        }), {});
}
function stringifyEventTarget(eventTarget) {
    if (eventTarget == window) return "window";
    else if (eventTarget == document) return "document";
}
function camelize(value) {
    return value.replace(/(?:[_-])([a-z0-9])/g, (_, char)=>char.toUpperCase());
}
function capitalize(value) {
    return value.charAt(0).toUpperCase() + value.slice(1);
}
function dasherize(value) {
    return value.replace(/([A-Z])/g, (_, char)=>`-${char.toLowerCase()}`);
}
function tokenize(value) {
    return value.match(/[^\s]+/g) || [];
}
class Action {
    static forToken(token) {
        return new this(token.element, token.index, parseActionDescriptorString(token.content));
    }
    toString() {
        const eventNameSuffix = this.eventTargetName ? `@${this.eventTargetName}` : "";
        return `${this.eventName}${eventNameSuffix}->${this.identifier}#${this.methodName}`;
    }
    get params() {
        const params = {};
        const pattern = new RegExp(`^data-${this.identifier}-(.+)-param$`);
        for (const { name , value  } of Array.from(this.element.attributes)){
            const match = name.match(pattern);
            const key = match && match[1];
            if (key) params[camelize(key)] = typecast(value);
        }
        return params;
    }
    get eventTargetName() {
        return stringifyEventTarget(this.eventTarget);
    }
    constructor(element, index, descriptor){
        this.element = element;
        this.index = index;
        this.eventTarget = descriptor.eventTarget || element;
        this.eventName = descriptor.eventName || getDefaultEventNameForElement(element) || error("missing event name");
        this.eventOptions = descriptor.eventOptions || {};
        this.identifier = descriptor.identifier || error("missing identifier");
        this.methodName = descriptor.methodName || error("missing method name");
    }
}
const defaultEventNames = {
    "a": (e)=>"click",
    "button": (e)=>"click",
    "form": (e)=>"submit",
    "details": (e)=>"toggle",
    "input": (e)=>e.getAttribute("type") == "submit" ? "click" : "input",
    "select": (e)=>"change",
    "textarea": (e)=>"input"
};
function getDefaultEventNameForElement(element) {
    const tagName = element.tagName.toLowerCase();
    if (tagName in defaultEventNames) return defaultEventNames[tagName](element);
}
function error(message) {
    throw new Error(message);
}
function typecast(value) {
    try {
        return JSON.parse(value);
    } catch (o_O) {
        return value;
    }
}
class Binding {
    get index() {
        return this.action.index;
    }
    get eventTarget() {
        return this.action.eventTarget;
    }
    get eventOptions() {
        return this.action.eventOptions;
    }
    get identifier() {
        return this.context.identifier;
    }
    handleEvent(event) {
        if (this.willBeInvokedByEvent(event) && this.shouldBeInvokedPerSelf(event)) {
            this.processStopPropagation(event);
            this.processPreventDefault(event);
            this.invokeWithEvent(event);
        }
    }
    get eventName() {
        return this.action.eventName;
    }
    get method() {
        const method = this.controller[this.methodName];
        if (typeof method == "function") return method;
        throw new Error(`Action "${this.action}" references undefined method "${this.methodName}"`);
    }
    processStopPropagation(event) {
        if (this.eventOptions.stop) event.stopPropagation();
    }
    processPreventDefault(event) {
        if (this.eventOptions.prevent) event.preventDefault();
    }
    invokeWithEvent(event) {
        const { target , currentTarget  } = event;
        try {
            const { params  } = this.action;
            const actionEvent = Object.assign(event, {
                params
            });
            this.method.call(this.controller, actionEvent);
            this.context.logDebugActivity(this.methodName, {
                event,
                target,
                currentTarget,
                action: this.methodName
            });
        } catch (error) {
            const { identifier , controller , element , index  } = this;
            const detail = {
                identifier,
                controller,
                element,
                index,
                event
            };
            this.context.handleError(error, `invoking action "${this.action}"`, detail);
        }
    }
    shouldBeInvokedPerSelf(event) {
        if (this.action.eventOptions.self === true) return this.action.element === event.target;
        else return true;
    }
    willBeInvokedByEvent(event) {
        const eventTarget = event.target;
        if (this.element === eventTarget) return true;
        else if (eventTarget instanceof Element && this.element.contains(eventTarget)) return this.scope.containsElement(eventTarget);
        else return this.scope.containsElement(this.action.element);
    }
    get controller() {
        return this.context.controller;
    }
    get methodName() {
        return this.action.methodName;
    }
    get element() {
        return this.scope.element;
    }
    get scope() {
        return this.context.scope;
    }
    constructor(context, action){
        this.context = context;
        this.action = action;
    }
}
class ElementObserver {
    start() {
        if (!this.started) {
            this.started = true;
            this.mutationObserver.observe(this.element, this.mutationObserverInit);
            this.refresh();
        }
    }
    pause(callback) {
        if (this.started) {
            this.mutationObserver.disconnect();
            this.started = false;
        }
        callback();
        if (!this.started) {
            this.mutationObserver.observe(this.element, this.mutationObserverInit);
            this.started = true;
        }
    }
    stop() {
        if (this.started) {
            this.mutationObserver.takeRecords();
            this.mutationObserver.disconnect();
            this.started = false;
        }
    }
    refresh() {
        if (this.started) {
            const matches = new Set(this.matchElementsInTree());
            for (const element of Array.from(this.elements))if (!matches.has(element)) this.removeElement(element);
            for (const element1 of Array.from(matches))this.addElement(element1);
        }
    }
    processMutations(mutations) {
        if (this.started) for (const mutation of mutations)this.processMutation(mutation);
    }
    processMutation(mutation) {
        if (mutation.type == "attributes") this.processAttributeChange(mutation.target, mutation.attributeName);
        else if (mutation.type == "childList") {
            this.processRemovedNodes(mutation.removedNodes);
            this.processAddedNodes(mutation.addedNodes);
        }
    }
    processAttributeChange(node, attributeName) {
        const element = node;
        if (this.elements.has(element)) {
            if (this.delegate.elementAttributeChanged && this.matchElement(element)) this.delegate.elementAttributeChanged(element, attributeName);
            else this.removeElement(element);
        } else if (this.matchElement(element)) this.addElement(element);
    }
    processRemovedNodes(nodes) {
        for (const node of Array.from(nodes)){
            const element = this.elementFromNode(node);
            if (element) this.processTree(element, this.removeElement);
        }
    }
    processAddedNodes(nodes) {
        for (const node of Array.from(nodes)){
            const element = this.elementFromNode(node);
            if (element && this.elementIsActive(element)) this.processTree(element, this.addElement);
        }
    }
    matchElement(element) {
        return this.delegate.matchElement(element);
    }
    matchElementsInTree(tree = this.element) {
        return this.delegate.matchElementsInTree(tree);
    }
    processTree(tree, processor) {
        for (const element of this.matchElementsInTree(tree))processor.call(this, element);
    }
    elementFromNode(node) {
        if (node.nodeType == Node.ELEMENT_NODE) return node;
    }
    elementIsActive(element) {
        if (element.isConnected != this.element.isConnected) return false;
        else return this.element.contains(element);
    }
    addElement(element) {
        if (!this.elements.has(element)) {
            if (this.elementIsActive(element)) {
                this.elements.add(element);
                if (this.delegate.elementMatched) this.delegate.elementMatched(element);
            }
        }
    }
    removeElement(element) {
        if (this.elements.has(element)) {
            this.elements.delete(element);
            if (this.delegate.elementUnmatched) this.delegate.elementUnmatched(element);
        }
    }
    constructor(element, delegate){
        this.mutationObserverInit = {
            attributes: true,
            childList: true,
            subtree: true
        };
        this.element = element;
        this.started = false;
        this.delegate = delegate;
        this.elements = new Set;
        this.mutationObserver = new MutationObserver((mutations)=>this.processMutations(mutations));
    }
}
class AttributeObserver {
    get element() {
        return this.elementObserver.element;
    }
    get selector() {
        return `[${this.attributeName}]`;
    }
    start() {
        this.elementObserver.start();
    }
    pause(callback) {
        this.elementObserver.pause(callback);
    }
    stop() {
        this.elementObserver.stop();
    }
    refresh() {
        this.elementObserver.refresh();
    }
    get started() {
        return this.elementObserver.started;
    }
    matchElement(element) {
        return element.hasAttribute(this.attributeName);
    }
    matchElementsInTree(tree) {
        const match = this.matchElement(tree) ? [
            tree
        ] : [];
        const matches = Array.from(tree.querySelectorAll(this.selector));
        return match.concat(matches);
    }
    elementMatched(element) {
        if (this.delegate.elementMatchedAttribute) this.delegate.elementMatchedAttribute(element, this.attributeName);
    }
    elementUnmatched(element) {
        if (this.delegate.elementUnmatchedAttribute) this.delegate.elementUnmatchedAttribute(element, this.attributeName);
    }
    elementAttributeChanged(element, attributeName) {
        if (this.delegate.elementAttributeValueChanged && this.attributeName == attributeName) this.delegate.elementAttributeValueChanged(element, attributeName);
    }
    constructor(element, attributeName, delegate){
        this.attributeName = attributeName;
        this.delegate = delegate;
        this.elementObserver = new ElementObserver(element, this);
    }
}
class StringMapObserver {
    start() {
        if (!this.started) {
            this.started = true;
            this.mutationObserver.observe(this.element, {
                attributes: true,
                attributeOldValue: true
            });
            this.refresh();
        }
    }
    stop() {
        if (this.started) {
            this.mutationObserver.takeRecords();
            this.mutationObserver.disconnect();
            this.started = false;
        }
    }
    refresh() {
        if (this.started) for (const attributeName of this.knownAttributeNames)this.refreshAttribute(attributeName, null);
    }
    processMutations(mutations) {
        if (this.started) for (const mutation of mutations)this.processMutation(mutation);
    }
    processMutation(mutation) {
        const attributeName = mutation.attributeName;
        if (attributeName) this.refreshAttribute(attributeName, mutation.oldValue);
    }
    refreshAttribute(attributeName, oldValue) {
        const key = this.delegate.getStringMapKeyForAttribute(attributeName);
        if (key != null) {
            if (!this.stringMap.has(attributeName)) this.stringMapKeyAdded(key, attributeName);
            const value = this.element.getAttribute(attributeName);
            if (this.stringMap.get(attributeName) != value) this.stringMapValueChanged(value, key, oldValue);
            if (value == null) {
                const oldValue1 = this.stringMap.get(attributeName);
                this.stringMap.delete(attributeName);
                if (oldValue1) this.stringMapKeyRemoved(key, attributeName, oldValue1);
            } else this.stringMap.set(attributeName, value);
        }
    }
    stringMapKeyAdded(key, attributeName) {
        if (this.delegate.stringMapKeyAdded) this.delegate.stringMapKeyAdded(key, attributeName);
    }
    stringMapValueChanged(value, key, oldValue) {
        if (this.delegate.stringMapValueChanged) this.delegate.stringMapValueChanged(value, key, oldValue);
    }
    stringMapKeyRemoved(key, attributeName, oldValue) {
        if (this.delegate.stringMapKeyRemoved) this.delegate.stringMapKeyRemoved(key, attributeName, oldValue);
    }
    get knownAttributeNames() {
        return Array.from(new Set(this.currentAttributeNames.concat(this.recordedAttributeNames)));
    }
    get currentAttributeNames() {
        return Array.from(this.element.attributes).map((attribute)=>attribute.name);
    }
    get recordedAttributeNames() {
        return Array.from(this.stringMap.keys());
    }
    constructor(element, delegate){
        this.element = element;
        this.delegate = delegate;
        this.started = false;
        this.stringMap = new Map;
        this.mutationObserver = new MutationObserver((mutations)=>this.processMutations(mutations));
    }
}
function add(map, key, value) {
    fetch(map, key).add(value);
}
function del(map, key, value) {
    fetch(map, key).delete(value);
    prune(map, key);
}
function fetch(map, key) {
    let values = map.get(key);
    if (!values) {
        values = new Set();
        map.set(key, values);
    }
    return values;
}
function prune(map, key) {
    const values = map.get(key);
    if (values != null && values.size == 0) map.delete(key);
}
class Multimap {
    get keys() {
        return Array.from(this.valuesByKey.keys());
    }
    get values() {
        const sets = Array.from(this.valuesByKey.values());
        return sets.reduce((values, set)=>values.concat(Array.from(set)), []);
    }
    get size() {
        const sets = Array.from(this.valuesByKey.values());
        return sets.reduce((size, set)=>size + set.size, 0);
    }
    add(key, value) {
        add(this.valuesByKey, key, value);
    }
    delete(key, value) {
        del(this.valuesByKey, key, value);
    }
    has(key, value) {
        const values = this.valuesByKey.get(key);
        return values != null && values.has(value);
    }
    hasKey(key) {
        return this.valuesByKey.has(key);
    }
    hasValue(value) {
        const sets = Array.from(this.valuesByKey.values());
        return sets.some((set)=>set.has(value));
    }
    getValuesForKey(key) {
        const values = this.valuesByKey.get(key);
        return values ? Array.from(values) : [];
    }
    getKeysForValue(value) {
        return Array.from(this.valuesByKey).filter(([key, values])=>values.has(value)).map(([key, values])=>key);
    }
    constructor(){
        this.valuesByKey = new Map();
    }
}
class IndexedMultimap extends Multimap {
    get values() {
        return Array.from(this.keysByValue.keys());
    }
    add(key, value) {
        super.add(key, value);
        add(this.keysByValue, value, key);
    }
    delete(key, value) {
        super.delete(key, value);
        del(this.keysByValue, value, key);
    }
    hasValue(value) {
        return this.keysByValue.has(value);
    }
    getKeysForValue(value) {
        const set = this.keysByValue.get(value);
        return set ? Array.from(set) : [];
    }
    constructor(){
        super();
        this.keysByValue = new Map;
    }
}
class TokenListObserver {
    get started() {
        return this.attributeObserver.started;
    }
    start() {
        this.attributeObserver.start();
    }
    pause(callback) {
        this.attributeObserver.pause(callback);
    }
    stop() {
        this.attributeObserver.stop();
    }
    refresh() {
        this.attributeObserver.refresh();
    }
    get element() {
        return this.attributeObserver.element;
    }
    get attributeName() {
        return this.attributeObserver.attributeName;
    }
    elementMatchedAttribute(element) {
        this.tokensMatched(this.readTokensForElement(element));
    }
    elementAttributeValueChanged(element) {
        const [unmatchedTokens, matchedTokens] = this.refreshTokensForElement(element);
        this.tokensUnmatched(unmatchedTokens);
        this.tokensMatched(matchedTokens);
    }
    elementUnmatchedAttribute(element) {
        this.tokensUnmatched(this.tokensByElement.getValuesForKey(element));
    }
    tokensMatched(tokens) {
        tokens.forEach((token)=>this.tokenMatched(token));
    }
    tokensUnmatched(tokens) {
        tokens.forEach((token)=>this.tokenUnmatched(token));
    }
    tokenMatched(token) {
        this.delegate.tokenMatched(token);
        this.tokensByElement.add(token.element, token);
    }
    tokenUnmatched(token) {
        this.delegate.tokenUnmatched(token);
        this.tokensByElement.delete(token.element, token);
    }
    refreshTokensForElement(element) {
        const previousTokens = this.tokensByElement.getValuesForKey(element);
        const currentTokens = this.readTokensForElement(element);
        const firstDifferingIndex = zip(previousTokens, currentTokens).findIndex(([previousToken, currentToken])=>!tokensAreEqual(previousToken, currentToken));
        if (firstDifferingIndex == -1) return [
            [],
            []
        ];
        else return [
            previousTokens.slice(firstDifferingIndex),
            currentTokens.slice(firstDifferingIndex)
        ];
    }
    readTokensForElement(element) {
        const attributeName = this.attributeName;
        const tokenString = element.getAttribute(attributeName) || "";
        return parseTokenString(tokenString, element, attributeName);
    }
    constructor(element, attributeName, delegate){
        this.attributeObserver = new AttributeObserver(element, attributeName, this);
        this.delegate = delegate;
        this.tokensByElement = new Multimap;
    }
}
function parseTokenString(tokenString, element, attributeName) {
    return tokenString.trim().split(/\s+/).filter((content)=>content.length).map((content, index)=>({
            element,
            attributeName,
            content,
            index
        }));
}
function zip(left, right) {
    const length = Math.max(left.length, right.length);
    return Array.from({
        length
    }, (_, index)=>[
            left[index],
            right[index]
        ]);
}
function tokensAreEqual(left, right) {
    return left && right && left.index == right.index && left.content == right.content;
}
class ValueListObserver {
    get started() {
        return this.tokenListObserver.started;
    }
    start() {
        this.tokenListObserver.start();
    }
    stop() {
        this.tokenListObserver.stop();
    }
    refresh() {
        this.tokenListObserver.refresh();
    }
    get element() {
        return this.tokenListObserver.element;
    }
    get attributeName() {
        return this.tokenListObserver.attributeName;
    }
    tokenMatched(token) {
        const { element  } = token;
        const { value  } = this.fetchParseResultForToken(token);
        if (value) {
            this.fetchValuesByTokenForElement(element).set(token, value);
            this.delegate.elementMatchedValue(element, value);
        }
    }
    tokenUnmatched(token) {
        const { element  } = token;
        const { value  } = this.fetchParseResultForToken(token);
        if (value) {
            this.fetchValuesByTokenForElement(element).delete(token);
            this.delegate.elementUnmatchedValue(element, value);
        }
    }
    fetchParseResultForToken(token) {
        let parseResult = this.parseResultsByToken.get(token);
        if (!parseResult) {
            parseResult = this.parseToken(token);
            this.parseResultsByToken.set(token, parseResult);
        }
        return parseResult;
    }
    fetchValuesByTokenForElement(element) {
        let valuesByToken = this.valuesByTokenByElement.get(element);
        if (!valuesByToken) {
            valuesByToken = new Map;
            this.valuesByTokenByElement.set(element, valuesByToken);
        }
        return valuesByToken;
    }
    parseToken(token) {
        try {
            const value = this.delegate.parseValueForToken(token);
            return {
                value
            };
        } catch (error) {
            return {
                error
            };
        }
    }
    constructor(element, attributeName, delegate){
        this.tokenListObserver = new TokenListObserver(element, attributeName, this);
        this.delegate = delegate;
        this.parseResultsByToken = new WeakMap;
        this.valuesByTokenByElement = new WeakMap;
    }
}
class BindingObserver {
    start() {
        if (!this.valueListObserver) {
            this.valueListObserver = new ValueListObserver(this.element, this.actionAttribute, this);
            this.valueListObserver.start();
        }
    }
    stop() {
        if (this.valueListObserver) {
            this.valueListObserver.stop();
            delete this.valueListObserver;
            this.disconnectAllActions();
        }
    }
    get element() {
        return this.context.element;
    }
    get identifier() {
        return this.context.identifier;
    }
    get actionAttribute() {
        return this.schema.actionAttribute;
    }
    get schema() {
        return this.context.schema;
    }
    get bindings() {
        return Array.from(this.bindingsByAction.values());
    }
    connectAction(action) {
        const binding = new Binding(this.context, action);
        this.bindingsByAction.set(action, binding);
        this.delegate.bindingConnected(binding);
    }
    disconnectAction(action) {
        const binding = this.bindingsByAction.get(action);
        if (binding) {
            this.bindingsByAction.delete(action);
            this.delegate.bindingDisconnected(binding);
        }
    }
    disconnectAllActions() {
        this.bindings.forEach((binding)=>this.delegate.bindingDisconnected(binding));
        this.bindingsByAction.clear();
    }
    parseValueForToken(token) {
        const action = Action.forToken(token);
        if (action.identifier == this.identifier) return action;
    }
    elementMatchedValue(element, action) {
        this.connectAction(action);
    }
    elementUnmatchedValue(element, action) {
        this.disconnectAction(action);
    }
    constructor(context, delegate){
        this.context = context;
        this.delegate = delegate;
        this.bindingsByAction = new Map;
    }
}
class ValueObserver {
    start() {
        this.stringMapObserver.start();
        this.invokeChangedCallbacksForDefaultValues();
    }
    stop() {
        this.stringMapObserver.stop();
    }
    get element() {
        return this.context.element;
    }
    get controller() {
        return this.context.controller;
    }
    getStringMapKeyForAttribute(attributeName) {
        if (attributeName in this.valueDescriptorMap) return this.valueDescriptorMap[attributeName].name;
    }
    stringMapKeyAdded(key, attributeName) {
        const descriptor = this.valueDescriptorMap[attributeName];
        if (!this.hasValue(key)) this.invokeChangedCallback(key, descriptor.writer(this.receiver[key]), descriptor.writer(descriptor.defaultValue));
    }
    stringMapValueChanged(value, name, oldValue) {
        const descriptor = this.valueDescriptorNameMap[name];
        if (value === null) return;
        if (oldValue === null) oldValue = descriptor.writer(descriptor.defaultValue);
        this.invokeChangedCallback(name, value, oldValue);
    }
    stringMapKeyRemoved(key, attributeName, oldValue) {
        const descriptor = this.valueDescriptorNameMap[key];
        if (this.hasValue(key)) this.invokeChangedCallback(key, descriptor.writer(this.receiver[key]), oldValue);
        else this.invokeChangedCallback(key, descriptor.writer(descriptor.defaultValue), oldValue);
    }
    invokeChangedCallbacksForDefaultValues() {
        for (const { key , name , defaultValue , writer  } of this.valueDescriptors)if (defaultValue != undefined && !this.controller.data.has(key)) this.invokeChangedCallback(name, writer(defaultValue), undefined);
    }
    invokeChangedCallback(name, rawValue, rawOldValue) {
        const changedMethodName = `${name}Changed`;
        const changedMethod = this.receiver[changedMethodName];
        if (typeof changedMethod == "function") {
            const descriptor = this.valueDescriptorNameMap[name];
            try {
                const value = descriptor.reader(rawValue);
                let oldValue = rawOldValue;
                if (rawOldValue) oldValue = descriptor.reader(rawOldValue);
                changedMethod.call(this.receiver, value, oldValue);
            } catch (error) {
                if (!(error instanceof TypeError)) throw error;
                throw new TypeError(`Stimulus Value "${this.context.identifier}.${descriptor.name}" - ${error.message}`);
            }
        }
    }
    get valueDescriptors() {
        const { valueDescriptorMap  } = this;
        return Object.keys(valueDescriptorMap).map((key)=>valueDescriptorMap[key]);
    }
    get valueDescriptorNameMap() {
        const descriptors = {};
        Object.keys(this.valueDescriptorMap).forEach((key)=>{
            const descriptor = this.valueDescriptorMap[key];
            descriptors[descriptor.name] = descriptor;
        });
        return descriptors;
    }
    hasValue(attributeName) {
        const descriptor = this.valueDescriptorNameMap[attributeName];
        const hasMethodName = `has${capitalize(descriptor.name)}`;
        return this.receiver[hasMethodName];
    }
    constructor(context, receiver){
        this.context = context;
        this.receiver = receiver;
        this.stringMapObserver = new StringMapObserver(this.element, this);
        this.valueDescriptorMap = this.controller.valueDescriptorMap;
    }
}
class TargetObserver {
    start() {
        if (!this.tokenListObserver) {
            this.tokenListObserver = new TokenListObserver(this.element, this.attributeName, this);
            this.tokenListObserver.start();
        }
    }
    stop() {
        if (this.tokenListObserver) {
            this.disconnectAllTargets();
            this.tokenListObserver.stop();
            delete this.tokenListObserver;
        }
    }
    tokenMatched({ element , content: name  }) {
        if (this.scope.containsElement(element)) this.connectTarget(element, name);
    }
    tokenUnmatched({ element , content: name  }) {
        this.disconnectTarget(element, name);
    }
    connectTarget(element, name) {
        var _a;
        if (!this.targetsByName.has(name, element)) {
            this.targetsByName.add(name, element);
            (_a = this.tokenListObserver) === null || _a === void 0 || _a.pause(()=>this.delegate.targetConnected(element, name));
        }
    }
    disconnectTarget(element, name) {
        var _a;
        if (this.targetsByName.has(name, element)) {
            this.targetsByName.delete(name, element);
            (_a = this.tokenListObserver) === null || _a === void 0 || _a.pause(()=>this.delegate.targetDisconnected(element, name));
        }
    }
    disconnectAllTargets() {
        for (const name of this.targetsByName.keys)for (const element of this.targetsByName.getValuesForKey(name))this.disconnectTarget(element, name);
    }
    get attributeName() {
        return `data-${this.context.identifier}-target`;
    }
    get element() {
        return this.context.element;
    }
    get scope() {
        return this.context.scope;
    }
    constructor(context, delegate){
        this.context = context;
        this.delegate = delegate;
        this.targetsByName = new Multimap;
    }
}
class Context {
    connect() {
        this.bindingObserver.start();
        this.valueObserver.start();
        this.targetObserver.start();
        try {
            this.controller.connect();
            this.logDebugActivity("connect");
        } catch (error) {
            this.handleError(error, "connecting controller");
        }
    }
    disconnect() {
        try {
            this.controller.disconnect();
            this.logDebugActivity("disconnect");
        } catch (error) {
            this.handleError(error, "disconnecting controller");
        }
        this.targetObserver.stop();
        this.valueObserver.stop();
        this.bindingObserver.stop();
    }
    get application() {
        return this.module.application;
    }
    get identifier() {
        return this.module.identifier;
    }
    get schema() {
        return this.application.schema;
    }
    get dispatcher() {
        return this.application.dispatcher;
    }
    get element() {
        return this.scope.element;
    }
    get parentElement() {
        return this.element.parentElement;
    }
    handleError(error, message, detail = {}) {
        const { identifier , controller , element  } = this;
        detail = Object.assign({
            identifier,
            controller,
            element
        }, detail);
        this.application.handleError(error, `Error ${message}`, detail);
    }
    targetConnected(element, name) {
        this.invokeControllerMethod(`${name}TargetConnected`, element);
    }
    targetDisconnected(element, name) {
        this.invokeControllerMethod(`${name}TargetDisconnected`, element);
    }
    invokeControllerMethod(methodName, ...args) {
        const controller = this.controller;
        if (typeof controller[methodName] == "function") controller[methodName](...args);
    }
    constructor(module, scope){
        this.logDebugActivity = (functionName, detail = {})=>{
            const { identifier , controller , element  } = this;
            detail = Object.assign({
                identifier,
                controller,
                element
            }, detail);
            this.application.logDebugActivity(this.identifier, functionName, detail);
        };
        this.module = module;
        this.scope = scope;
        this.controller = new module.controllerConstructor(this);
        this.bindingObserver = new BindingObserver(this, this.dispatcher);
        this.valueObserver = new ValueObserver(this, this.controller);
        this.targetObserver = new TargetObserver(this, this);
        try {
            this.controller.initialize();
            this.logDebugActivity("initialize");
        } catch (error) {
            this.handleError(error, "initializing controller");
        }
    }
}
function readInheritableStaticArrayValues(constructor, propertyName) {
    const ancestors = getAncestorsForConstructor(constructor);
    return Array.from(ancestors.reduce((values, constructor)=>{
        getOwnStaticArrayValues(constructor, propertyName).forEach((name)=>values.add(name));
        return values;
    }, new Set));
}
function readInheritableStaticObjectPairs(constructor, propertyName) {
    const ancestors = getAncestorsForConstructor(constructor);
    return ancestors.reduce((pairs, constructor)=>{
        pairs.push(...getOwnStaticObjectPairs(constructor, propertyName));
        return pairs;
    }, []);
}
function getAncestorsForConstructor(constructor) {
    const ancestors = [];
    while(constructor){
        ancestors.push(constructor);
        constructor = Object.getPrototypeOf(constructor);
    }
    return ancestors.reverse();
}
function getOwnStaticArrayValues(constructor, propertyName) {
    const definition = constructor[propertyName];
    return Array.isArray(definition) ? definition : [];
}
function getOwnStaticObjectPairs(constructor, propertyName) {
    const definition = constructor[propertyName];
    return definition ? Object.keys(definition).map((key)=>[
            key,
            definition[key]
        ]) : [];
}
function bless(constructor) {
    return shadow(constructor, getBlessedProperties(constructor));
}
function shadow(constructor, properties) {
    const shadowConstructor = extend(constructor);
    const shadowProperties = getShadowProperties(constructor.prototype, properties);
    Object.defineProperties(shadowConstructor.prototype, shadowProperties);
    return shadowConstructor;
}
function getBlessedProperties(constructor) {
    const blessings = readInheritableStaticArrayValues(constructor, "blessings");
    return blessings.reduce((blessedProperties, blessing)=>{
        const properties = blessing(constructor);
        for(const key in properties){
            const descriptor = blessedProperties[key] || {};
            blessedProperties[key] = Object.assign(descriptor, properties[key]);
        }
        return blessedProperties;
    }, {});
}
function getShadowProperties(prototype, properties) {
    return getOwnKeys(properties).reduce((shadowProperties, key)=>{
        const descriptor = getShadowedDescriptor(prototype, properties, key);
        if (descriptor) Object.assign(shadowProperties, {
            [key]: descriptor
        });
        return shadowProperties;
    }, {});
}
function getShadowedDescriptor(prototype, properties, key) {
    const shadowingDescriptor = Object.getOwnPropertyDescriptor(prototype, key);
    const shadowedByValue = shadowingDescriptor && "value" in shadowingDescriptor;
    if (!shadowedByValue) {
        const descriptor = Object.getOwnPropertyDescriptor(properties, key).value;
        if (shadowingDescriptor) {
            descriptor.get = shadowingDescriptor.get || descriptor.get;
            descriptor.set = shadowingDescriptor.set || descriptor.set;
        }
        return descriptor;
    }
}
const getOwnKeys = (()=>{
    if (typeof Object.getOwnPropertySymbols == "function") return (object)=>[
            ...Object.getOwnPropertyNames(object),
            ...Object.getOwnPropertySymbols(object)
        ];
    else return Object.getOwnPropertyNames;
})();
const extend = (()=>{
    function extendWithReflect(constructor) {
        function extended() {
            return Reflect.construct(constructor, arguments, new.target);
        }
        extended.prototype = Object.create(constructor.prototype, {
            constructor: {
                value: extended
            }
        });
        Reflect.setPrototypeOf(extended, constructor);
        return extended;
    }
    function testReflectExtension() {
        const a = function() {
            this.a.call(this);
        };
        const b = extendWithReflect(a);
        b.prototype.a = function() {};
        return new b;
    }
    try {
        testReflectExtension();
        return extendWithReflect;
    } catch (error) {
        return (constructor)=>class extended extends constructor {
            };
    }
})();
function blessDefinition(definition) {
    return {
        identifier: definition.identifier,
        controllerConstructor: bless(definition.controllerConstructor)
    };
}
class Module {
    get identifier() {
        return this.definition.identifier;
    }
    get controllerConstructor() {
        return this.definition.controllerConstructor;
    }
    get contexts() {
        return Array.from(this.connectedContexts);
    }
    connectContextForScope(scope) {
        const context = this.fetchContextForScope(scope);
        this.connectedContexts.add(context);
        context.connect();
    }
    disconnectContextForScope(scope) {
        const context = this.contextsByScope.get(scope);
        if (context) {
            this.connectedContexts.delete(context);
            context.disconnect();
        }
    }
    fetchContextForScope(scope) {
        let context = this.contextsByScope.get(scope);
        if (!context) {
            context = new Context(this, scope);
            this.contextsByScope.set(scope, context);
        }
        return context;
    }
    constructor(application, definition){
        this.application = application;
        this.definition = blessDefinition(definition);
        this.contextsByScope = new WeakMap;
        this.connectedContexts = new Set;
    }
}
class ClassMap {
    has(name) {
        return this.data.has(this.getDataKey(name));
    }
    get(name) {
        return this.getAll(name)[0];
    }
    getAll(name) {
        const tokenString = this.data.get(this.getDataKey(name)) || "";
        return tokenize(tokenString);
    }
    getAttributeName(name) {
        return this.data.getAttributeNameForKey(this.getDataKey(name));
    }
    getDataKey(name) {
        return `${name}-class`;
    }
    get data() {
        return this.scope.data;
    }
    constructor(scope){
        this.scope = scope;
    }
}
class DataMap {
    get element() {
        return this.scope.element;
    }
    get identifier() {
        return this.scope.identifier;
    }
    get(key) {
        const name = this.getAttributeNameForKey(key);
        return this.element.getAttribute(name);
    }
    set(key, value) {
        const name = this.getAttributeNameForKey(key);
        this.element.setAttribute(name, value);
        return this.get(key);
    }
    has(key) {
        const name = this.getAttributeNameForKey(key);
        return this.element.hasAttribute(name);
    }
    delete(key) {
        if (this.has(key)) {
            const name = this.getAttributeNameForKey(key);
            this.element.removeAttribute(name);
            return true;
        } else return false;
    }
    getAttributeNameForKey(key) {
        return `data-${this.identifier}-${dasherize(key)}`;
    }
    constructor(scope){
        this.scope = scope;
    }
}
class Guide {
    warn(object, key, message) {
        let warnedKeys = this.warnedKeysByObject.get(object);
        if (!warnedKeys) {
            warnedKeys = new Set;
            this.warnedKeysByObject.set(object, warnedKeys);
        }
        if (!warnedKeys.has(key)) {
            warnedKeys.add(key);
            this.logger.warn(message, object);
        }
    }
    constructor(logger){
        this.warnedKeysByObject = new WeakMap;
        this.logger = logger;
    }
}
function attributeValueContainsToken(attributeName, token) {
    return `[${attributeName}~="${token}"]`;
}
class TargetSet {
    get element() {
        return this.scope.element;
    }
    get identifier() {
        return this.scope.identifier;
    }
    get schema() {
        return this.scope.schema;
    }
    has(targetName) {
        return this.find(targetName) != null;
    }
    find(...targetNames) {
        return targetNames.reduce((target, targetName)=>target || this.findTarget(targetName) || this.findLegacyTarget(targetName), undefined);
    }
    findAll(...targetNames) {
        return targetNames.reduce((targets, targetName)=>[
                ...targets,
                ...this.findAllTargets(targetName),
                ...this.findAllLegacyTargets(targetName)
            ], []);
    }
    findTarget(targetName) {
        const selector = this.getSelectorForTargetName(targetName);
        return this.scope.findElement(selector);
    }
    findAllTargets(targetName) {
        const selector = this.getSelectorForTargetName(targetName);
        return this.scope.findAllElements(selector);
    }
    getSelectorForTargetName(targetName) {
        const attributeName = this.schema.targetAttributeForScope(this.identifier);
        return attributeValueContainsToken(attributeName, targetName);
    }
    findLegacyTarget(targetName) {
        const selector = this.getLegacySelectorForTargetName(targetName);
        return this.deprecate(this.scope.findElement(selector), targetName);
    }
    findAllLegacyTargets(targetName) {
        const selector = this.getLegacySelectorForTargetName(targetName);
        return this.scope.findAllElements(selector).map((element)=>this.deprecate(element, targetName));
    }
    getLegacySelectorForTargetName(targetName) {
        const targetDescriptor = `${this.identifier}.${targetName}`;
        return attributeValueContainsToken(this.schema.targetAttribute, targetDescriptor);
    }
    deprecate(element, targetName) {
        if (element) {
            const { identifier  } = this;
            const attributeName = this.schema.targetAttribute;
            const revisedAttributeName = this.schema.targetAttributeForScope(identifier);
            this.guide.warn(element, `target:${targetName}`, `Please replace ${attributeName}="${identifier}.${targetName}" with ${revisedAttributeName}="${targetName}". ` + `The ${attributeName} attribute is deprecated and will be removed in a future version of Stimulus.`);
        }
        return element;
    }
    get guide() {
        return this.scope.guide;
    }
    constructor(scope){
        this.scope = scope;
    }
}
class Scope {
    findElement(selector) {
        return this.element.matches(selector) ? this.element : this.queryElements(selector).find(this.containsElement);
    }
    findAllElements(selector) {
        return [
            ...this.element.matches(selector) ? [
                this.element
            ] : [],
            ...this.queryElements(selector).filter(this.containsElement)
        ];
    }
    queryElements(selector) {
        return Array.from(this.element.querySelectorAll(selector));
    }
    get controllerSelector() {
        return attributeValueContainsToken(this.schema.controllerAttribute, this.identifier);
    }
    constructor(schema, element, identifier, logger){
        this.targets = new TargetSet(this);
        this.classes = new ClassMap(this);
        this.data = new DataMap(this);
        this.containsElement = (element)=>{
            return element.closest(this.controllerSelector) === this.element;
        };
        this.schema = schema;
        this.element = element;
        this.identifier = identifier;
        this.guide = new Guide(logger);
    }
}
class ScopeObserver {
    start() {
        this.valueListObserver.start();
    }
    stop() {
        this.valueListObserver.stop();
    }
    get controllerAttribute() {
        return this.schema.controllerAttribute;
    }
    parseValueForToken(token) {
        const { element , content: identifier  } = token;
        const scopesByIdentifier = this.fetchScopesByIdentifierForElement(element);
        let scope = scopesByIdentifier.get(identifier);
        if (!scope) {
            scope = this.delegate.createScopeForElementAndIdentifier(element, identifier);
            scopesByIdentifier.set(identifier, scope);
        }
        return scope;
    }
    elementMatchedValue(element, value) {
        const referenceCount = (this.scopeReferenceCounts.get(value) || 0) + 1;
        this.scopeReferenceCounts.set(value, referenceCount);
        if (referenceCount == 1) this.delegate.scopeConnected(value);
    }
    elementUnmatchedValue(element, value) {
        const referenceCount = this.scopeReferenceCounts.get(value);
        if (referenceCount) {
            this.scopeReferenceCounts.set(value, referenceCount - 1);
            if (referenceCount == 1) this.delegate.scopeDisconnected(value);
        }
    }
    fetchScopesByIdentifierForElement(element) {
        let scopesByIdentifier = this.scopesByIdentifierByElement.get(element);
        if (!scopesByIdentifier) {
            scopesByIdentifier = new Map;
            this.scopesByIdentifierByElement.set(element, scopesByIdentifier);
        }
        return scopesByIdentifier;
    }
    constructor(element, schema, delegate){
        this.element = element;
        this.schema = schema;
        this.delegate = delegate;
        this.valueListObserver = new ValueListObserver(this.element, this.controllerAttribute, this);
        this.scopesByIdentifierByElement = new WeakMap;
        this.scopeReferenceCounts = new WeakMap;
    }
}
class Router {
    get element() {
        return this.application.element;
    }
    get schema() {
        return this.application.schema;
    }
    get logger() {
        return this.application.logger;
    }
    get controllerAttribute() {
        return this.schema.controllerAttribute;
    }
    get modules() {
        return Array.from(this.modulesByIdentifier.values());
    }
    get contexts() {
        return this.modules.reduce((contexts, module)=>contexts.concat(module.contexts), []);
    }
    start() {
        this.scopeObserver.start();
    }
    stop() {
        this.scopeObserver.stop();
    }
    loadDefinition(definition) {
        this.unloadIdentifier(definition.identifier);
        const module = new Module(this.application, definition);
        this.connectModule(module);
    }
    unloadIdentifier(identifier) {
        const module = this.modulesByIdentifier.get(identifier);
        if (module) this.disconnectModule(module);
    }
    getContextForElementAndIdentifier(element, identifier) {
        const module = this.modulesByIdentifier.get(identifier);
        if (module) return module.contexts.find((context)=>context.element == element);
    }
    handleError(error, message, detail) {
        this.application.handleError(error, message, detail);
    }
    createScopeForElementAndIdentifier(element, identifier) {
        return new Scope(this.schema, element, identifier, this.logger);
    }
    scopeConnected(scope) {
        this.scopesByIdentifier.add(scope.identifier, scope);
        const module = this.modulesByIdentifier.get(scope.identifier);
        if (module) module.connectContextForScope(scope);
    }
    scopeDisconnected(scope) {
        this.scopesByIdentifier.delete(scope.identifier, scope);
        const module = this.modulesByIdentifier.get(scope.identifier);
        if (module) module.disconnectContextForScope(scope);
    }
    connectModule(module) {
        this.modulesByIdentifier.set(module.identifier, module);
        const scopes = this.scopesByIdentifier.getValuesForKey(module.identifier);
        scopes.forEach((scope)=>module.connectContextForScope(scope));
    }
    disconnectModule(module) {
        this.modulesByIdentifier.delete(module.identifier);
        const scopes = this.scopesByIdentifier.getValuesForKey(module.identifier);
        scopes.forEach((scope)=>module.disconnectContextForScope(scope));
    }
    constructor(application){
        this.application = application;
        this.scopeObserver = new ScopeObserver(this.element, this.schema, this);
        this.scopesByIdentifier = new Multimap;
        this.modulesByIdentifier = new Map;
    }
}
const defaultSchema = {
    controllerAttribute: "data-controller",
    actionAttribute: "data-action",
    targetAttribute: "data-target",
    targetAttributeForScope: (identifier)=>`data-${identifier}-target`
};
class Application {
    static start(element, schema) {
        const application = new Application(element, schema);
        application.start();
        return application;
    }
    async start() {
        await domReady();
        this.logDebugActivity("application", "starting");
        this.dispatcher.start();
        this.router.start();
        this.logDebugActivity("application", "start");
    }
    stop() {
        this.logDebugActivity("application", "stopping");
        this.dispatcher.stop();
        this.router.stop();
        this.logDebugActivity("application", "stop");
    }
    register(identifier, controllerConstructor) {
        this.load({
            identifier,
            controllerConstructor
        });
    }
    load(head, ...rest) {
        const definitions = Array.isArray(head) ? head : [
            head,
            ...rest
        ];
        definitions.forEach((definition)=>{
            if (definition.controllerConstructor.shouldLoad) this.router.loadDefinition(definition);
        });
    }
    unload(head, ...rest) {
        const identifiers = Array.isArray(head) ? head : [
            head,
            ...rest
        ];
        identifiers.forEach((identifier)=>this.router.unloadIdentifier(identifier));
    }
    get controllers() {
        return this.router.contexts.map((context)=>context.controller);
    }
    getControllerForElementAndIdentifier(element, identifier) {
        const context = this.router.getContextForElementAndIdentifier(element, identifier);
        return context ? context.controller : null;
    }
    handleError(error, message, detail) {
        var _a;
        this.logger.error(`%s\n\n%o\n\n%o`, message, error, detail);
        (_a = window.onerror) === null || _a === void 0 || _a.call(window, message, "", 0, 0, error);
    }
    logFormattedMessage(identifier, functionName, detail = {}) {
        detail = Object.assign({
            application: this
        }, detail);
        this.logger.groupCollapsed(`${identifier} #${functionName}`);
        this.logger.log("details:", Object.assign({}, detail));
        this.logger.groupEnd();
    }
    constructor(element = document.documentElement, schema = defaultSchema){
        this.logger = console;
        this.debug = false;
        this.logDebugActivity = (identifier, functionName, detail = {})=>{
            if (this.debug) this.logFormattedMessage(identifier, functionName, detail);
        };
        this.element = element;
        this.schema = schema;
        this.dispatcher = new Dispatcher(this);
        this.router = new Router(this);
    }
}
function domReady() {
    return new Promise((resolve)=>{
        if (document.readyState == "loading") document.addEventListener("DOMContentLoaded", ()=>resolve());
        else resolve();
    });
}
function ClassPropertiesBlessing(constructor) {
    const classes = readInheritableStaticArrayValues(constructor, "classes");
    return classes.reduce((properties, classDefinition)=>{
        return Object.assign(properties, propertiesForClassDefinition(classDefinition));
    }, {});
}
function propertiesForClassDefinition(key) {
    return {
        [`${key}Class`]: {
            get () {
                const { classes  } = this;
                if (classes.has(key)) return classes.get(key);
                else {
                    const attribute = classes.getAttributeName(key);
                    throw new Error(`Missing attribute "${attribute}"`);
                }
            }
        },
        [`${key}Classes`]: {
            get () {
                return this.classes.getAll(key);
            }
        },
        [`has${capitalize(key)}Class`]: {
            get () {
                return this.classes.has(key);
            }
        }
    };
}
function TargetPropertiesBlessing(constructor) {
    const targets = readInheritableStaticArrayValues(constructor, "targets");
    return targets.reduce((properties, targetDefinition)=>{
        return Object.assign(properties, propertiesForTargetDefinition(targetDefinition));
    }, {});
}
function propertiesForTargetDefinition(name) {
    return {
        [`${name}Target`]: {
            get () {
                const target = this.targets.find(name);
                if (target) return target;
                else throw new Error(`Missing target element "${name}" for "${this.identifier}" controller`);
            }
        },
        [`${name}Targets`]: {
            get () {
                return this.targets.findAll(name);
            }
        },
        [`has${capitalize(name)}Target`]: {
            get () {
                return this.targets.has(name);
            }
        }
    };
}
function ValuePropertiesBlessing(constructor) {
    const valueDefinitionPairs = readInheritableStaticObjectPairs(constructor, "values");
    const propertyDescriptorMap = {
        valueDescriptorMap: {
            get () {
                return valueDefinitionPairs.reduce((result, valueDefinitionPair)=>{
                    const valueDescriptor = parseValueDefinitionPair(valueDefinitionPair, this.identifier);
                    const attributeName = this.data.getAttributeNameForKey(valueDescriptor.key);
                    return Object.assign(result, {
                        [attributeName]: valueDescriptor
                    });
                }, {});
            }
        }
    };
    return valueDefinitionPairs.reduce((properties, valueDefinitionPair)=>{
        return Object.assign(properties, propertiesForValueDefinitionPair(valueDefinitionPair));
    }, propertyDescriptorMap);
}
function propertiesForValueDefinitionPair(valueDefinitionPair, controller) {
    const definition = parseValueDefinitionPair(valueDefinitionPair, controller);
    const { key , name , reader: read , writer: write  } = definition;
    return {
        [name]: {
            get () {
                const value = this.data.get(key);
                if (value !== null) return read(value);
                else return definition.defaultValue;
            },
            set (value) {
                if (value === undefined) this.data.delete(key);
                else this.data.set(key, write(value));
            }
        },
        [`has${capitalize(name)}`]: {
            get () {
                return this.data.has(key) || definition.hasCustomDefaultValue;
            }
        }
    };
}
function parseValueDefinitionPair([token, typeDefinition], controller) {
    return valueDescriptorForTokenAndTypeDefinition({
        controller,
        token,
        typeDefinition
    });
}
function parseValueTypeConstant(constant) {
    switch(constant){
        case Array:
            return "array";
        case Boolean:
            return "boolean";
        case Number:
            return "number";
        case Object:
            return "object";
        case String:
            return "string";
    }
}
function parseValueTypeDefault(defaultValue) {
    switch(typeof defaultValue){
        case "boolean":
            return "boolean";
        case "number":
            return "number";
        case "string":
            return "string";
    }
    if (Array.isArray(defaultValue)) return "array";
    if (Object.prototype.toString.call(defaultValue) === "[object Object]") return "object";
}
function parseValueTypeObject(payload) {
    const typeFromObject = parseValueTypeConstant(payload.typeObject.type);
    if (!typeFromObject) return;
    const defaultValueType = parseValueTypeDefault(payload.typeObject.default);
    if (typeFromObject !== defaultValueType) {
        const propertyPath = payload.controller ? `${payload.controller}.${payload.token}` : payload.token;
        throw new Error(`The specified default value for the Stimulus Value "${propertyPath}" must match the defined type "${typeFromObject}". The provided default value of "${payload.typeObject.default}" is of type "${defaultValueType}".`);
    }
    return typeFromObject;
}
function parseValueTypeDefinition(payload) {
    const typeFromObject = parseValueTypeObject({
        controller: payload.controller,
        token: payload.token,
        typeObject: payload.typeDefinition
    });
    const typeFromDefaultValue = parseValueTypeDefault(payload.typeDefinition);
    const typeFromConstant = parseValueTypeConstant(payload.typeDefinition);
    const type = typeFromObject || typeFromDefaultValue || typeFromConstant;
    if (type) return type;
    const propertyPath = payload.controller ? `${payload.controller}.${payload.typeDefinition}` : payload.token;
    throw new Error(`Unknown value type "${propertyPath}" for "${payload.token}" value`);
}
function defaultValueForDefinition(typeDefinition) {
    const constant = parseValueTypeConstant(typeDefinition);
    if (constant) return defaultValuesByType[constant];
    const defaultValue = typeDefinition.default;
    if (defaultValue !== undefined) return defaultValue;
    return typeDefinition;
}
function valueDescriptorForTokenAndTypeDefinition(payload) {
    const key = `${dasherize(payload.token)}-value`;
    const type = parseValueTypeDefinition(payload);
    return {
        type,
        key,
        name: camelize(key),
        get defaultValue () {
            return defaultValueForDefinition(payload.typeDefinition);
        },
        get hasCustomDefaultValue () {
            return parseValueTypeDefault(payload.typeDefinition) !== undefined;
        },
        reader: readers[type],
        writer: writers[type] || writers.default
    };
}
const defaultValuesByType = {
    get array () {
        return [];
    },
    boolean: false,
    number: 0,
    get object () {
        return {};
    },
    string: ""
};
const readers = {
    array (value) {
        const array = JSON.parse(value);
        if (!Array.isArray(array)) throw new TypeError(`expected value of type "array" but instead got value "${value}" of type "${parseValueTypeDefault(array)}"`);
        return array;
    },
    boolean (value) {
        return !(value == "0" || String(value).toLowerCase() == "false");
    },
    number (value) {
        return Number(value);
    },
    object (value) {
        const object = JSON.parse(value);
        if (object === null || typeof object != "object" || Array.isArray(object)) throw new TypeError(`expected value of type "object" but instead got value "${value}" of type "${parseValueTypeDefault(object)}"`);
        return object;
    },
    string (value) {
        return value;
    }
};
const writers = {
    default: writeString,
    array: writeJSON,
    object: writeJSON
};
function writeJSON(value) {
    return JSON.stringify(value);
}
function writeString(value) {
    return `${value}`;
}
class Controller {
    static get shouldLoad() {
        return true;
    }
    get application() {
        return this.context.application;
    }
    get scope() {
        return this.context.scope;
    }
    get element() {
        return this.scope.element;
    }
    get identifier() {
        return this.scope.identifier;
    }
    get targets() {
        return this.scope.targets;
    }
    get classes() {
        return this.scope.classes;
    }
    get data() {
        return this.scope.data;
    }
    initialize() {}
    connect() {}
    disconnect() {}
    dispatch(eventName, { target =this.element , detail ={} , prefix =this.identifier , bubbles =true , cancelable =true  } = {}) {
        const type = prefix ? `${prefix}:${eventName}` : eventName;
        const event = new CustomEvent(type, {
            detail,
            bubbles,
            cancelable
        });
        target.dispatchEvent(event);
        return event;
    }
    constructor(context){
        this.context = context;
    }
}
Controller.blessings = [
    ClassPropertiesBlessing,
    TargetPropertiesBlessing,
    ValuePropertiesBlessing
];
Controller.targets = [];
Controller.values = {};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"5oERU":[function(require,module,exports) {
exports.interopDefault = function(a) {
    return a && a.__esModule ? a : {
        default: a
    };
};
exports.defineInteropFlag = function(a) {
    Object.defineProperty(a, "__esModule", {
        value: true
    });
};
exports.exportAll = function(source, dest) {
    Object.keys(source).forEach(function(key) {
        if (key === "default" || key === "__esModule" || dest.hasOwnProperty(key)) return;
        Object.defineProperty(dest, key, {
            enumerable: true,
            get: function() {
                return source[key];
            }
        });
    });
    return dest;
};
exports.export = function(dest, destName, get) {
    Object.defineProperty(dest, destName, {
        enumerable: true,
        get: get
    });
};

},{}],"9OSSh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_class);
var _definePropertyMjs = require("@swc/helpers/src/_define_property.mjs");
var _definePropertyMjsDefault = parcelHelpers.interopDefault(_definePropertyMjs);
var _editorjs = require("@editorjs/editorjs");
var _editorjsDefault = parcelHelpers.interopDefault(_editorjs);
var _header = require("@editorjs/header");
var _headerDefault = parcelHelpers.interopDefault(_header);
var _nestedList = require("@editorjs/nested-list");
var _nestedListDefault = parcelHelpers.interopDefault(_nestedList);
var _underline = require("@editorjs/underline");
var _underlineDefault = parcelHelpers.interopDefault(_underline);
var _embed = require("@editorjs/embed");
var _embedDefault = parcelHelpers.interopDefault(_embed);
var _paragraph = require("@editorjs/paragraph");
var _paragraphDefault = parcelHelpers.interopDefault(_paragraph);
var _quote = require("@editorjs/quote");
var _quoteDefault = parcelHelpers.interopDefault(_quote);
var _kubikImage = require("../plugins/kubik_image");
var _kubikImageDefault = parcelHelpers.interopDefault(_kubikImage);
var _editorjsHyperlink = require("editorjs-hyperlink");
var _editorjsHyperlinkDefault = parcelHelpers.interopDefault(_editorjsHyperlink);
var _stimulus = require("@hotwired/stimulus");
class _class extends (0, _stimulus.Controller) {
    connect() {
        this.fetchContents();
        this.initializeEditor();
    }
    initializeEditor() {
        this.editor = new (0, _editorjsDefault.default)({
            holder: this.element,
            minHeight: 100,
            tools: {
                image: (0, _kubikImageDefault.default),
                paragraph: {
                    class: (0, _paragraphDefault.default),
                    inlineToolbar: [
                        "bold",
                        "underline",
                        "hyperlink",
                        "italic"
                    ]
                },
                hyperlink: {
                    class: (0, _editorjsHyperlinkDefault.default),
                    config: {}
                },
                embed: {
                    class: (0, _embedDefault.default),
                    config: {
                        services: {
                            youtube: true,
                            vimeo: true,
                            twitter: true,
                            instagram: true
                        }
                    }
                },
                header: {
                    class: (0, _headerDefault.default),
                    config: {
                        placeholder: "Add header text",
                        levels: [
                            2,
                            3,
                            4,
                            5,
                            6
                        ],
                        defaultLevel: 2
                    }
                },
                nested_list: {
                    class: (0, _nestedListDefault.default),
                    inlineToolbar: true
                },
                quote: {
                    class: (0, _quoteDefault.default),
                    inlineToolbar: true,
                    shortcut: "CMD+SHIFT+O",
                    config: {
                        quotePlaceholder: "Enter a quote",
                        captionPlaceholder: "Quote's author"
                    }
                },
                underline: (0, _underlineDefault.default)
            },
            data: this.contentValue,
            onChange: ()=>{
                this.saveContents();
            }
        });
    }
    saveContents() {
        this.editor.save().then((savedData)=>{
            this.inputTarget.value = JSON.stringify(savedData);
        }).catch((error)=>{
            console.log("Saving failed: ", error);
        });
    }
    fetchContents() {
        try {
            this.contentValue = JSON.parse(this.inputTarget.value);
        } catch (e) {
            this.contentValue = {};
        }
    }
}
(0, _definePropertyMjsDefault.default)(_class, "targets", [
    "editor",
    "input"
]);
(0, _definePropertyMjsDefault.default)(_class, "values", {
    content: Object
});

},{"@swc/helpers/src/_define_property.mjs":"aQ2HO","@editorjs/editorjs":"lPZNy","@editorjs/header":"aTv4T","@editorjs/nested-list":"8qUqD","@editorjs/underline":"85Hm2","@editorjs/embed":"bE4v2","@editorjs/paragraph":"1VRWk","@editorjs/quote":"fzjCu","../plugins/kubik_image":"cX815","editorjs-hyperlink":"hiuVf","@hotwired/stimulus":"hVNih","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"aQ2HO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _defineProperty(obj, key, value) {
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
exports.default = _defineProperty;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"lPZNy":[function(require,module,exports) {
/*! For license information please see editor.js.LICENSE.txt */ !function(t, e1) {
    module.exports = e1();
}(window, function() {
    return function(t) {
        var e1 = {};
        function n(o) {
            if (e1[o]) return e1[o].exports;
            var r = e1[o] = {
                i: o,
                l: !1,
                exports: {}
            };
            return t[o].call(r.exports, r, r.exports, n), r.l = !0, r.exports;
        }
        return n.m = t, n.c = e1, n.d = function(t, e1, o) {
            n.o(t, e1) || Object.defineProperty(t, e1, {
                enumerable: !0,
                get: o
            });
        }, n.r = function(t) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
                value: "Module"
            }), Object.defineProperty(t, "__esModule", {
                value: !0
            });
        }, n.t = function(t, e1) {
            if (1 & e1 && (t = n(t)), 8 & e1) return t;
            if (4 & e1 && "object" == typeof t && t && t.__esModule) return t;
            var o = Object.create(null);
            if (n.r(o), Object.defineProperty(o, "default", {
                enumerable: !0,
                value: t
            }), 2 & e1 && "string" != typeof t) for(var r in t)n.d(o, r, (function(e1) {
                return t[e1];
            }).bind(null, r));
            return o;
        }, n.n = function(t) {
            var e1 = t && t.__esModule ? function() {
                return t.default;
            } : function() {
                return t;
            };
            return n.d(e1, "a", e1), e1;
        }, n.o = function(t, e1) {
            return Object.prototype.hasOwnProperty.call(t, e1);
        }, n.p = "", n(n.s = 187);
    }([
        function(t, e1, n) {
            var o = n(10), r = n(17), i = n(27), a = n(23), s = n(31), l = function(t, e1, n) {
                var c, u, f, d, p = t & l.F, h = t & l.G, v = t & l.S, g = t & l.P, y = t & l.B, b = h ? o : v ? o[e1] || (o[e1] = {}) : (o[e1] || {}).prototype, m = h ? r : r[e1] || (r[e1] = {}), k = m.prototype || (m.prototype = {});
                for(c in h && (n = e1), n)f = ((u = !p && b && void 0 !== b[c]) ? b : n)[c], d = y && u ? s(f, o) : g && "function" == typeof f ? s(Function.call, f) : f, b && a(b, c, f, t & l.U), m[c] != f && i(m, c, d), g && k[c] != f && (k[c] = f);
            };
            o.core = r, l.F = 1, l.G = 2, l.S = 4, l.P = 8, l.B = 16, l.W = 32, l.U = 64, l.R = 128, t.exports = l;
        },
        function(t, e1) {
            t.exports = function(t) {
                return t && t.__esModule ? t : {
                    default: t
                };
            };
        },
        function(t, e1) {
            t.exports = function(t, e1) {
                if (!(t instanceof e1)) throw new TypeError("Cannot call a class as a function");
            };
        },
        function(t, e1) {
            function n(t, e1) {
                for(var n = 0; n < e1.length; n++){
                    var o = e1[n];
                    o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(t, o.key, o);
                }
            }
            t.exports = function(t, e1, o) {
                return e1 && n(t.prototype, e1), o && n(t, o), t;
            };
        },
        function(t, e1) {
            function n(e1) {
                return t.exports = n = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t);
                }, n(e1);
            }
            t.exports = n;
        },
        function(t, e1, n) {
            var o = n(110);
            t.exports = function(t, e1) {
                if ("function" != typeof e1 && null !== e1) throw new TypeError("Super expression must either be null or a function");
                t.prototype = Object.create(e1 && e1.prototype, {
                    constructor: {
                        value: t,
                        writable: !0,
                        configurable: !0
                    }
                }), e1 && o(t, e1);
            };
        },
        function(t, e1, n) {
            var o = n(59), r = n(152);
            t.exports = function(t, e1) {
                return !e1 || "object" !== o(e1) && "function" != typeof e1 ? r(t) : e1;
            };
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(20),
                n(371),
                n(21),
                n(403),
                n(14)
            ], void 0 === (i = "function" == typeof (o = function(t, e1, o, r, i, a) {
                "use strict";
                var s, l = n(1);
                function c(t, e1) {
                    var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "log", o = arguments.length > 3 ? arguments[3] : void 0, r = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : "color: inherit";
                    if ("console" in window && window.console[n]) {
                        var i = [
                            "info",
                            "log",
                            "warn",
                            "error"
                        ].includes(n), a = [];
                        switch(c.logLevel){
                            case s.ERROR:
                                if ("error" !== n) return;
                                break;
                            case s.WARN:
                                if (![
                                    "error",
                                    "warn"
                                ].includes(n)) return;
                                break;
                            case s.INFO:
                                if (!i || t) return;
                        }
                        o && a.push(o);
                        var l = "Editor.js ".concat("2.25.0"), u = "line-height: 1em;\n            color: #006FEA;\n            display: inline-block;\n            font-size: 11px;\n            line-height: 1em;\n            background-color: #fff;\n            padding: 4px 9px;\n            border-radius: 30px;\n            border: 1px solid rgba(56, 138, 229, 0.16);\n            margin: 4px 5px 4px 0;";
                        t && (i ? (a.unshift(u, r), e1 = "%c".concat(l, "%c ").concat(e1)) : e1 = "( ".concat(l, " )").concat(e1));
                        try {
                            if (i) {
                                if (o) {
                                    var f;
                                    (f = console)[n].apply(f, [
                                        "".concat(e1, " %o")
                                    ].concat(a));
                                } else {
                                    var d;
                                    (d = console)[n].apply(d, [
                                        e1
                                    ].concat(a));
                                }
                            } else console[n](e1);
                        } catch (t1) {}
                    }
                }
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.setLogLevel = function(t) {
                    c.logLevel = t;
                }, t.typeOf = d, t.isFunction = p, t.isObject = h, t.isString = function(t) {
                    return "string" === d(t);
                }, t.isBoolean = function(t) {
                    return "boolean" === d(t);
                }, t.isNumber = function(t) {
                    return "number" === d(t);
                }, t.isUndefined = v, t.isClass = function(t) {
                    return p(t) && /^\s*class\s+/.test(t.toString());
                }, t.isEmpty = function(t) {
                    return !t || 0 === Object.keys(t).length && t.constructor === Object;
                }, t.isPromise = function(t) {
                    return Promise.resolve(t) === t;
                }, t.isPrintableKey = function(t) {
                    return t > 47 && t < 58 || 32 === t || 13 === t || 229 === t || t > 64 && t < 91 || t > 95 && t < 112 || t > 185 && t < 193 || t > 218 && t < 223;
                }, t.sequence = function(t) {
                    return g.apply(this, arguments);
                }, t.array = function(t) {
                    return Array.prototype.slice.call(t);
                }, t.delay = function(t, e1) {
                    return function() {
                        var n = this, o = arguments;
                        window.setTimeout(function() {
                            return t.apply(n, o);
                        }, e1);
                    };
                }, t.getFileExtension = function(t) {
                    return t.name.split(".").pop();
                }, t.isValidMimeType = function(t) {
                    return /^[-\w]+\/([-+\w]+|\*)$/.test(t);
                }, t.debounce = function(t, e1, n) {
                    var o, r = this;
                    return function() {
                        for(var i = arguments.length, a = new Array(i), s = 0; s < i; s++)a[s] = arguments[s];
                        var l = r, c = function() {
                            o = null, n || t.apply(l, a);
                        }, u = n && !o;
                        window.clearTimeout(o), o = window.setTimeout(c, e1), u && t.apply(l, a);
                    };
                }, t.throttle = function(t, e1) {
                    var n, o, r, i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0, a = null, s = 0;
                    i || (i = {});
                    var l = function() {
                        s = !1 === i.leading ? 0 : Date.now(), a = null, r = t.apply(n, o), a || (n = o = null);
                    };
                    return function() {
                        var c = Date.now();
                        s || !1 !== i.leading || (s = c);
                        var u = e1 - (c - s);
                        return n = this, o = arguments, u <= 0 || u > e1 ? (a && (clearTimeout(a), a = null), s = c, r = t.apply(n, o), a || (n = o = null)) : a || !1 === i.trailing || (a = setTimeout(l, u)), r;
                    };
                }, t.copyTextToClipboard = function(t) {
                    var e1 = a.default.make("div", "codex-editor-clipboard", {
                        innerHTML: t
                    });
                    document.body.appendChild(e1);
                    var n = window.getSelection(), o = document.createRange();
                    o.selectNode(e1), window.getSelection().removeAllRanges(), n.addRange(o), document.execCommand("copy"), document.body.removeChild(e1);
                }, t.getUserOS = y, t.capitalize = function(t) {
                    return t[0].toUpperCase() + t.slice(1);
                }, t.deepMerge = function t(e1) {
                    for(var n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), i = 1; i < n; i++)r[i - 1] = arguments[i];
                    if (!r.length) return e1;
                    var a = r.shift();
                    if (h(e1) && h(a)) for(var s in a)h(a[s]) ? (e1[s] || Object.assign(e1, (0, o.default)({}, s, {})), t(e1[s], a[s])) : Object.assign(e1, (0, o.default)({}, s, a[s]));
                    return t.apply(void 0, [
                        e1
                    ].concat(r));
                }, t.beautifyShortcut = function(t) {
                    var e1 = y();
                    return t = t.replace(/shift/gi, "⇧").replace(/backspace/gi, "⌫").replace(/enter/gi, "⏎").replace(/up/gi, "↑").replace(/left/gi, "→").replace(/down/gi, "↓").replace(/right/gi, "←").replace(/escape/gi, "⎋").replace(/insert/gi, "Ins").replace(/delete/gi, "␡").replace(/\+/gi, " + "), t = e1.mac ? t.replace(/ctrl|cmd/gi, "⌘").replace(/alt/gi, "⌥") : t.replace(/cmd/gi, "Ctrl").replace(/windows/gi, "WIN");
                }, t.getValidUrl = function(t) {
                    try {
                        return new URL(t).href;
                    } catch (t1) {}
                    return "//" === t.substring(0, 2) ? window.location.protocol + t : window.location.origin + t;
                }, t.generateBlockId = function() {
                    return (0, i.nanoid)(10);
                }, t.openTab = function(t) {
                    window.open(t, "_blank");
                }, t.generateId = function() {
                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
                    return "".concat(t).concat(Math.floor(1e8 * Math.random()).toString(16));
                }, t.deprecationAssert = function(t, e1, n) {
                    var o = "\xab".concat(e1, "\xbb is deprecated and will be removed in the next major release. Please use the \xab").concat(n, "\xbb instead.");
                    t && f(o, "warn");
                }, t.cacheable = function(t, e1, n) {
                    var o = n.value ? "value" : "get", r = n[o], i = "#".concat(e1, "Cache");
                    if (n[o] = function() {
                        if (void 0 === this[i]) {
                            for(var t = arguments.length, e1 = new Array(t), n = 0; n < t; n++)e1[n] = arguments[n];
                            this[i] = r.apply.apply(r, [
                                this
                            ].concat(e1));
                        }
                        return this[i];
                    }, "get" === o && n.set) {
                        var a = n.set;
                        n.set = function(e1) {
                            delete t[i], a.apply(this, e1);
                        };
                    }
                    return n;
                }, t.isMobileScreen = function() {
                    return window.matchMedia("(max-width: 650px)").matches;
                }, t.equals = function(t, e1) {
                    var n = Array.isArray(t) || h(t), o = Array.isArray(e1) || h(e1);
                    return n || o ? JSON.stringify(t) === JSON.stringify(e1) : t === e1;
                }, t.isIosDevice = t.isTouchSupported = t.logLabeled = t.log = t.mouseButtons = t.keyCodes = t.LogLevels = void 0, e1 = l(e1), o = l(o), r = l(r), a = l(a), t.LogLevels = s, function(t) {
                    t.VERBOSE = "VERBOSE", t.INFO = "INFO", t.WARN = "WARN", t.ERROR = "ERROR";
                }(s || (t.LogLevels = s = {})), t.keyCodes = {
                    BACKSPACE: 8,
                    TAB: 9,
                    ENTER: 13,
                    SHIFT: 16,
                    CTRL: 17,
                    ALT: 18,
                    ESC: 27,
                    SPACE: 32,
                    LEFT: 37,
                    UP: 38,
                    DOWN: 40,
                    RIGHT: 39,
                    DELETE: 46,
                    META: 91
                }, t.mouseButtons = {
                    LEFT: 0,
                    WHEEL: 1,
                    RIGHT: 2,
                    BACKWARD: 3,
                    FORWARD: 4
                }, c.logLevel = s.VERBOSE;
                var u = c.bind(window, !1);
                t.log = u;
                var f = c.bind(window, !0);
                function d(t) {
                    return Object.prototype.toString.call(t).match(/\s([a-zA-Z]+)/)[1].toLowerCase();
                }
                function p(t) {
                    return "function" === d(t) || "asyncfunction" === d(t);
                }
                function h(t) {
                    return "object" === d(t);
                }
                function v(t) {
                    return "undefined" === d(t);
                }
                function g() {
                    return (g = (0, r.default)(e1.default.mark(function t(n) {
                        var o, i, a, s, l = arguments;
                        return e1.default.wrap(function(t) {
                            for(;;)switch(t.prev = t.next){
                                case 0:
                                    return s = function() {
                                        return (s = (0, r.default)(e1.default.mark(function t(n, o, r) {
                                            return e1.default.wrap(function(t) {
                                                for(;;)switch(t.prev = t.next){
                                                    case 0:
                                                        return t.prev = 0, t.next = 3, n.function(n.data);
                                                    case 3:
                                                        return t.next = 5, o(v(n.data) ? {} : n.data);
                                                    case 5:
                                                        t.next = 10;
                                                        break;
                                                    case 7:
                                                        t.prev = 7, t.t0 = t.catch(0), r(v(n.data) ? {} : n.data);
                                                    case 10:
                                                    case "end":
                                                        return t.stop();
                                                }
                                            }, t, null, [
                                                [
                                                    0,
                                                    7
                                                ]
                                            ]);
                                        }))).apply(this, arguments);
                                    }, a = function(t, e1, n) {
                                        return s.apply(this, arguments);
                                    }, o = l.length > 1 && void 0 !== l[1] ? l[1] : function() {}, i = l.length > 2 && void 0 !== l[2] ? l[2] : function() {}, t.abrupt("return", n.reduce(function() {
                                        var t = (0, r.default)(e1.default.mark(function t(n, r) {
                                            return e1.default.wrap(function(t) {
                                                for(;;)switch(t.prev = t.next){
                                                    case 0:
                                                        return t.next = 2, n;
                                                    case 2:
                                                        return t.abrupt("return", a(r, o, i));
                                                    case 3:
                                                    case "end":
                                                        return t.stop();
                                                }
                                            }, t);
                                        }));
                                        return function(e1, n) {
                                            return t.apply(this, arguments);
                                        };
                                    }(), Promise.resolve()));
                                case 5:
                                case "end":
                                    return t.stop();
                            }
                        }, t);
                    }))).apply(this, arguments);
                }
                function y() {
                    var t = {
                        win: !1,
                        mac: !1,
                        x11: !1,
                        linux: !1
                    }, e1 = Object.keys(t).find(function(t) {
                        return -1 !== navigator.appVersion.toLowerCase().indexOf(t);
                    });
                    return e1 ? (t[e1] = !0, t) : t;
                }
                t.logLabeled = f;
                var b = "ontouchstart" in document.documentElement;
                t.isTouchSupported = b;
                var m = "undefined" != typeof window && window.navigator && window.navigator.platform && (/iP(ad|hone|od)/.test(window.navigator.platform) || "MacIntel" === window.navigator.platform && window.navigator.maxTouchPoints > 1);
                t.isIosDevice = m;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o = n(59);
            function r() {
                if ("function" != typeof WeakMap) return null;
                var t = new WeakMap;
                return r = function() {
                    return t;
                }, t;
            }
            t.exports = function(t) {
                if (t && t.__esModule) return t;
                if (null === t || "object" !== o(t) && "function" != typeof t) return {
                    default: t
                };
                var e1 = r();
                if (e1 && e1.has(t)) return e1.get(t);
                var n = {}, i = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for(var a in t)if (Object.prototype.hasOwnProperty.call(t, a)) {
                    var s = i ? Object.getOwnPropertyDescriptor(t, a) : null;
                    s && (s.get || s.set) ? Object.defineProperty(n, a, s) : n[a] = t[a];
                }
                return n.default = t, e1 && e1.set(t, n), n;
            };
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(111)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a) {
                "use strict";
                var s = n(1);
                function l(t) {
                    if ("undefined" == typeof Symbol || null == t[Symbol.iterator]) {
                        if (Array.isArray(t) || (t = function(t, e1) {
                            if (t) {
                                if ("string" == typeof t) return c(t, e1);
                                var n = Object.prototype.toString.call(t).slice(8, -1);
                                return "Object" === n && t.constructor && (n = t.constructor.name), "Map" === n || "Set" === n ? Array.from(n) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? c(t, e1) : void 0;
                            }
                        }(t))) {
                            var e1 = 0, n = function() {};
                            return {
                                s: n,
                                n: function() {
                                    return e1 >= t.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: t[e1++]
                                    };
                                },
                                e: function(t) {
                                    throw t;
                                },
                                f: n
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var o, r, i = !0, a = !1;
                    return {
                        s: function() {
                            o = t[Symbol.iterator]();
                        },
                        n: function() {
                            var t = o.next();
                            return i = t.done, t;
                        },
                        e: function(t) {
                            a = !0, r = t;
                        },
                        f: function() {
                            try {
                                i || null == o.return || o.return();
                            } finally{
                                if (a) throw r;
                            }
                        }
                    };
                }
                function c(t, e1) {
                    (null == e1 || e1 > t.length) && (e1 = t.length);
                    for(var n = 0, o = new Array(e1); n < e1; n++)o[n] = t[n];
                    return o;
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = s(r), i = s(i), a = s(a);
                var u = function() {
                    function t(e1) {
                        var n = this, o = e1.config, i = e1.eventsDispatcher;
                        if ((0, r.default)(this, t), this.nodes = {}, this.listeners = new a.default, this.readOnlyMutableListeners = {
                            on: function(t, e1, o) {
                                var r = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
                                n.mutableListenerIds.push(n.listeners.on(t, e1, o, r));
                            },
                            clearAll: function() {
                                var t, e1 = l(n.mutableListenerIds);
                                try {
                                    for(e1.s(); !(t = e1.n()).done;){
                                        var o = t.value;
                                        n.listeners.offById(o);
                                    }
                                } catch (t1) {
                                    e1.e(t1);
                                } finally{
                                    e1.f();
                                }
                                n.mutableListenerIds = [];
                            }
                        }, this.mutableListenerIds = [], (this instanceof t ? this.constructor : void 0) === t) throw new TypeError("Constructors for abstract class Module are not allowed.");
                        this.config = o, this.eventsDispatcher = i;
                    }
                    return (0, i.default)(t, [
                        {
                            key: "removeAllNodes",
                            value: function() {
                                for(var t in this.nodes){
                                    var e1 = this.nodes[t];
                                    e1 instanceof HTMLElement && e1.remove();
                                }
                            }
                        },
                        {
                            key: "state",
                            set: function(t) {
                                this.Editor = t;
                            }
                        },
                        {
                            key: "isRtl",
                            get: function() {
                                return "rtl" === this.config.i18n.direction;
                            }
                        }
                    ]), t;
                }();
                o.default = u, u.displayName = "Module", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1) {
            var n = t.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
            "number" == typeof __g && (__g = n);
        },
        function(t, e1) {
            t.exports = function(t) {
                try {
                    return !!t();
                } catch (t1) {
                    return !0;
                }
            };
        },
        function(t, e1, n) {
            var o = n(13);
            t.exports = function(t) {
                if (!o(t)) throw TypeError(t + " is not an object!");
                return t;
            };
        },
        function(t, e1) {
            t.exports = function(t) {
                return "object" == typeof t ? null !== t : "function" == typeof t;
            };
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(42),
                n(2),
                n(3),
                n(7)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s) {
                "use strict";
                var l = n(8), c = n(1);
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = c(r), i = c(i), a = c(a), s = l(s);
                var u = function() {
                    function t() {
                        (0, i.default)(this, t);
                    }
                    return (0, a.default)(t, null, [
                        {
                            key: "isSingleTag",
                            value: function(t) {
                                return t.tagName && [
                                    "AREA",
                                    "BASE",
                                    "BR",
                                    "COL",
                                    "COMMAND",
                                    "EMBED",
                                    "HR",
                                    "IMG",
                                    "INPUT",
                                    "KEYGEN",
                                    "LINK",
                                    "META",
                                    "PARAM",
                                    "SOURCE",
                                    "TRACK",
                                    "WBR"
                                ].includes(t.tagName);
                            }
                        },
                        {
                            key: "isLineBreakTag",
                            value: function(t) {
                                return t && t.tagName && [
                                    "BR",
                                    "WBR"
                                ].includes(t.tagName);
                            }
                        },
                        {
                            key: "make",
                            value: function(t) {
                                var e1, n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null, o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, i = document.createElement(t);
                                for(var a in Array.isArray(n) ? (e1 = i.classList).add.apply(e1, (0, r.default)(n)) : n && i.classList.add(n), o)Object.prototype.hasOwnProperty.call(o, a) && (i[a] = o[a]);
                                return i;
                            }
                        },
                        {
                            key: "text",
                            value: function(t) {
                                return document.createTextNode(t);
                            }
                        },
                        {
                            key: "svg",
                            value: function(t) {
                                var e1 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 14, n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 14, o = document.createElementNS("http://www.w3.org/2000/svg", "svg");
                                return o.classList.add("icon", "icon--" + t), o.setAttribute("width", e1 + "px"), o.setAttribute("height", n + "px"), o.innerHTML = '<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#'.concat(t, '"></use>'), o;
                            }
                        },
                        {
                            key: "append",
                            value: function(t, e1) {
                                Array.isArray(e1) ? e1.forEach(function(e1) {
                                    return t.appendChild(e1);
                                }) : t.appendChild(e1);
                            }
                        },
                        {
                            key: "prepend",
                            value: function(t, e1) {
                                Array.isArray(e1) ? (e1 = e1.reverse()).forEach(function(e1) {
                                    return t.prepend(e1);
                                }) : t.prepend(e1);
                            }
                        },
                        {
                            key: "swap",
                            value: function(t, e1) {
                                var n = document.createElement("div"), o = t.parentNode;
                                o.insertBefore(n, t), o.insertBefore(t, e1), o.insertBefore(e1, n), o.removeChild(n);
                            }
                        },
                        {
                            key: "find",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : document, e1 = arguments.length > 1 ? arguments[1] : void 0;
                                return t.querySelector(e1);
                            }
                        },
                        {
                            key: "get",
                            value: function(t) {
                                return document.getElementById(t);
                            }
                        },
                        {
                            key: "findAll",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : document, e1 = arguments.length > 1 ? arguments[1] : void 0;
                                return t.querySelectorAll(e1);
                            }
                        },
                        {
                            key: "findAllInputs",
                            value: function(e1) {
                                return s.array(e1.querySelectorAll(t.allInputsSelector)).reduce(function(e1, n) {
                                    return t.isNativeInput(n) || t.containsOnlyInlineElements(n) ? [].concat((0, r.default)(e1), [
                                        n
                                    ]) : [].concat((0, r.default)(e1), (0, r.default)(t.getDeepestBlockElements(n)));
                                }, []);
                            }
                        },
                        {
                            key: "getDeepestNode",
                            value: function(e1) {
                                var n = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], o = n ? "lastChild" : "firstChild", r = n ? "previousSibling" : "nextSibling";
                                if (e1 && e1.nodeType === Node.ELEMENT_NODE && e1[o]) {
                                    var i = e1[o];
                                    if (t.isSingleTag(i) && !t.isNativeInput(i) && !t.isLineBreakTag(i)) {
                                        if (i[r]) i = i[r];
                                        else {
                                            if (!i.parentNode[r]) return i.parentNode;
                                            i = i.parentNode[r];
                                        }
                                    }
                                    return this.getDeepestNode(i, n);
                                }
                                return e1;
                            }
                        },
                        {
                            key: "isElement",
                            value: function(t) {
                                return !s.isNumber(t) && t && t.nodeType && t.nodeType === Node.ELEMENT_NODE;
                            }
                        },
                        {
                            key: "isFragment",
                            value: function(t) {
                                return !s.isNumber(t) && t && t.nodeType && t.nodeType === Node.DOCUMENT_FRAGMENT_NODE;
                            }
                        },
                        {
                            key: "isContentEditable",
                            value: function(t) {
                                return "true" === t.contentEditable;
                            }
                        },
                        {
                            key: "isNativeInput",
                            value: function(t) {
                                return !(!t || !t.tagName) && [
                                    "INPUT",
                                    "TEXTAREA"
                                ].includes(t.tagName);
                            }
                        },
                        {
                            key: "canSetCaret",
                            value: function(e1) {
                                var n = !0;
                                if (t.isNativeInput(e1)) switch(e1.type){
                                    case "file":
                                    case "checkbox":
                                    case "radio":
                                    case "hidden":
                                    case "submit":
                                    case "button":
                                    case "image":
                                    case "reset":
                                        n = !1;
                                }
                                else n = t.isContentEditable(e1);
                                return n;
                            }
                        },
                        {
                            key: "isNodeEmpty",
                            value: function(t) {
                                return !(this.isSingleTag(t) && !this.isLineBreakTag(t)) && 0 === (this.isElement(t) && this.isNativeInput(t) ? t.value : t.textContent.replace("​", "")).trim().length;
                            }
                        },
                        {
                            key: "isLeaf",
                            value: function(t) {
                                return !!t && 0 === t.childNodes.length;
                            }
                        },
                        {
                            key: "isEmpty",
                            value: function(t) {
                                t.normalize();
                                for(var e1 = [
                                    t
                                ]; e1.length > 0;)if (t = e1.shift()) {
                                    if (this.isLeaf(t) && !this.isNodeEmpty(t)) return !1;
                                    t.childNodes && e1.push.apply(e1, (0, r.default)(Array.from(t.childNodes)));
                                }
                                return !0;
                            }
                        },
                        {
                            key: "isHTMLString",
                            value: function(e1) {
                                var n = t.make("div");
                                return n.innerHTML = e1, n.childElementCount > 0;
                            }
                        },
                        {
                            key: "getContentLength",
                            value: function(e1) {
                                return t.isNativeInput(e1) ? e1.value.length : e1.nodeType === Node.TEXT_NODE ? e1.length : e1.textContent.length;
                            }
                        },
                        {
                            key: "containsOnlyInlineElements",
                            value: function(e1) {
                                var n;
                                return s.isString(e1) ? (n = document.createElement("div")).innerHTML = e1 : n = e1, Array.from(n.children).every(function e1(n) {
                                    return !t.blockElements.includes(n.tagName.toLowerCase()) && Array.from(n.children).every(e1);
                                });
                            }
                        },
                        {
                            key: "getDeepestBlockElements",
                            value: function(e1) {
                                return t.containsOnlyInlineElements(e1) ? [
                                    e1
                                ] : Array.from(e1.children).reduce(function(e1, n) {
                                    return [].concat((0, r.default)(e1), (0, r.default)(t.getDeepestBlockElements(n)));
                                }, []);
                            }
                        },
                        {
                            key: "getHolder",
                            value: function(t) {
                                return s.isString(t) ? document.getElementById(t) : t;
                            }
                        },
                        {
                            key: "isExtensionNode",
                            value: function(t) {
                                return t && [
                                    "GRAMMARLY-EXTENSION"
                                ].includes(t.nodeName);
                            }
                        },
                        {
                            key: "isAnchor",
                            value: function(t) {
                                return "a" === t.tagName.toLowerCase();
                            }
                        },
                        {
                            key: "offset",
                            value: function(t) {
                                var e1 = t.getBoundingClientRect(), n = window.pageXOffset || document.documentElement.scrollLeft, o = window.pageYOffset || document.documentElement.scrollTop, r = e1.top + o, i = e1.left + n;
                                return {
                                    top: r,
                                    left: i,
                                    bottom: r + e1.height,
                                    right: i + e1.width
                                };
                            }
                        },
                        {
                            key: "allInputsSelector",
                            get: function() {
                                return "[contenteditable=true], textarea, input:not([type]), " + [
                                    "text",
                                    "password",
                                    "email",
                                    "number",
                                    "search",
                                    "tel",
                                    "url"
                                ].map(function(t) {
                                    return 'input[type="'.concat(t, '"]');
                                }).join(", ");
                            }
                        },
                        {
                            key: "blockElements",
                            get: function() {
                                return [
                                    "address",
                                    "article",
                                    "aside",
                                    "blockquote",
                                    "canvas",
                                    "div",
                                    "dl",
                                    "dt",
                                    "fieldset",
                                    "figcaption",
                                    "figure",
                                    "footer",
                                    "form",
                                    "h1",
                                    "h2",
                                    "h3",
                                    "h4",
                                    "h5",
                                    "h6",
                                    "header",
                                    "hgroup",
                                    "hr",
                                    "li",
                                    "main",
                                    "nav",
                                    "noscript",
                                    "ol",
                                    "output",
                                    "p",
                                    "pre",
                                    "ruby",
                                    "section",
                                    "table",
                                    "tr",
                                    "tfoot",
                                    "ul",
                                    "video"
                                ];
                            }
                        }
                    ]), t;
                }();
                o.default = u, u.displayName = "Dom", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o = n(69)("wks"), r = n(44), i = n(10).Symbol, a = "function" == typeof i;
            (t.exports = function(t) {
                return o[t] || (o[t] = a && i[t] || (a ? i : r)("Symbol." + t));
            }).store = o;
        },
        function(t, e1, n) {
            var o = n(33), r = Math.min;
            t.exports = function(t) {
                return t > 0 ? r(o(t), 9007199254740991) : 0;
            };
        },
        function(t, e1) {
            var n = t.exports = {
                version: "2.6.11"
            };
            "number" == typeof __e && (__e = n);
        },
        function(t, e1, n) {
            t.exports = !n(11)(function() {
                return 7 != Object.defineProperty({}, "a", {
                    get: function() {
                        return 7;
                    }
                }).a;
            });
        },
        function(t, e1, n) {
            var o = n(12), r = n(116), i = n(40), a = Object.defineProperty;
            e1.f = n(18) ? Object.defineProperty : function(t, e1, n) {
                if (o(t), e1 = i(e1, !0), o(n), r) try {
                    return a(t, e1, n);
                } catch (t1) {}
                if ("get" in n || "set" in n) throw TypeError("Accessors not supported!");
                return "value" in n && (t[e1] = n.value), t;
            };
        },
        function(t, e1, n) {
            t.exports = n(147);
        },
        function(t, e1) {
            function n(t, e1, n, o, r, i, a) {
                try {
                    var s = t[i](a), l = s.value;
                } catch (t1) {
                    return void n(t1);
                }
                s.done ? e1(l) : Promise.resolve(l).then(o, r);
            }
            t.exports = function(t) {
                return function() {
                    var e1 = this, o = arguments;
                    return new Promise(function(r, i) {
                        var a = t.apply(e1, o);
                        function s(t) {
                            n(a, r, i, s, l, "next", t);
                        }
                        function l(t) {
                            n(a, r, i, s, l, "throw", t);
                        }
                        s(void 0);
                    });
                };
            };
        },
        function(t, e1, n) {
            var o = n(38);
            t.exports = function(t) {
                return Object(o(t));
            };
        },
        function(t, e1, n) {
            var o = n(10), r = n(27), i = n(26), a = n(44)("src"), s = n(192), l = ("" + s).split("toString");
            n(17).inspectSource = function(t) {
                return s.call(t);
            }, (t.exports = function(t, e1, n, s) {
                var c = "function" == typeof n;
                c && (i(n, "name") || r(n, "name", e1)), t[e1] !== n && (c && (i(n, a) || r(n, a, t[e1] ? "" + t[e1] : l.join(String(e1)))), t === o ? t[e1] = n : s ? t[e1] ? t[e1] = n : r(t, e1, n) : (delete t[e1], r(t, e1, n)));
            })(Function.prototype, "toString", function() {
                return "function" == typeof this && this[a] || s.call(this);
            });
        },
        function(t, e1, n) {
            var o = n(0), r = n(11), i = n(38), a = /"/g, s = function(t, e1, n, o) {
                var r = String(i(t)), s = "<" + e1;
                return "" !== n && (s += " " + n + '="' + String(o).replace(a, "&quot;") + '"'), s + ">" + r + "</" + e1 + ">";
            };
            t.exports = function(t, e1) {
                var n = {};
                n[t] = e1(s), o(o.P + o.F * r(function() {
                    var e1 = ""[t]('"');
                    return e1 !== e1.toLowerCase() || e1.split('"').length > 3;
                }), "String", n);
            };
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(7),
                n(14)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s) {
                "use strict";
                var l = n(8), c = n(1);
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = c(r), i = c(i), a = l(a), s = c(s);
                var u = function() {
                    function t() {
                        (0, r.default)(this, t), this.instance = null, this.selection = null, this.savedSelectionRange = null, this.isFakeBackgroundEnabled = !1, this.commandBackground = "backColor", this.commandRemoveFormat = "removeFormat";
                    }
                    return (0, i.default)(t, [
                        {
                            key: "removeFakeBackground",
                            value: function() {
                                this.isFakeBackgroundEnabled && (this.isFakeBackgroundEnabled = !1, document.execCommand(this.commandRemoveFormat));
                            }
                        },
                        {
                            key: "setFakeBackground",
                            value: function() {
                                document.execCommand(this.commandBackground, !1, "#a8d6ff"), this.isFakeBackgroundEnabled = !0;
                            }
                        },
                        {
                            key: "save",
                            value: function() {
                                this.savedSelectionRange = t.range;
                            }
                        },
                        {
                            key: "restore",
                            value: function() {
                                if (this.savedSelectionRange) {
                                    var t = window.getSelection();
                                    t.removeAllRanges(), t.addRange(this.savedSelectionRange);
                                }
                            }
                        },
                        {
                            key: "clearSaved",
                            value: function() {
                                this.savedSelectionRange = null;
                            }
                        },
                        {
                            key: "collapseToEnd",
                            value: function() {
                                var t = window.getSelection(), e1 = document.createRange();
                                e1.selectNodeContents(t.focusNode), e1.collapse(!1), t.removeAllRanges(), t.addRange(e1);
                            }
                        },
                        {
                            key: "findParentTag",
                            value: function(t, e1) {
                                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 10, o = window.getSelection(), r = null;
                                if (!o || !o.anchorNode || !o.focusNode) return null;
                                var i = [
                                    o.anchorNode,
                                    o.focusNode
                                ];
                                return i.forEach(function(o) {
                                    for(var i = n; i > 0 && o.parentNode && (o.tagName !== t || (r = o, e1 && o.classList && !o.classList.contains(e1) && (r = null), !r));)o = o.parentNode, i--;
                                }), r;
                            }
                        },
                        {
                            key: "expandToTag",
                            value: function(t) {
                                var e1 = window.getSelection();
                                e1.removeAllRanges();
                                var n = document.createRange();
                                n.selectNodeContents(t), e1.addRange(n);
                            }
                        }
                    ], [
                        {
                            key: "isSelectionAtEditor",
                            value: function(e1) {
                                if (!e1) return !1;
                                var n = e1.anchorNode || e1.focusNode;
                                n && n.nodeType === Node.TEXT_NODE && (n = n.parentNode);
                                var o = null;
                                return n && n instanceof Element && (o = n.closest(".".concat(t.CSS.editorZone))), !!o && o.nodeType === Node.ELEMENT_NODE;
                            }
                        },
                        {
                            key: "isRangeAtEditor",
                            value: function(e1) {
                                if (e1) {
                                    var n = e1.startContainer;
                                    n && n.nodeType === Node.TEXT_NODE && (n = n.parentNode);
                                    var o = null;
                                    return n && n instanceof Element && (o = n.closest(".".concat(t.CSS.editorZone))), !!o && o.nodeType === Node.ELEMENT_NODE;
                                }
                            }
                        },
                        {
                            key: "getRangeFromSelection",
                            value: function(t) {
                                return t && t.rangeCount ? t.getRangeAt(0) : null;
                            }
                        },
                        {
                            key: "get",
                            value: function() {
                                return window.getSelection();
                            }
                        },
                        {
                            key: "setCursor",
                            value: function(t) {
                                var e1 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n = document.createRange(), o = window.getSelection();
                                if (s.default.isNativeInput(t)) {
                                    if (!s.default.canSetCaret(t)) return;
                                    return t.focus(), t.selectionStart = t.selectionEnd = e1, t.getBoundingClientRect();
                                }
                                return n.setStart(t, e1), n.setEnd(t, e1), o.removeAllRanges(), o.addRange(n), n.getBoundingClientRect();
                            }
                        },
                        {
                            key: "addFakeCursor",
                            value: function(e1) {
                                var n = t.range, o = s.default.make("span", "codex-editor__fake-cursor");
                                o.dataset.mutationFree = "true", !n || e1 && !e1.contains(n.startContainer) || (n.collapse(), n.insertNode(o));
                            }
                        },
                        {
                            key: "removeFakeCursor",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : document.body, e1 = s.default.find(t, ".codex-editor__fake-cursor");
                                e1 && e1.remove();
                            }
                        },
                        {
                            key: "CSS",
                            get: function() {
                                return {
                                    editorWrapper: "codex-editor",
                                    editorZone: "codex-editor__redactor"
                                };
                            }
                        },
                        {
                            key: "anchorNode",
                            get: function() {
                                var t = window.getSelection();
                                return t ? t.anchorNode : null;
                            }
                        },
                        {
                            key: "anchorElement",
                            get: function() {
                                var t = window.getSelection();
                                if (!t) return null;
                                var e1 = t.anchorNode;
                                return e1 ? s.default.isElement(e1) ? e1 : e1.parentElement : null;
                            }
                        },
                        {
                            key: "anchorOffset",
                            get: function() {
                                var t = window.getSelection();
                                return t ? t.anchorOffset : null;
                            }
                        },
                        {
                            key: "isCollapsed",
                            get: function() {
                                var t = window.getSelection();
                                return t ? t.isCollapsed : null;
                            }
                        },
                        {
                            key: "isAtEditor",
                            get: function() {
                                return this.isSelectionAtEditor(t.get());
                            }
                        },
                        {
                            key: "isSelectionExists",
                            get: function() {
                                return !!t.get().anchorNode;
                            }
                        },
                        {
                            key: "range",
                            get: function() {
                                return this.getRangeFromSelection(this.get());
                            }
                        },
                        {
                            key: "rect",
                            get: function() {
                                var t, e1 = document.selection, n = {
                                    x: 0,
                                    y: 0,
                                    width: 0,
                                    height: 0
                                };
                                if (e1 && "Control" !== e1.type) return t = e1.createRange(), n.x = t.boundingLeft, n.y = t.boundingTop, n.width = t.boundingWidth, n.height = t.boundingHeight, n;
                                if (!window.getSelection) return a.log("Method window.getSelection is not supported", "warn"), n;
                                if (null === (e1 = window.getSelection()).rangeCount || isNaN(e1.rangeCount)) return a.log("Method SelectionUtils.rangeCount is not supported", "warn"), n;
                                if (0 === e1.rangeCount) return n;
                                if ((t = e1.getRangeAt(0).cloneRange()).getBoundingClientRect && (n = t.getBoundingClientRect()), 0 === n.x && 0 === n.y) {
                                    var o = document.createElement("span");
                                    if (o.getBoundingClientRect) {
                                        o.appendChild(document.createTextNode("​")), t.insertNode(o), n = o.getBoundingClientRect();
                                        var r = o.parentNode;
                                        r.removeChild(o), r.normalize();
                                    }
                                }
                                return n;
                            }
                        },
                        {
                            key: "text",
                            get: function() {
                                return window.getSelection ? window.getSelection().toString() : "";
                            }
                        }
                    ]), t;
                }();
                o.default = u, u.displayName = "SelectionUtils", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1) {
            var n = {}.hasOwnProperty;
            t.exports = function(t, e1) {
                return n.call(t, e1);
            };
        },
        function(t, e1, n) {
            var o = n(19), r = n(43);
            t.exports = n(18) ? function(t, e1, n) {
                return o.f(t, e1, r(1, n));
            } : function(t, e1, n) {
                return t[e1] = n, t;
            };
        },
        function(t, e1, n) {
            var o = n(63), r = n(38);
            t.exports = function(t) {
                return o(r(t));
            };
        },
        function(t, e1, n) {
            "use strict";
            var o = n(11);
            t.exports = function(t, e1) {
                return !!t && o(function() {
                    e1 ? t.call(null, function() {}, 1) : t.call(null);
                });
            };
        },
        function(t, e1, n) {
            var o = n(361), r = n(362), i = n(148), a = n(363);
            t.exports = function(t, e1) {
                return o(t) || r(t, e1) || i(t, e1) || a();
            };
        },
        function(t, e1, n) {
            var o = n(32);
            t.exports = function(t, e1, n) {
                if (o(t), void 0 === e1) return t;
                switch(n){
                    case 1:
                        return function(n) {
                            return t.call(e1, n);
                        };
                    case 2:
                        return function(n, o) {
                            return t.call(e1, n, o);
                        };
                    case 3:
                        return function(n, o, r) {
                            return t.call(e1, n, o, r);
                        };
                }
                return function() {
                    return t.apply(e1, arguments);
                };
            };
        },
        function(t, e1) {
            t.exports = function(t) {
                if ("function" != typeof t) throw TypeError(t + " is not a function!");
                return t;
            };
        },
        function(t, e1) {
            var n = Math.ceil, o = Math.floor;
            t.exports = function(t) {
                return isNaN(t = +t) ? 0 : (t > 0 ? o : n)(t);
            };
        },
        function(t, e1, n) {
            var o = n(64), r = n(43), i = n(28), a = n(40), s = n(26), l = n(116), c = Object.getOwnPropertyDescriptor;
            e1.f = n(18) ? c : function(t, e1) {
                if (t = i(t), e1 = a(e1, !0), l) try {
                    return c(t, e1);
                } catch (t1) {}
                if (s(t, e1)) return r(!o.f.call(t, e1), t[e1]);
            };
        },
        function(t, e1, n) {
            var o = n(0), r = n(17), i = n(11);
            t.exports = function(t, e1) {
                var n = (r.Object || {})[t] || Object[t], a = {};
                a[t] = e1(n), o(o.S + o.F * i(function() {
                    n(1);
                }), "Object", a);
            };
        },
        function(t, e1, n) {
            var o = n(31), r = n(63), i = n(22), a = n(16), s = n(132);
            t.exports = function(t, e1) {
                var n = 1 == t, l = 2 == t, c = 3 == t, u = 4 == t, f = 6 == t, d = 5 == t || f, p = e1 || s;
                return function(e1, s, h) {
                    for(var v, g, y = i(e1), b = r(y), m = o(s, h, 3), k = a(b.length), x = 0, w = n ? p(e1, k) : l ? p(e1, 0) : void 0; k > x; x++)if ((d || x in b) && (g = m(v = b[x], x, y), t)) {
                        if (n) w[x] = g;
                        else if (g) switch(t){
                            case 3:
                                return !0;
                            case 5:
                                return v;
                            case 6:
                                return x;
                            case 2:
                                w.push(v);
                        }
                        else if (u) return !1;
                    }
                    return f ? -1 : c || u ? u : w;
                };
            };
        },
        function(t, e1) {
            var n = {}.toString;
            t.exports = function(t) {
                return n.call(t).slice(8, -1);
            };
        },
        function(t, e1) {
            t.exports = function(t) {
                if (null == t) throw TypeError("Can't call method on  " + t);
                return t;
            };
        },
        function(t, e1, n) {
            "use strict";
            if (n(18)) {
                var o = n(45), r = n(10), i = n(11), a = n(0), s = n(80), l = n(109), c = n(31), u = n(57), f = n(43), d = n(27), p = n(58), h = n(33), v = n(16), g = n(143), y = n(47), b = n(40), m = n(26), k = n(65), x = n(13), w = n(22), S = n(101), T = n(48), E = n(50), B = n(49).f, C = n(103), _ = n(44), I = n(15), O = n(36), M = n(70), R = n(66), A = n(105), N = n(55), L = n(73), P = n(56), D = n(104), j = n(134), F = n(19), H = n(34), U = F.f, z = H.f, W = r.RangeError, Y = r.TypeError, V = r.Uint8Array, X = Array.prototype, K = l.ArrayBuffer, G = l.DataView, Z = O(0), q = O(2), J = O(3), $ = O(4), Q = O(5), tt = O(6), et = M(!0), nt = M(!1), ot = A.values, rt = A.keys, it = A.entries, at = X.lastIndexOf, st = X.reduce, lt = X.reduceRight, ct = X.join, ut = X.sort, ft = X.slice, dt = X.toString, pt = X.toLocaleString, ht = I("iterator"), vt = I("toStringTag"), gt = _("typed_constructor"), yt = _("def_constructor"), bt = s.CONSTR, mt = s.TYPED, kt = s.VIEW, xt = O(1, function(t, e1) {
                    return Bt(R(t, t[yt]), e1);
                }), wt = i(function() {
                    return 1 === new V(new Uint16Array([
                        1
                    ]).buffer)[0];
                }), St = !!V && !!V.prototype.set && i(function() {
                    new V(1).set({});
                }), Tt = function(t, e1) {
                    var n = h(t);
                    if (n < 0 || n % e1) throw W("Wrong offset!");
                    return n;
                }, Et = function(t) {
                    if (x(t) && mt in t) return t;
                    throw Y(t + " is not a typed array!");
                }, Bt = function(t, e1) {
                    if (!x(t) || !(gt in t)) throw Y("It is not a typed array constructor!");
                    return new t(e1);
                }, Ct = function(t, e1) {
                    return _t(R(t, t[yt]), e1);
                }, _t = function(t, e1) {
                    for(var n = 0, o = e1.length, r = Bt(t, o); o > n;)r[n] = e1[n++];
                    return r;
                }, It = function(t, e1, n) {
                    U(t, e1, {
                        get: function() {
                            return this._d[n];
                        }
                    });
                }, Ot = function(t) {
                    var e1, n, o, r, i, a, s = w(t), l = arguments.length, u = l > 1 ? arguments[1] : void 0, f = void 0 !== u, d = C(s);
                    if (null != d && !S(d)) {
                        for(a = d.call(s), o = [], e1 = 0; !(i = a.next()).done; e1++)o.push(i.value);
                        s = o;
                    }
                    for(f && l > 2 && (u = c(u, arguments[2], 2)), e1 = 0, n = v(s.length), r = Bt(this, n); n > e1; e1++)r[e1] = f ? u(s[e1], e1) : s[e1];
                    return r;
                }, Mt = function() {
                    for(var t = 0, e1 = arguments.length, n = Bt(this, e1); e1 > t;)n[t] = arguments[t++];
                    return n;
                }, Rt = !!V && i(function() {
                    pt.call(new V(1));
                }), At = function() {
                    return pt.apply(Rt ? ft.call(Et(this)) : Et(this), arguments);
                }, Nt = {
                    copyWithin: function(t, e1) {
                        return j.call(Et(this), t, e1, arguments.length > 2 ? arguments[2] : void 0);
                    },
                    every: function(t) {
                        return $(Et(this), t, arguments.length > 1 ? arguments[1] : void 0);
                    },
                    fill: function(t) {
                        return D.apply(Et(this), arguments);
                    },
                    filter: function(t) {
                        return Ct(this, q(Et(this), t, arguments.length > 1 ? arguments[1] : void 0));
                    },
                    find: function(t) {
                        return Q(Et(this), t, arguments.length > 1 ? arguments[1] : void 0);
                    },
                    findIndex: function(t) {
                        return tt(Et(this), t, arguments.length > 1 ? arguments[1] : void 0);
                    },
                    forEach: function(t) {
                        Z(Et(this), t, arguments.length > 1 ? arguments[1] : void 0);
                    },
                    indexOf: function(t) {
                        return nt(Et(this), t, arguments.length > 1 ? arguments[1] : void 0);
                    },
                    includes: function(t) {
                        return et(Et(this), t, arguments.length > 1 ? arguments[1] : void 0);
                    },
                    join: function(t) {
                        return ct.apply(Et(this), arguments);
                    },
                    lastIndexOf: function(t) {
                        return at.apply(Et(this), arguments);
                    },
                    map: function(t) {
                        return xt(Et(this), t, arguments.length > 1 ? arguments[1] : void 0);
                    },
                    reduce: function(t) {
                        return st.apply(Et(this), arguments);
                    },
                    reduceRight: function(t) {
                        return lt.apply(Et(this), arguments);
                    },
                    reverse: function() {
                        for(var t, e1 = Et(this).length, n = Math.floor(e1 / 2), o = 0; o < n;)t = this[o], this[o++] = this[--e1], this[e1] = t;
                        return this;
                    },
                    some: function(t) {
                        return J(Et(this), t, arguments.length > 1 ? arguments[1] : void 0);
                    },
                    sort: function(t) {
                        return ut.call(Et(this), t);
                    },
                    subarray: function(t, e1) {
                        var n = Et(this), o = n.length, r = y(t, o);
                        return new (R(n, n[yt]))(n.buffer, n.byteOffset + r * n.BYTES_PER_ELEMENT, v((void 0 === e1 ? o : y(e1, o)) - r));
                    }
                }, Lt = function(t, e1) {
                    return Ct(this, ft.call(Et(this), t, e1));
                }, Pt = function(t) {
                    Et(this);
                    var e1 = Tt(arguments[1], 1), n = this.length, o = w(t), r = v(o.length), i = 0;
                    if (r + e1 > n) throw W("Wrong length!");
                    for(; i < r;)this[e1 + i] = o[i++];
                }, Dt = {
                    entries: function() {
                        return it.call(Et(this));
                    },
                    keys: function() {
                        return rt.call(Et(this));
                    },
                    values: function() {
                        return ot.call(Et(this));
                    }
                }, jt = function(t, e1) {
                    return x(t) && t[mt] && "symbol" != typeof e1 && e1 in t && String(+e1) == String(e1);
                }, Ft = function(t, e1) {
                    return jt(t, e1 = b(e1, !0)) ? f(2, t[e1]) : z(t, e1);
                }, Ht = function(t, e1, n) {
                    return !(jt(t, e1 = b(e1, !0)) && x(n) && m(n, "value")) || m(n, "get") || m(n, "set") || n.configurable || m(n, "writable") && !n.writable || m(n, "enumerable") && !n.enumerable ? U(t, e1, n) : (t[e1] = n.value, t);
                };
                bt || (H.f = Ft, F.f = Ht), a(a.S + a.F * !bt, "Object", {
                    getOwnPropertyDescriptor: Ft,
                    defineProperty: Ht
                }), i(function() {
                    dt.call({});
                }) && (dt = pt = function() {
                    return ct.call(this);
                });
                var Ut = p({}, Nt);
                p(Ut, Dt), d(Ut, ht, Dt.values), p(Ut, {
                    slice: Lt,
                    set: Pt,
                    constructor: function() {},
                    toString: dt,
                    toLocaleString: At
                }), It(Ut, "buffer", "b"), It(Ut, "byteOffset", "o"), It(Ut, "byteLength", "l"), It(Ut, "length", "e"), U(Ut, vt, {
                    get: function() {
                        return this[mt];
                    }
                }), t.exports = function(t, e1, n, l) {
                    var c = t + ((l = !!l) ? "Clamped" : "") + "Array", f = "get" + t, p = "set" + t, h = r[c], y = h || {}, b = h && E(h), m = !h || !s.ABV, w = {}, S = h && h.prototype, C = function(t, n) {
                        U(t, n, {
                            get: function() {
                                return function(t, n) {
                                    var o = t._d;
                                    return o.v[f](n * e1 + o.o, wt);
                                }(this, n);
                            },
                            set: function(t) {
                                return function(t, n, o) {
                                    var r = t._d;
                                    l && (o = (o = Math.round(o)) < 0 ? 0 : o > 255 ? 255 : 255 & o), r.v[p](n * e1 + r.o, o, wt);
                                }(this, n, t);
                            },
                            enumerable: !0
                        });
                    };
                    m ? (h = n(function(t, n, o, r) {
                        u(t, h, c, "_d");
                        var i, a, s, l, f = 0, p = 0;
                        if (x(n)) {
                            if (!(n instanceof K || "ArrayBuffer" == (l = k(n)) || "SharedArrayBuffer" == l)) return mt in n ? _t(h, n) : Ot.call(h, n);
                            i = n, p = Tt(o, e1);
                            var y = n.byteLength;
                            if (void 0 === r) {
                                if (y % e1) throw W("Wrong length!");
                                if ((a = y - p) < 0) throw W("Wrong length!");
                            } else if ((a = v(r) * e1) + p > y) throw W("Wrong length!");
                            s = a / e1;
                        } else s = g(n), i = new K(a = s * e1);
                        for(d(t, "_d", {
                            b: i,
                            o: p,
                            l: a,
                            e: s,
                            v: new G(i)
                        }); f < s;)C(t, f++);
                    }), S = h.prototype = T(Ut), d(S, "constructor", h)) : i(function() {
                        h(1);
                    }) && i(function() {
                        new h(-1);
                    }) && L(function(t) {
                        new h, new h(null), new h(1.5), new h(t);
                    }, !0) || (h = n(function(t, n, o, r) {
                        var i;
                        return u(t, h, c), x(n) ? n instanceof K || "ArrayBuffer" == (i = k(n)) || "SharedArrayBuffer" == i ? void 0 !== r ? new y(n, Tt(o, e1), r) : void 0 !== o ? new y(n, Tt(o, e1)) : new y(n) : mt in n ? _t(h, n) : Ot.call(h, n) : new y(g(n));
                    }), Z(b !== Function.prototype ? B(y).concat(B(b)) : B(y), function(t) {
                        t in h || d(h, t, y[t]);
                    }), h.prototype = S, o || (S.constructor = h));
                    var _ = S[ht], I = !!_ && ("values" == _.name || null == _.name), O = Dt.values;
                    d(h, gt, !0), d(S, mt, c), d(S, kt, !0), d(S, yt, h), (l ? new h(1)[vt] == c : vt in S) || U(S, vt, {
                        get: function() {
                            return c;
                        }
                    }), w[c] = h, a(a.G + a.W + a.F * (h != y), w), a(a.S, c, {
                        BYTES_PER_ELEMENT: e1
                    }), a(a.S + a.F * i(function() {
                        y.of.call(h, 1);
                    }), c, {
                        from: Ot,
                        of: Mt
                    }), "BYTES_PER_ELEMENT" in S || d(S, "BYTES_PER_ELEMENT", e1), a(a.P, c, Nt), P(c), a(a.P + a.F * St, c, {
                        set: Pt
                    }), a(a.P + a.F * !I, c, Dt), o || S.toString == dt || (S.toString = dt), a(a.P + a.F * i(function() {
                        new h(1).slice();
                    }), c, {
                        slice: Lt
                    }), a(a.P + a.F * (i(function() {
                        return [
                            1,
                            2
                        ].toLocaleString() != new h([
                            1,
                            2
                        ]).toLocaleString();
                    }) || !i(function() {
                        S.toLocaleString.call([
                            1,
                            2
                        ]);
                    })), c, {
                        toLocaleString: At
                    }), N[c] = I ? _ : O, o || I || d(S, ht, O);
                };
            } else t.exports = function() {};
        },
        function(t, e1, n) {
            var o = n(13);
            t.exports = function(t, e1) {
                if (!o(t)) return t;
                var n, r;
                if (e1 && "function" == typeof (n = t.toString) && !o(r = n.call(t))) return r;
                if ("function" == typeof (n = t.valueOf) && !o(r = n.call(t))) return r;
                if (!e1 && "function" == typeof (n = t.toString) && !o(r = n.call(t))) return r;
                throw TypeError("Can't convert object to primitive value");
            };
        },
        function(t, e1, n) {
            var o = n(44)("meta"), r = n(13), i = n(26), a = n(19).f, s = 0, l = Object.isExtensible || function() {
                return !0;
            }, c = !n(11)(function() {
                return l(Object.preventExtensions({}));
            }), u = function(t) {
                a(t, o, {
                    value: {
                        i: "O" + ++s,
                        w: {}
                    }
                });
            }, f = t.exports = {
                KEY: o,
                NEED: !1,
                fastKey: function(t, e1) {
                    if (!r(t)) return "symbol" == typeof t ? t : ("string" == typeof t ? "S" : "P") + t;
                    if (!i(t, o)) {
                        if (!l(t)) return "F";
                        if (!e1) return "E";
                        u(t);
                    }
                    return t[o].i;
                },
                getWeak: function(t, e1) {
                    if (!i(t, o)) {
                        if (!l(t)) return !0;
                        if (!e1) return !1;
                        u(t);
                    }
                    return t[o].w;
                },
                onFreeze: function(t) {
                    return c && f.NEED && l(t) && !i(t, o) && u(t), t;
                }
            };
        },
        function(t, e1, n) {
            var o = n(368), r = n(369), i = n(148), a = n(370);
            t.exports = function(t) {
                return o(t) || r(t) || i(t) || a();
            };
        },
        function(t, e1) {
            t.exports = function(t, e1) {
                return {
                    enumerable: !(1 & t),
                    configurable: !(2 & t),
                    writable: !(4 & t),
                    value: e1
                };
            };
        },
        function(t, e1) {
            var n = 0, o = Math.random();
            t.exports = function(t) {
                return "Symbol(".concat(void 0 === t ? "" : t, ")_", (++n + o).toString(36));
            };
        },
        function(t, e1) {
            t.exports = !1;
        },
        function(t, e1, n) {
            var o = n(118), r = n(88);
            t.exports = Object.keys || function(t) {
                return o(t, r);
            };
        },
        function(t, e1, n) {
            var o = n(33), r = Math.max, i = Math.min;
            t.exports = function(t, e1) {
                return (t = o(t)) < 0 ? r(t + e1, 0) : i(t, e1);
            };
        },
        function(t, e1, n) {
            var o = n(12), r = n(119), i = n(88), a = n(87)("IE_PROTO"), s = function() {}, l = function() {
                var t, e1 = n(85)("iframe"), o = i.length;
                for(e1.style.display = "none", n(89).appendChild(e1), e1.src = "javascript:", (t = e1.contentWindow.document).open(), t.write("<script>document.F=Object</script>"), t.close(), l = t.F; o--;)delete l.prototype[i[o]];
                return l();
            };
            t.exports = Object.create || function(t, e1) {
                var n;
                return null !== t ? (s.prototype = o(t), n = new s, s.prototype = null, n[a] = t) : n = l(), void 0 === e1 ? n : r(n, e1);
            };
        },
        function(t, e1, n) {
            var o = n(118), r = n(88).concat("length", "prototype");
            e1.f = Object.getOwnPropertyNames || function(t) {
                return o(t, r);
            };
        },
        function(t, e1, n) {
            var o = n(26), r = n(22), i = n(87)("IE_PROTO"), a = Object.prototype;
            t.exports = Object.getPrototypeOf || function(t) {
                return t = r(t), o(t, i) ? t[i] : "function" == typeof t.constructor && t instanceof t.constructor ? t.constructor.prototype : t instanceof Object ? a : null;
            };
        },
        function(t, e1, n) {
            var o = n(15)("unscopables"), r = Array.prototype;
            null == r[o] && n(27)(r, o, {}), t.exports = function(t) {
                r[o][t] = !0;
            };
        },
        function(t, e1, n) {
            var o = n(13);
            t.exports = function(t, e1) {
                if (!o(t) || t._t !== e1) throw TypeError("Incompatible receiver, " + e1 + " required!");
                return t;
            };
        },
        function(t, e1, n) {
            var o = n(19).f, r = n(26), i = n(15)("toStringTag");
            t.exports = function(t, e1, n) {
                t && !r(t = n ? t : t.prototype, i) && o(t, i, {
                    configurable: !0,
                    value: e1
                });
            };
        },
        function(t, e1, n) {
            var o = n(0), r = n(38), i = n(11), a = n(91), s = "[" + a + "]", l = RegExp("^" + s + s + "*"), c = RegExp(s + s + "*$"), u = function(t, e1, n) {
                var r = {}, s = i(function() {
                    return !!a[t]() || "​\x85" != "​\x85"[t]();
                }), l = r[t] = s ? e1(f) : a[t];
                n && (r[n] = l), o(o.P + o.F * s, "String", r);
            }, f = u.trim = function(t, e1) {
                return t = String(r(t)), 1 & e1 && (t = t.replace(l, "")), 2 & e1 && (t = t.replace(c, "")), t;
            };
            t.exports = u;
        },
        function(t, e1) {
            t.exports = {};
        },
        function(t, e1, n) {
            "use strict";
            var o = n(10), r = n(19), i = n(18), a = n(15)("species");
            t.exports = function(t) {
                var e1 = o[t];
                i && e1 && !e1[a] && r.f(e1, a, {
                    configurable: !0,
                    get: function() {
                        return this;
                    }
                });
            };
        },
        function(t, e1) {
            t.exports = function(t, e1, n, o) {
                if (!(t instanceof e1) || void 0 !== o && o in t) throw TypeError(n + ": incorrect invocation!");
                return t;
            };
        },
        function(t, e1, n) {
            var o = n(23);
            t.exports = function(t, e1, n) {
                for(var r in e1)o(t, r, e1[r], n);
                return t;
            };
        },
        function(t, e1) {
            function n(e1) {
                return "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? t.exports = n = function(t) {
                    return typeof t;
                } : t.exports = n = function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                }, n(e1);
            }
            t.exports = n;
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(150)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a) {
                "use strict";
                var s = n(1);
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = s(r), i = s(i), a = s(a);
                var l = function() {
                    function t() {
                        (0, r.default)(this, t);
                    }
                    return (0, i.default)(t, null, [
                        {
                            key: "ui",
                            value: function(e1, n) {
                                return t._t(e1, n);
                            }
                        },
                        {
                            key: "t",
                            value: function(e1, n) {
                                return t._t(e1, n);
                            }
                        },
                        {
                            key: "setDictionary",
                            value: function(e1) {
                                t.currentDictionary = e1;
                            }
                        },
                        {
                            key: "_t",
                            value: function(e1, n) {
                                var o = t.getNamespace(e1);
                                return o && o[n] ? o[n] : n;
                            }
                        },
                        {
                            key: "getNamespace",
                            value: function(e1) {
                                return e1.split(".").reduce(function(t, e1) {
                                    return t && Object.keys(t).length ? t[e1] : {};
                                }, t.currentDictionary);
                            }
                        }
                    ]), t;
                }();
                o.default = l, l.displayName = "I18n", l.currentDictionary = a.default, t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(30),
                n(20),
                n(21),
                n(42),
                n(2),
                n(3),
                n(152),
                n(113),
                n(5),
                n(6),
                n(4),
                n(14),
                n(7),
                n(112),
                n(25),
                n(81)
            ], void 0 === (i = "function" == typeof (o = function(t, e1, o, r, i, a, s, l, c, u, f, d, p, h, v, g, y) {
                "use strict";
                var b, m = n(8), k = n(1);
                function x() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.default = t.BlockToolAPI = void 0, e1 = k(e1), o = k(o), r = k(r), i = k(i), a = k(a), s = k(s), l = k(l), c = k(c), u = k(u), f = k(f), d = k(d), p = k(p), h = m(h), v = k(v), g = k(g), y = k(y), t.BlockToolAPI = b, function(t) {
                    t.APPEND_CALLBACK = "appendCallback", t.RENDERED = "rendered", t.MOVED = "moved", t.UPDATED = "updated", t.REMOVED = "removed", t.ON_PASTE = "onPaste";
                }(b || (t.BlockToolAPI = b = {}));
                var w = function(t) {
                    (0, u.default)(T, t);
                    var n, y, m, k, w, S = (n = T, function() {
                        var t, e1 = (0, d.default)(n);
                        if (x()) {
                            var o = (0, d.default)(this).constructor;
                            t = Reflect.construct(e1, arguments, o);
                        } else t = e1.apply(this, arguments);
                        return (0, f.default)(this, t);
                    });
                    function T(t) {
                        var e1, n = t.id, o = void 0 === n ? h.generateBlockId() : n, r = t.data, s = t.tool, c = t.api, u = t.readOnly, f = t.tunesData;
                        return (0, a.default)(this, T), (e1 = S.call(this)).cachedInputs = [], e1.tunesInstances = new Map, e1.defaultTunesInstances = new Map, e1.unavailableTunesData = {}, e1.inputIndex = 0, e1.modificationDebounceTimer = 450, e1.didMutated = h.debounce(function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [], n = t instanceof InputEvent || !t.some(function(t) {
                                var e1 = t.addedNodes, n = void 0 === e1 ? [] : e1, o = t.removedNodes;
                                return [].concat((0, i.default)(Array.from(n)), (0, i.default)(Array.from(o))).some(function(t) {
                                    return p.default.isElement(t) && "true" === t.dataset.mutationFree;
                                });
                            });
                            n && (e1.cachedInputs = [], e1.updateCurrentInput(), e1.call(b.UPDATED), e1.emit("didMutated", (0, l.default)(e1)));
                        }, e1.modificationDebounceTimer), e1.handleFocus = function() {
                            e1.cachedInputs = [], e1.updateCurrentInput();
                        }, e1.name = s.name, e1.id = o, e1.settings = s.settings, e1.config = s.settings.config || {}, e1.api = c, e1.blockAPI = new v.default((0, l.default)(e1)), e1.mutationObserver = new MutationObserver(e1.didMutated), e1.tool = s, e1.toolInstance = s.create(r, e1.blockAPI, u), e1.tunes = s.tunes, e1.composeTunes(f), e1.holder = e1.compose(), e1;
                    }
                    return (0, s.default)(T, [
                        {
                            key: "call",
                            value: function(t, e1) {
                                if (h.isFunction(this.toolInstance[t])) {
                                    t === b.APPEND_CALLBACK && h.log("`appendCallback` hook is deprecated and will be removed in the next major release. Use `rendered` hook instead", "warn");
                                    try {
                                        this.toolInstance[t].call(this.toolInstance, e1);
                                    } catch (e2) {
                                        h.log("Error during '".concat(t, "' call: ").concat(e2.message), "error");
                                    }
                                }
                            }
                        },
                        {
                            key: "mergeWith",
                            value: (w = (0, r.default)(o.default.mark(function t(e1) {
                                return o.default.wrap(function(t) {
                                    for(;;)switch(t.prev = t.next){
                                        case 0:
                                            return t.next = 2, this.toolInstance.merge(e1);
                                        case 2:
                                        case "end":
                                            return t.stop();
                                    }
                                }, t, this);
                            })), function(t) {
                                return w.apply(this, arguments);
                            })
                        },
                        {
                            key: "save",
                            value: (k = (0, r.default)(o.default.mark(function t() {
                                var n, r, a, s, l = this;
                                return o.default.wrap(function(t) {
                                    for(;;)switch(t.prev = t.next){
                                        case 0:
                                            return t.next = 2, this.toolInstance.save(this.pluginsContent);
                                        case 2:
                                            return n = t.sent, r = this.unavailableTunesData, [].concat((0, i.default)(this.tunesInstances.entries()), (0, i.default)(this.defaultTunesInstances.entries())).forEach(function(t) {
                                                var n = (0, e1.default)(t, 2), o = n[0], i = n[1];
                                                if (h.isFunction(i.save)) try {
                                                    r[o] = i.save();
                                                } catch (t1) {
                                                    h.log("Tune ".concat(i.constructor.name, " save method throws an Error %o"), "warn", t1);
                                                }
                                            }), a = window.performance.now(), t.abrupt("return", Promise.resolve(n).then(function(t) {
                                                return s = window.performance.now(), {
                                                    id: l.id,
                                                    tool: l.name,
                                                    data: t,
                                                    tunes: r,
                                                    time: s - a
                                                };
                                            }).catch(function(t) {
                                                h.log("Saving proccess for ".concat(l.name, " tool failed due to the ").concat(t), "log", "red");
                                            }));
                                        case 7:
                                        case "end":
                                            return t.stop();
                                    }
                                }, t, this);
                            })), function() {
                                return k.apply(this, arguments);
                            })
                        },
                        {
                            key: "validate",
                            value: (m = (0, r.default)(o.default.mark(function t(e1) {
                                var n;
                                return o.default.wrap(function(t) {
                                    for(;;)switch(t.prev = t.next){
                                        case 0:
                                            if (n = !0, !(this.toolInstance.validate instanceof Function)) {
                                                t.next = 5;
                                                break;
                                            }
                                            return t.next = 4, this.toolInstance.validate(e1);
                                        case 4:
                                            n = t.sent;
                                        case 5:
                                            return t.abrupt("return", n);
                                        case 6:
                                        case "end":
                                            return t.stop();
                                    }
                                }, t, this);
                            })), function(t) {
                                return m.apply(this, arguments);
                            })
                        },
                        {
                            key: "renderTunes",
                            value: function() {
                                var t = document.createDocumentFragment(), e1 = document.createDocumentFragment();
                                return this.tunesInstances.forEach(function(e1) {
                                    p.default.append(t, e1.render());
                                }), this.defaultTunesInstances.forEach(function(t) {
                                    p.default.append(e1, t.render());
                                }), [
                                    t,
                                    e1
                                ];
                            }
                        },
                        {
                            key: "updateCurrentInput",
                            value: function() {
                                this.currentInput = p.default.isNativeInput(document.activeElement) || !g.default.anchorNode ? document.activeElement : g.default.anchorNode;
                            }
                        },
                        {
                            key: "willSelect",
                            value: function() {
                                this.mutationObserver.observe(this.holder.firstElementChild, {
                                    childList: !0,
                                    subtree: !0,
                                    characterData: !0,
                                    attributes: !0
                                }), this.addInputEvents();
                            }
                        },
                        {
                            key: "willUnselect",
                            value: function() {
                                this.mutationObserver.disconnect(), this.removeInputEvents();
                            }
                        },
                        {
                            key: "dispatchChange",
                            value: function() {
                                this.didMutated();
                            }
                        },
                        {
                            key: "destroy",
                            value: function() {
                                (0, c.default)((0, d.default)(T.prototype), "destroy", this).call(this), h.isFunction(this.toolInstance.destroy) && this.toolInstance.destroy();
                            }
                        },
                        {
                            key: "renderSettings",
                            value: function() {
                                if (h.isFunction(this.toolInstance.renderSettings)) return this.toolInstance.renderSettings();
                            }
                        },
                        {
                            key: "getActiveToolboxEntry",
                            value: (y = (0, r.default)(o.default.mark(function t() {
                                var n, r, i;
                                return o.default.wrap(function(t) {
                                    for(;;)switch(t.prev = t.next){
                                        case 0:
                                            if (1 !== (n = this.tool.toolbox).length) {
                                                t.next = 3;
                                                break;
                                            }
                                            return t.abrupt("return", Promise.resolve(this.tool.toolbox[0]));
                                        case 3:
                                            return t.next = 5, this.data;
                                        case 5:
                                            return r = t.sent, i = n, t.abrupt("return", i.find(function(t) {
                                                return Object.entries(t.data).some(function(t) {
                                                    var n = (0, e1.default)(t, 2), o = n[0], i = n[1];
                                                    return r[o] && h.equals(r[o], i);
                                                });
                                            }));
                                        case 8:
                                        case "end":
                                            return t.stop();
                                    }
                                }, t, this);
                            })), function() {
                                return y.apply(this, arguments);
                            })
                        },
                        {
                            key: "compose",
                            value: function() {
                                var t = p.default.make("div", T.CSS.wrapper), e1 = p.default.make("div", T.CSS.content), n = this.toolInstance.render();
                                e1.appendChild(n);
                                var o = e1;
                                return [].concat((0, i.default)(this.tunesInstances.values()), (0, i.default)(this.defaultTunesInstances.values())).forEach(function(t) {
                                    if (h.isFunction(t.wrap)) try {
                                        o = t.wrap(o);
                                    } catch (e1) {
                                        h.log("Tune ".concat(t.constructor.name, " wrap method throws an Error %o"), "warn", e1);
                                    }
                                }), t.appendChild(o), t;
                            }
                        },
                        {
                            key: "composeTunes",
                            value: function(t) {
                                var n = this;
                                Array.from(this.tunes.values()).forEach(function(e1) {
                                    (e1.isInternal ? n.defaultTunesInstances : n.tunesInstances).set(e1.name, e1.create(t[e1.name], n.blockAPI));
                                }), Object.entries(t).forEach(function(t) {
                                    var o = (0, e1.default)(t, 2), r = o[0], i = o[1];
                                    n.tunesInstances.has(r) || (n.unavailableTunesData[r] = i);
                                });
                            }
                        },
                        {
                            key: "addInputEvents",
                            value: function() {
                                var t = this;
                                this.inputs.forEach(function(e1) {
                                    e1.addEventListener("focus", t.handleFocus), p.default.isNativeInput(e1) && e1.addEventListener("input", t.didMutated);
                                });
                            }
                        },
                        {
                            key: "removeInputEvents",
                            value: function() {
                                var t = this;
                                this.inputs.forEach(function(e1) {
                                    e1.removeEventListener("focus", t.handleFocus), p.default.isNativeInput(e1) && e1.removeEventListener("input", t.didMutated);
                                });
                            }
                        },
                        {
                            key: "inputs",
                            get: function() {
                                if (0 !== this.cachedInputs.length) return this.cachedInputs;
                                var t = p.default.findAllInputs(this.holder);
                                return this.inputIndex > t.length - 1 && (this.inputIndex = t.length - 1), this.cachedInputs = t, t;
                            }
                        },
                        {
                            key: "currentInput",
                            get: function() {
                                return this.inputs[this.inputIndex];
                            },
                            set: function(t) {
                                var e1 = this.inputs.findIndex(function(e1) {
                                    return e1 === t || e1.contains(t);
                                });
                                -1 !== e1 && (this.inputIndex = e1);
                            }
                        },
                        {
                            key: "firstInput",
                            get: function() {
                                return this.inputs[0];
                            }
                        },
                        {
                            key: "lastInput",
                            get: function() {
                                var t = this.inputs;
                                return t[t.length - 1];
                            }
                        },
                        {
                            key: "nextInput",
                            get: function() {
                                return this.inputs[this.inputIndex + 1];
                            }
                        },
                        {
                            key: "previousInput",
                            get: function() {
                                return this.inputs[this.inputIndex - 1];
                            }
                        },
                        {
                            key: "data",
                            get: function() {
                                return this.save().then(function(t) {
                                    return t && !h.isEmpty(t.data) ? t.data : {};
                                });
                            }
                        },
                        {
                            key: "sanitize",
                            get: function() {
                                return this.tool.sanitizeConfig;
                            }
                        },
                        {
                            key: "mergeable",
                            get: function() {
                                return h.isFunction(this.toolInstance.merge);
                            }
                        },
                        {
                            key: "isEmpty",
                            get: function() {
                                var t = p.default.isEmpty(this.pluginsContent), e1 = !this.hasMedia;
                                return t && e1;
                            }
                        },
                        {
                            key: "hasMedia",
                            get: function() {
                                return !!this.holder.querySelector([
                                    "img",
                                    "iframe",
                                    "video",
                                    "audio",
                                    "source",
                                    "input",
                                    "textarea",
                                    "twitterwidget"
                                ].join(","));
                            }
                        },
                        {
                            key: "focused",
                            set: function(t) {
                                this.holder.classList.toggle(T.CSS.focused, t);
                            },
                            get: function() {
                                return this.holder.classList.contains(T.CSS.focused);
                            }
                        },
                        {
                            key: "selected",
                            set: function(t) {
                                t ? (this.holder.classList.add(T.CSS.selected), g.default.addFakeCursor(this.holder)) : (this.holder.classList.remove(T.CSS.selected), g.default.removeFakeCursor(this.holder));
                            },
                            get: function() {
                                return this.holder.classList.contains(T.CSS.selected);
                            }
                        },
                        {
                            key: "stretched",
                            set: function(t) {
                                this.holder.classList.toggle(T.CSS.wrapperStretched, t);
                            },
                            get: function() {
                                return this.holder.classList.contains(T.CSS.wrapperStretched);
                            }
                        },
                        {
                            key: "dropTarget",
                            set: function(t) {
                                this.holder.classList.toggle(T.CSS.dropTarget, t);
                            }
                        },
                        {
                            key: "pluginsContent",
                            get: function() {
                                var t = this.holder.querySelector(".".concat(T.CSS.content));
                                if (t && t.childNodes.length) for(var e1 = t.childNodes.length - 1; e1 >= 0; e1--){
                                    var n = t.childNodes[e1];
                                    if (!p.default.isExtensionNode(n)) return n;
                                }
                                return null;
                            }
                        }
                    ], [
                        {
                            key: "CSS",
                            get: function() {
                                return {
                                    wrapper: "ce-block",
                                    wrapperStretched: "ce-block--stretched",
                                    content: "ce-block__content",
                                    focused: "ce-block--focused",
                                    selected: "ce-block--selected",
                                    dropTarget: "ce-block--drop-target"
                                };
                            }
                        }
                    ]), T;
                }(y.default);
                t.default = w, w.displayName = "Block";
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(381),
                n(7)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s) {
                "use strict";
                var l = n(8), c = n(1);
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = c(r), i = c(i), a = c(a), s = l(s);
                var u = function() {
                    function t(e1) {
                        var n = this;
                        (0, r.default)(this, t), this.iterator = null, this.activated = !1, this.onKeyDown = function(e1) {
                            if (n.isEventReadyForHandling(e1)) switch(t.usedKeys.includes(e1.keyCode) && e1.preventDefault(), e1.keyCode){
                                case s.keyCodes.TAB:
                                    n.handleTabPress(e1);
                                    break;
                                case s.keyCodes.LEFT:
                                case s.keyCodes.UP:
                                    n.flipLeft();
                                    break;
                                case s.keyCodes.RIGHT:
                                case s.keyCodes.DOWN:
                                    n.flipRight();
                                    break;
                                case s.keyCodes.ENTER:
                                    n.handleEnterPress(e1);
                            }
                        }, this.iterator = new a.default(e1.items, e1.focusedItemClass), this.activateCallback = e1.activateCallback, this.allowedKeys = e1.allowedKeys || t.usedKeys;
                    }
                    return (0, i.default)(t, [
                        {
                            key: "activate",
                            value: function(t) {
                                this.activated = !0, t && this.iterator.setItems(t), document.addEventListener("keydown", this.onKeyDown);
                            }
                        },
                        {
                            key: "deactivate",
                            value: function() {
                                this.activated = !1, this.dropCursor(), document.removeEventListener("keydown", this.onKeyDown);
                            }
                        },
                        {
                            key: "focusFirst",
                            value: function() {
                                this.dropCursor(), this.flipRight();
                            }
                        },
                        {
                            key: "flipLeft",
                            value: function() {
                                this.iterator.previous(), this.flipCallback();
                            }
                        },
                        {
                            key: "flipRight",
                            value: function() {
                                this.iterator.next(), this.flipCallback();
                            }
                        },
                        {
                            key: "hasFocus",
                            value: function() {
                                return !!this.iterator.currentItem;
                            }
                        },
                        {
                            key: "dropCursor",
                            value: function() {
                                this.iterator.dropCursor();
                            }
                        },
                        {
                            key: "isEventReadyForHandling",
                            value: function(t) {
                                return this.activated && this.allowedKeys.includes(t.keyCode);
                            }
                        },
                        {
                            key: "handleTabPress",
                            value: function(t) {
                                switch(t.shiftKey ? a.default.directions.LEFT : a.default.directions.RIGHT){
                                    case a.default.directions.RIGHT:
                                        this.flipRight();
                                        break;
                                    case a.default.directions.LEFT:
                                        this.flipLeft();
                                }
                            }
                        },
                        {
                            key: "handleEnterPress",
                            value: function(t) {
                                this.activated && (this.iterator.currentItem && this.iterator.currentItem.click(), s.isFunction(this.activateCallback) && this.activateCallback(this.iterator.currentItem), t.preventDefault(), t.stopPropagation());
                            }
                        },
                        {
                            key: "flipCallback",
                            value: function() {
                                this.iterator.currentItem && this.iterator.currentItem.scrollIntoViewIfNeeded();
                            }
                        }
                    ], [
                        {
                            key: "usedKeys",
                            get: function() {
                                return [
                                    s.keyCodes.TAB,
                                    s.keyCodes.LEFT,
                                    s.keyCodes.RIGHT,
                                    s.keyCodes.ENTER,
                                    s.keyCodes.UP,
                                    s.keyCodes.DOWN
                                ];
                            }
                        }
                    ]), t;
                }();
                o.default = u, u.displayName = "Flipper", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o = n(37);
            t.exports = Object("z").propertyIsEnumerable(0) ? Object : function(t) {
                return "String" == o(t) ? t.split("") : Object(t);
            };
        },
        function(t, e1) {
            e1.f = ({}).propertyIsEnumerable;
        },
        function(t, e1, n) {
            var o = n(37), r = n(15)("toStringTag"), i = "Arguments" == o(function() {
                return arguments;
            }());
            t.exports = function(t) {
                var e1, n, a;
                return void 0 === t ? "Undefined" : null === t ? "Null" : "string" == typeof (n = function(t, e1) {
                    try {
                        return t[e1];
                    } catch (t1) {}
                }(e1 = Object(t), r)) ? n : i ? o(e1) : "Object" == (a = o(e1)) && "function" == typeof e1.callee ? "Arguments" : a;
            };
        },
        function(t, e1, n) {
            var o = n(12), r = n(32), i = n(15)("species");
            t.exports = function(t, e1) {
                var n, a = o(t).constructor;
                return void 0 === a || null == (n = o(a)[i]) ? e1 : r(n);
            };
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(7),
                n(379)
            ], void 0 === (i = "function" == typeof (o = function(t, e1, o) {
                "use strict";
                var r = n(1), i = n(8);
                function a(t) {
                    var e1 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, n = {
                        tags: e1
                    }, r = new o.default(n);
                    return r.clean(t);
                }
                function s(t, n) {
                    var o, r, i;
                    return Array.isArray(t) ? (i = n, t.map(function(t) {
                        return s(t, i);
                    })) : e1.isObject(t) ? function(t, n) {
                        var o, r = {};
                        for(var i in t)if (Object.prototype.hasOwnProperty.call(t, i)) {
                            var a = t[i], l = (o = n[i], e1.isObject(o) || e1.isBoolean(o) || e1.isFunction(o) ? n[i] : n);
                            r[i] = s(a, l);
                        }
                        return r;
                    }(t, n) : e1.isString(t) ? (o = t, r = n, e1.isObject(r) ? a(o, r) : !1 === r ? a(o, {}) : o) : t;
                }
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.sanitizeBlocks = function(t, n) {
                    return t.map(function(t) {
                        var o = e1.isFunction(n) ? n(t.tool) : n;
                        return e1.isEmpty(o) || (t.data = s(t.data, o)), t;
                    });
                }, t.clean = a, e1 = i(e1), o = r(o);
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(7)
            ], void 0 === (i = "function" == typeof (o = function(t, e1, o, r) {
                "use strict";
                var i, a, s, l, c, u, f = n(8), d = n(1);
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.default = t.InternalTuneSettings = t.InternalInlineToolSettings = t.InternalBlockToolSettings = t.CommonInternalSettings = t.UserSettings = t.ToolType = void 0, e1 = d(e1), o = d(o), r = f(r), t.ToolType = i, function(t) {
                    t[t.Block = 0] = "Block", t[t.Inline = 1] = "Inline", t[t.Tune = 2] = "Tune";
                }(i || (t.ToolType = i = {})), t.UserSettings = a, function(t) {
                    t.Shortcut = "shortcut", t.Toolbox = "toolbox", t.EnabledInlineTools = "inlineToolbar", t.EnabledBlockTunes = "tunes", t.Config = "config";
                }(a || (t.UserSettings = a = {})), t.CommonInternalSettings = s, function(t) {
                    t.Shortcut = "shortcut", t.SanitizeConfig = "sanitize";
                }(s || (t.CommonInternalSettings = s = {})), t.InternalBlockToolSettings = l, function(t) {
                    t.IsEnabledLineBreaks = "enableLineBreaks", t.Toolbox = "toolbox", t.ConversionConfig = "conversionConfig", t.IsReadOnlySupported = "isReadOnlySupported", t.PasteConfig = "pasteConfig";
                }(l || (t.InternalBlockToolSettings = l = {})), t.InternalInlineToolSettings = c, function(t) {
                    t.IsInline = "isInline", t.Title = "title";
                }(c || (t.InternalInlineToolSettings = c = {})), t.InternalTuneSettings = u, function(t) {
                    t.IsTune = "isTune";
                }(u || (t.InternalTuneSettings = u = {}));
                var p = function() {
                    function t(n) {
                        var o = n.name, r = n.constructable, i = n.config, a = n.api, s = n.isDefault, l = n.isInternal, c = void 0 !== l && l, u = n.defaultPlaceholder;
                        (0, e1.default)(this, t), this.api = a, this.name = o, this.constructable = r, this.config = i, this.isDefault = s, this.isInternal = c, this.defaultPlaceholder = u;
                    }
                    return (0, o.default)(t, [
                        {
                            key: "reset",
                            value: function() {
                                if (r.isFunction(this.constructable.reset)) return this.constructable.reset();
                            }
                        },
                        {
                            key: "prepare",
                            value: function() {
                                if (r.isFunction(this.constructable.prepare)) return this.constructable.prepare({
                                    toolName: this.name,
                                    config: this.settings
                                });
                            }
                        },
                        {
                            key: "isInline",
                            value: function() {
                                return this.type === i.Inline;
                            }
                        },
                        {
                            key: "isBlock",
                            value: function() {
                                return this.type === i.Block;
                            }
                        },
                        {
                            key: "isTune",
                            value: function() {
                                return this.type === i.Tune;
                            }
                        },
                        {
                            key: "settings",
                            get: function() {
                                var t = this.config[a.Config] || {};
                                return this.isDefault && !("placeholder" in t) && this.defaultPlaceholder && (t.placeholder = this.defaultPlaceholder), t;
                            }
                        },
                        {
                            key: "shortcut",
                            get: function() {
                                var t = this.constructable[s.Shortcut];
                                return this.config[a.Shortcut] || t;
                            }
                        },
                        {
                            key: "sanitizeConfig",
                            get: function() {
                                return this.constructable[s.SanitizeConfig] || {};
                            }
                        }
                    ]), t;
                }();
                t.default = p, p.displayName = "BaseTool";
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o = n(17), r = n(10), i = r["__core-js_shared__"] || (r["__core-js_shared__"] = {});
            (t.exports = function(t, e1) {
                return i[t] || (i[t] = void 0 !== e1 ? e1 : {});
            })("versions", []).push({
                version: o.version,
                mode: n(45) ? "pure" : "global",
                copyright: "\xa9 2019 Denis Pushkarev (zloirock.ru)"
            });
        },
        function(t, e1, n) {
            var o = n(28), r = n(16), i = n(47);
            t.exports = function(t) {
                return function(e1, n, a) {
                    var s, l = o(e1), c = r(l.length), u = i(a, c);
                    if (t && n != n) {
                        for(; c > u;)if ((s = l[u++]) != s) return !0;
                    } else for(; c > u; u++)if ((t || u in l) && l[u] === n) return t || u || 0;
                    return !t && -1;
                };
            };
        },
        function(t, e1) {
            e1.f = Object.getOwnPropertySymbols;
        },
        function(t, e1, n) {
            var o = n(37);
            t.exports = Array.isArray || function(t) {
                return "Array" == o(t);
            };
        },
        function(t, e1, n) {
            var o = n(15)("iterator"), r = !1;
            try {
                var i = [
                    7
                ][o]();
                i.return = function() {
                    r = !0;
                }, Array.from(i, function() {
                    throw 2;
                });
            } catch (t1) {}
            t.exports = function(t, e1) {
                if (!e1 && !r) return !1;
                var n = !1;
                try {
                    var i = [
                        7
                    ], a = i[o]();
                    a.next = function() {
                        return {
                            done: n = !0
                        };
                    }, i[o] = function() {
                        return a;
                    }, t(i);
                } catch (t1) {}
                return n;
            };
        },
        function(t, e1, n) {
            "use strict";
            var o = n(12);
            t.exports = function() {
                var t = o(this), e1 = "";
                return t.global && (e1 += "g"), t.ignoreCase && (e1 += "i"), t.multiline && (e1 += "m"), t.unicode && (e1 += "u"), t.sticky && (e1 += "y"), e1;
            };
        },
        function(t, e1, n) {
            "use strict";
            var o = n(65), r = RegExp.prototype.exec;
            t.exports = function(t, e1) {
                var n = t.exec;
                if ("function" == typeof n) {
                    var i = n.call(t, e1);
                    if ("object" != typeof i) throw new TypeError("RegExp exec method returned something other than an Object or null");
                    return i;
                }
                if ("RegExp" !== o(t)) throw new TypeError("RegExp#exec called on incompatible receiver");
                return r.call(t, e1);
            };
        },
        function(t, e1, n) {
            "use strict";
            n(136);
            var o = n(23), r = n(27), i = n(11), a = n(38), s = n(15), l = n(106), c = s("species"), u = !i(function() {
                var t = /./;
                return t.exec = function() {
                    var t = [];
                    return t.groups = {
                        a: "7"
                    }, t;
                }, "7" !== "".replace(t, "$<a>");
            }), f = function() {
                var t = /(?:)/, e1 = t.exec;
                t.exec = function() {
                    return e1.apply(this, arguments);
                };
                var n = "ab".split(t);
                return 2 === n.length && "a" === n[0] && "b" === n[1];
            }();
            t.exports = function(t, e1, n) {
                var d = s(t), p = !i(function() {
                    var e1 = {};
                    return e1[d] = function() {
                        return 7;
                    }, 7 != ""[t](e1);
                }), h = p ? !i(function() {
                    var e1 = !1, n = /a/;
                    return n.exec = function() {
                        return e1 = !0, null;
                    }, "split" === t && (n.constructor = {}, n.constructor[c] = function() {
                        return n;
                    }), n[d](""), !e1;
                }) : void 0;
                if (!p || !h || "replace" === t && !u || "split" === t && !f) {
                    var v = /./[d], g = n(a, d, ""[t], function(t, e1, n, o, r) {
                        return e1.exec === l ? p && !r ? {
                            done: !0,
                            value: v.call(e1, n, o)
                        } : {
                            done: !0,
                            value: t.call(n, e1, o)
                        } : {
                            done: !1
                        };
                    }), y = g[0], b = g[1];
                    o(String.prototype, t, y), r(RegExp.prototype, d, 2 == e1 ? function(t, e1) {
                        return b.call(t, this, e1);
                    } : function(t) {
                        return b.call(t, this);
                    });
                }
            };
        },
        function(t, e1, n) {
            var o = n(31), r = n(131), i = n(101), a = n(12), s = n(16), l = n(103), c = {}, u = {};
            (e1 = t.exports = function(t, e1, n, f, d) {
                var p, h, v, g, y = d ? function() {
                    return t;
                } : l(t), b = o(n, f, e1 ? 2 : 1), m = 0;
                if ("function" != typeof y) throw TypeError(t + " is not iterable!");
                if (i(y)) {
                    for(p = s(t.length); p > m; m++)if ((g = e1 ? b(a(h = t[m])[0], h[1]) : b(t[m])) === c || g === u) return g;
                } else for(v = y.call(t); !(h = v.next()).done;)if ((g = r(v, b, h.value, e1)) === c || g === u) return g;
            }).BREAK = c, e1.RETURN = u;
        },
        function(t, e1, n) {
            var o = n(10).navigator;
            t.exports = o && o.userAgent || "";
        },
        function(t, e1, n) {
            "use strict";
            var o = n(10), r = n(0), i = n(23), a = n(58), s = n(41), l = n(77), c = n(57), u = n(13), f = n(11), d = n(73), p = n(53), h = n(92);
            t.exports = function(t, e1, n, v, g, y) {
                var b = o[t], m = b, k = g ? "set" : "add", x = m && m.prototype, w = {}, S = function(t) {
                    var e1 = x[t];
                    i(x, t, "delete" == t || "has" == t ? function(t) {
                        return !(y && !u(t)) && e1.call(this, 0 === t ? 0 : t);
                    } : "get" == t ? function(t) {
                        return y && !u(t) ? void 0 : e1.call(this, 0 === t ? 0 : t);
                    } : "add" == t ? function(t) {
                        return e1.call(this, 0 === t ? 0 : t), this;
                    } : function(t, n) {
                        return e1.call(this, 0 === t ? 0 : t, n), this;
                    });
                };
                if ("function" == typeof m && (y || x.forEach && !f(function() {
                    (new m).entries().next();
                }))) {
                    var T = new m, E = T[k](y ? {} : -0, 1) != T, B = f(function() {
                        T.has(1);
                    }), C = d(function(t) {
                        new m(t);
                    }), _ = !y && f(function() {
                        for(var t = new m, e1 = 5; e1--;)t[k](e1, e1);
                        return !t.has(-0);
                    });
                    C || ((m = e1(function(e1, n) {
                        c(e1, m, t);
                        var o = h(new b, e1, m);
                        return null != n && l(n, g, o[k], o), o;
                    })).prototype = x, x.constructor = m), (B || _) && (S("delete"), S("has"), g && S("get")), (_ || E) && S(k), y && x.clear && delete x.clear;
                } else m = v.getConstructor(e1, t, g, k), a(m.prototype, n), s.NEED = !0;
                return p(m, t), w[t] = m, r(r.G + r.W + r.F * (m != b), w), y || v.setStrong(m, t, g), m;
            };
        },
        function(t, e1, n) {
            for(var o, r = n(10), i = n(27), a = n(44), s = a("typed_array"), l = a("view"), c = !(!r.ArrayBuffer || !r.DataView), u = c, f = 0, d = "Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array".split(","); f < 9;)(o = r[d[f++]]) ? (i(o.prototype, s, !0), i(o.prototype, l, !0)) : u = !1;
            t.exports = {
                ABV: c,
                CONSTR: u,
                TYPED: s,
                VIEW: l
            };
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(7)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a) {
                "use strict";
                var s = n(1);
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = s(r), i = s(i);
                var l = function() {
                    function t() {
                        (0, r.default)(this, t), this.subscribers = {};
                    }
                    return (0, i.default)(t, [
                        {
                            key: "on",
                            value: function(t, e1) {
                                t in this.subscribers || (this.subscribers[t] = []), this.subscribers[t].push(e1);
                            }
                        },
                        {
                            key: "once",
                            value: function(t, e1) {
                                var n = this;
                                t in this.subscribers || (this.subscribers[t] = []), this.subscribers[t].push(function o(r) {
                                    var i = e1(r), a = n.subscribers[t].indexOf(o);
                                    return -1 !== a && n.subscribers[t].splice(a, 1), i;
                                });
                            }
                        },
                        {
                            key: "emit",
                            value: function(t, e1) {
                                !(0, a.isEmpty)(this.subscribers) && this.subscribers[t] && this.subscribers[t].reduce(function(t, e1) {
                                    return e1(t) || t;
                                }, e1);
                            }
                        },
                        {
                            key: "off",
                            value: function(t, e1) {
                                for(var n = 0; n < this.subscribers[t].length; n++)if (this.subscribers[t][n] === e1) {
                                    delete this.subscribers[t][n];
                                    break;
                                }
                            }
                        },
                        {
                            key: "destroy",
                            value: function() {
                                this.subscribers = null;
                            }
                        }
                    ]), t;
                }();
                o.default = l, l.displayName = "EventsDispatcher", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(9)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c) {
                "use strict";
                var u = n(1);
                function f() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = u(r), i = u(i), a = u(a), s = u(s), l = u(l);
                var d = function(t) {
                    (0, a.default)(o, t);
                    var e1, n = (e1 = o, function() {
                        var t, n = (0, l.default)(e1);
                        if (f()) {
                            var o = (0, l.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, s.default)(this, t);
                    });
                    function o() {
                        return (0, r.default)(this, o), n.apply(this, arguments);
                    }
                    return (0, i.default)(o, [
                        {
                            key: "getMethodsForTool",
                            value: function(t) {
                                return Object.assign(this.methods, {
                                    i18n: this.Editor.I18nAPI.getMethodsForTool(t)
                                });
                            }
                        },
                        {
                            key: "methods",
                            get: function() {
                                return {
                                    blocks: this.Editor.BlocksAPI.methods,
                                    caret: this.Editor.CaretAPI.methods,
                                    events: this.Editor.EventsAPI.methods,
                                    listeners: this.Editor.ListenersAPI.methods,
                                    notifier: this.Editor.NotifierAPI.methods,
                                    sanitizer: this.Editor.SanitizerAPI.methods,
                                    saver: this.Editor.SaverAPI.methods,
                                    selection: this.Editor.SelectionAPI.methods,
                                    styles: this.Editor.StylesAPI.classes,
                                    toolbar: this.Editor.ToolbarAPI.methods,
                                    inlineToolbar: this.Editor.InlineToolbarAPI.methods,
                                    tooltip: this.Editor.TooltipAPI.methods,
                                    i18n: this.Editor.I18nAPI.methods,
                                    readOnly: this.Editor.ReadOnlyAPI.methods,
                                    ui: this.Editor.UiAPI.methods
                                };
                            }
                        }
                    ]), o;
                }((c = u(c)).default);
                o.default = d, d.displayName = "API", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(9),
                n(14),
                n(7),
                n(60),
                n(84),
                n(114),
                n(385)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c, u, f, d, p, h, v) {
                "use strict";
                var g = n(8), y = n(1);
                function b() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = y(r), i = y(i), a = y(a), s = y(s), l = y(l), c = y(c), u = y(u), f = g(f), d = y(d), h = y(h), v = g(v);
                var m = function(t) {
                    (0, a.default)(o, t);
                    var e1, n = (e1 = o, function() {
                        var t, n = (0, l.default)(e1);
                        if (b()) {
                            var o = (0, l.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, s.default)(this, t);
                    });
                    function o(t) {
                        var e1, i = t.config, a = t.eventsDispatcher;
                        return (0, r.default)(this, o), (e1 = n.call(this, {
                            config: i,
                            eventsDispatcher: a
                        })).tooltip = new h.default, e1;
                    }
                    return (0, i.default)(o, [
                        {
                            key: "toggleReadOnly",
                            value: function(t) {
                                t ? (this.destroy(), this.Editor.BlockSettings.destroy(), this.disableModuleBindings()) : (this.drawUI(), this.enableModuleBindings());
                            }
                        },
                        {
                            key: "moveAndOpen",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.Editor.BlockManager.currentBlock;
                                if (this.toolboxInstance.close(), this.Editor.BlockSettings.close(), t) {
                                    this.hoveredBlock = t;
                                    var e1, n = t.holder, o = this.Editor.UI.isMobile, r = t.pluginsContent, i = window.getComputedStyle(r), a = parseInt(i.paddingTop, 10), s = n.offsetHeight;
                                    e1 = o ? n.offsetTop + s : n.offsetTop + a, this.nodes.wrapper.style.top = "".concat(Math.floor(e1), "px"), 1 === this.Editor.BlockManager.blocks.length && t.isEmpty ? this.blockTunesToggler.hide() : this.blockTunesToggler.show(), this.open();
                                }
                            }
                        },
                        {
                            key: "close",
                            value: function() {
                                this.Editor.ReadOnly.isEnabled || (this.nodes.wrapper.classList.remove(this.CSS.toolbarOpened), this.blockActions.hide(), this.toolboxInstance.close(), this.Editor.BlockSettings.close());
                            }
                        },
                        {
                            key: "open",
                            value: function() {
                                var t = this, e1 = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
                                !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], f.delay(function() {
                                    t.nodes.wrapper.classList.add(t.CSS.toolbarOpened), e1 ? t.blockActions.show() : t.blockActions.hide();
                                }, 50)();
                            }
                        },
                        {
                            key: "make",
                            value: function() {
                                var t = this;
                                this.nodes.wrapper = u.default.make("div", this.CSS.toolbar), [
                                    "content",
                                    "actions"
                                ].forEach(function(e1) {
                                    t.nodes[e1] = u.default.make("div", t.CSS[e1]);
                                }), u.default.append(this.nodes.wrapper, this.nodes.content), u.default.append(this.nodes.content, this.nodes.actions), this.nodes.plusButton = u.default.make("div", this.CSS.plusButton), u.default.append(this.nodes.plusButton, u.default.svg("plus", 16, 16)), u.default.append(this.nodes.actions, this.nodes.plusButton), this.readOnlyMutableListeners.on(this.nodes.plusButton, "click", function() {
                                    t.tooltip.hide(!0), t.plusButtonClicked();
                                }, !1);
                                var e1 = u.default.make("div");
                                e1.appendChild(document.createTextNode(d.default.ui(p.I18nInternalNS.ui.toolbar.toolbox, "Add"))), e1.appendChild(u.default.make("div", this.CSS.plusButtonShortcut, {
                                    textContent: "⇥ Tab"
                                })), this.tooltip.onHover(this.nodes.plusButton, e1, {
                                    hidingDelay: 400
                                }), this.nodes.settingsToggler = u.default.make("span", this.CSS.settingsToggler);
                                var n = u.default.svg("dots", 16, 16);
                                u.default.append(this.nodes.settingsToggler, n), u.default.append(this.nodes.actions, this.nodes.settingsToggler), this.tooltip.onHover(this.nodes.settingsToggler, d.default.ui(p.I18nInternalNS.ui.blockTunes.toggler, "Click to tune"), {
                                    hidingDelay: 400
                                }), u.default.append(this.nodes.actions, this.makeToolbox()), u.default.append(this.nodes.actions, this.Editor.BlockSettings.nodes.wrapper), u.default.append(this.Editor.UI.nodes.wrapper, this.nodes.wrapper);
                            }
                        },
                        {
                            key: "makeToolbox",
                            value: function() {
                                var t = this;
                                return this.toolboxInstance = new v.default({
                                    api: this.Editor.API.methods,
                                    tools: this.Editor.Tools.blockTools,
                                    i18nLabels: {
                                        filter: d.default.ui(p.I18nInternalNS.ui.toolbar.toolbox, "Filter"),
                                        nothingFound: d.default.ui(p.I18nInternalNS.ui.toolbar.toolbox, "Nothing found")
                                    }
                                }), this.toolboxInstance.on(v.ToolboxEvent.Opened, function() {
                                    t.Editor.UI.nodes.wrapper.classList.add(t.CSS.openedToolboxHolderModifier);
                                }), this.toolboxInstance.on(v.ToolboxEvent.Closed, function() {
                                    t.Editor.UI.nodes.wrapper.classList.remove(t.CSS.openedToolboxHolderModifier);
                                }), this.toolboxInstance.on(v.ToolboxEvent.BlockAdded, function(e1) {
                                    var n = e1.block, o = t.Editor, r = o.BlockManager, i = o.Caret, a = r.getBlockById(n.id);
                                    0 === a.inputs.length && (a === r.lastBlock ? (r.insertAtEnd(), i.setToBlock(r.lastBlock)) : i.setToBlock(r.nextBlock));
                                }), this.toolboxInstance.make();
                            }
                        },
                        {
                            key: "plusButtonClicked",
                            value: function() {
                                this.Editor.BlockManager.currentBlock = this.hoveredBlock, this.toolboxInstance.toggle();
                            }
                        },
                        {
                            key: "enableModuleBindings",
                            value: function() {
                                var t = this;
                                this.readOnlyMutableListeners.on(this.nodes.settingsToggler, "mousedown", function(e1) {
                                    e1.stopPropagation(), t.settingsTogglerClicked(), t.toolboxInstance.close(), t.tooltip.hide(!0);
                                }, !0), f.isMobileScreen() || this.eventsDispatcher.on(this.Editor.UI.events.blockHovered, function(e1) {
                                    t.Editor.BlockSettings.opened || t.toolboxInstance.opened || t.moveAndOpen(e1.block);
                                });
                            }
                        },
                        {
                            key: "disableModuleBindings",
                            value: function() {
                                this.readOnlyMutableListeners.clearAll();
                            }
                        },
                        {
                            key: "settingsTogglerClicked",
                            value: function() {
                                this.Editor.BlockManager.currentBlock = this.hoveredBlock, this.Editor.BlockSettings.opened ? this.Editor.BlockSettings.close() : this.Editor.BlockSettings.open(this.hoveredBlock);
                            }
                        },
                        {
                            key: "drawUI",
                            value: function() {
                                this.Editor.BlockSettings.make(), this.make();
                            }
                        },
                        {
                            key: "destroy",
                            value: function() {
                                this.removeAllNodes(), this.toolboxInstance && this.toolboxInstance.destroy(), this.tooltip.destroy();
                            }
                        },
                        {
                            key: "CSS",
                            get: function() {
                                return {
                                    toolbar: "ce-toolbar",
                                    content: "ce-toolbar__content",
                                    actions: "ce-toolbar__actions",
                                    actionsOpened: "ce-toolbar__actions--opened",
                                    toolbarOpened: "ce-toolbar--opened",
                                    openedToolboxHolderModifier: "codex-editor--toolbox-opened",
                                    plusButton: "ce-toolbar__plus",
                                    plusButtonShortcut: "ce-toolbar__plus-shortcut",
                                    settingsToggler: "ce-toolbar__settings-btn",
                                    settingsTogglerHidden: "ce-toolbar__settings-btn--hidden"
                                };
                            }
                        },
                        {
                            key: "opened",
                            get: function() {
                                return this.nodes.wrapper.classList.contains(this.CSS.toolbarOpened);
                            }
                        },
                        {
                            key: "toolbox",
                            get: function() {
                                var t = this;
                                return {
                                    opened: this.toolboxInstance.opened,
                                    close: function() {
                                        t.toolboxInstance.close();
                                    },
                                    open: function() {
                                        t.Editor.BlockManager.currentBlock = t.hoveredBlock, t.toolboxInstance.open();
                                    },
                                    toggle: function() {
                                        return t.toolboxInstance.toggle();
                                    },
                                    hasFocus: function() {
                                        return t.toolboxInstance.hasFocus();
                                    }
                                };
                            }
                        },
                        {
                            key: "blockActions",
                            get: function() {
                                var t = this;
                                return {
                                    hide: function() {
                                        t.nodes.actions.classList.remove(t.CSS.actionsOpened);
                                    },
                                    show: function() {
                                        t.nodes.actions.classList.add(t.CSS.actionsOpened);
                                    }
                                };
                            }
                        },
                        {
                            key: "blockTunesToggler",
                            get: function() {
                                var t = this;
                                return {
                                    hide: function() {
                                        return t.nodes.settingsToggler.classList.add(t.CSS.settingsTogglerHidden);
                                    },
                                    show: function() {
                                        return t.nodes.settingsToggler.classList.remove(t.CSS.settingsTogglerHidden);
                                    }
                                };
                            }
                        }
                    ]), o;
                }(c.default);
                o.default = m, m.displayName = "Toolbar", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(30),
                n(150),
                n(7)
            ], void 0 === (i = "function" == typeof (o = function(t, e1, o, r) {
                "use strict";
                var i = n(1);
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.I18nInternalNS = void 0, e1 = i(e1);
                var a = function t(n, o) {
                    var i = {};
                    return Object.entries(n).forEach(function(n) {
                        var a = (0, e1.default)(n, 2), s = a[0], l = a[1];
                        if ((0, r.isObject)(l)) {
                            var c = o ? "".concat(o, ".").concat(s) : s, u = Object.values(l).every(function(t) {
                                return (0, r.isString)(t);
                            });
                            i[s] = u ? c : t(l, c);
                        } else i[s] = l;
                    }), i;
                }((o = i(o)).default);
                t.I18nInternalNS = a;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o = n(13), r = n(10).document, i = o(r) && o(r.createElement);
            t.exports = function(t) {
                return i ? r.createElement(t) : {};
            };
        },
        function(t, e1, n) {
            e1.f = n(15);
        },
        function(t, e1, n) {
            var o = n(69)("keys"), r = n(44);
            t.exports = function(t) {
                return o[t] || (o[t] = r(t));
            };
        },
        function(t, e1) {
            t.exports = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",");
        },
        function(t, e1, n) {
            var o = n(10).document;
            t.exports = o && o.documentElement;
        },
        function(t, e1, n) {
            var o = n(13), r = n(12), i = function(t, e1) {
                if (r(t), !o(e1) && null !== e1) throw TypeError(e1 + ": can't set as prototype!");
            };
            t.exports = {
                set: Object.setPrototypeOf || ("__proto__" in {} ? function(t, e1, o) {
                    try {
                        (o = n(31)(Function.call, n(34).f(Object.prototype, "__proto__").set, 2))(t, []), e1 = !(t instanceof Array);
                    } catch (t1) {
                        e1 = !0;
                    }
                    return function(t, n) {
                        return i(t, n), e1 ? t.__proto__ = n : o(t, n), t;
                    };
                }({}, !1) : void 0),
                check: i
            };
        },
        function(t, e1) {
            t.exports = "	\n\v\f\r \xa0 ᠎             　\u2028\u2029\uFEFF";
        },
        function(t, e1, n) {
            var o = n(13), r = n(90).set;
            t.exports = function(t, e1, n) {
                var i, a = e1.constructor;
                return a !== n && "function" == typeof a && (i = a.prototype) !== n.prototype && o(i) && r && r(t, i), t;
            };
        },
        function(t, e1, n) {
            "use strict";
            var o = n(33), r = n(38);
            t.exports = function(t) {
                var e1 = String(r(this)), n = "", i = o(t);
                if (i < 0 || i == 1 / 0) throw RangeError("Count can't be negative");
                for(; i > 0; (i >>>= 1) && (e1 += e1))1 & i && (n += e1);
                return n;
            };
        },
        function(t, e1) {
            t.exports = Math.sign || function(t) {
                return 0 == (t = +t) || t != t ? t : t < 0 ? -1 : 1;
            };
        },
        function(t, e1) {
            var n = Math.expm1;
            t.exports = !n || n(10) > 22025.465794806718 || n(10) < 22025.465794806718 || -0.00000000000000002 != n(-0.00000000000000002) ? function(t) {
                return 0 == (t = +t) ? t : t > -0.000001 && t < 1e-6 ? t + t * t / 2 : Math.exp(t) - 1;
            } : n;
        },
        function(t, e1, n) {
            var o = n(33), r = n(38);
            t.exports = function(t) {
                return function(e1, n) {
                    var i, a, s = String(r(e1)), l = o(n), c = s.length;
                    return l < 0 || l >= c ? t ? "" : void 0 : (i = s.charCodeAt(l)) < 55296 || i > 56319 || l + 1 === c || (a = s.charCodeAt(l + 1)) < 56320 || a > 57343 ? t ? s.charAt(l) : i : t ? s.slice(l, l + 2) : a - 56320 + (i - 55296 << 10) + 65536;
                };
            };
        },
        function(t, e1, n) {
            "use strict";
            var o = n(45), r = n(0), i = n(23), a = n(27), s = n(55), l = n(130), c = n(53), u = n(50), f = n(15)("iterator"), d = !([].keys && "next" in [].keys()), p = function() {
                return this;
            };
            t.exports = function(t, e1, n, h, v, g, y) {
                l(n, e1, h);
                var b, m, k, x = function(t) {
                    if (!d && t in E) return E[t];
                    switch(t){
                        case "keys":
                        case "values":
                            return function() {
                                return new n(this, t);
                            };
                    }
                    return function() {
                        return new n(this, t);
                    };
                }, w = e1 + " Iterator", S = "values" == v, T = !1, E = t.prototype, B = E[f] || E["@@iterator"] || v && E[v], C = B || x(v), _ = v ? S ? x("entries") : C : void 0, I = "Array" == e1 && E.entries || B;
                if (I && (k = u(I.call(new t))) !== Object.prototype && k.next && (c(k, w, !0), o || "function" == typeof k[f] || a(k, f, p)), S && B && "values" !== B.name && (T = !0, C = function() {
                    return B.call(this);
                }), o && !y || !d && !T && E[f] || a(E, f, C), s[e1] = C, s[w] = p, v) {
                    if (b = {
                        values: S ? C : x("values"),
                        keys: g ? C : x("keys"),
                        entries: _
                    }, y) for(m in b)m in E || i(E, m, b[m]);
                    else r(r.P + r.F * (d || T), e1, b);
                }
                return b;
            };
        },
        function(t, e1, n) {
            var o = n(99), r = n(38);
            t.exports = function(t, e1, n) {
                if (o(e1)) throw TypeError("String#" + n + " doesn't accept regex!");
                return String(r(t));
            };
        },
        function(t, e1, n) {
            var o = n(13), r = n(37), i = n(15)("match");
            t.exports = function(t) {
                var e1;
                return o(t) && (void 0 !== (e1 = t[i]) ? !!e1 : "RegExp" == r(t));
            };
        },
        function(t, e1, n) {
            var o = n(15)("match");
            t.exports = function(t) {
                var e1 = /./;
                try {
                    "/./"[t](e1);
                } catch (n) {
                    try {
                        return e1[o] = !1, !"/./"[t](e1);
                    } catch (t1) {}
                }
                return !0;
            };
        },
        function(t, e1, n) {
            var o = n(55), r = n(15)("iterator"), i = Array.prototype;
            t.exports = function(t) {
                return void 0 !== t && (o.Array === t || i[r] === t);
            };
        },
        function(t, e1, n) {
            "use strict";
            var o = n(19), r = n(43);
            t.exports = function(t, e1, n) {
                e1 in t ? o.f(t, e1, r(0, n)) : t[e1] = n;
            };
        },
        function(t, e1, n) {
            var o = n(65), r = n(15)("iterator"), i = n(55);
            t.exports = n(17).getIteratorMethod = function(t) {
                if (null != t) return t[r] || t["@@iterator"] || i[o(t)];
            };
        },
        function(t, e1, n) {
            "use strict";
            var o = n(22), r = n(47), i = n(16);
            t.exports = function(t) {
                for(var e1 = o(this), n = i(e1.length), a = arguments.length, s = r(a > 1 ? arguments[1] : void 0, n), l = a > 2 ? arguments[2] : void 0, c = void 0 === l ? n : r(l, n); c > s;)e1[s++] = t;
                return e1;
            };
        },
        function(t, e1, n) {
            "use strict";
            var o = n(51), r = n(135), i = n(55), a = n(28);
            t.exports = n(97)(Array, "Array", function(t, e1) {
                this._t = a(t), this._i = 0, this._k = e1;
            }, function() {
                var t = this._t, e1 = this._k, n = this._i++;
                return !t || n >= t.length ? (this._t = void 0, r(1)) : r(0, "keys" == e1 ? n : "values" == e1 ? t[n] : [
                    n,
                    t[n]
                ]);
            }, "values"), i.Arguments = i.Array, o("keys"), o("values"), o("entries");
        },
        function(t, e1, n) {
            "use strict";
            var o, r, i = n(74), a = RegExp.prototype.exec, s = String.prototype.replace, l = a, c = (o = /a/, r = /b*/g, a.call(o, "a"), a.call(r, "a"), 0 !== o.lastIndex || 0 !== r.lastIndex), u = void 0 !== /()??/.exec("")[1];
            (c || u) && (l = function(t) {
                var e1, n, o, r, l = this;
                return u && (n = new RegExp("^" + l.source + "$(?!\\s)", i.call(l))), c && (e1 = l.lastIndex), o = a.call(l, t), c && o && (l.lastIndex = l.global ? o.index + o[0].length : e1), u && o && o.length > 1 && s.call(o[0], n, function() {
                    for(r = 1; r < arguments.length - 2; r++)void 0 === arguments[r] && (o[r] = void 0);
                }), o;
            }), t.exports = l;
        },
        function(t, e1, n) {
            "use strict";
            var o = n(96)(!0);
            t.exports = function(t, e1, n) {
                return e1 + (n ? o(t, e1).length : 1);
            };
        },
        function(t, e1, n) {
            var o, r, i, a = n(31), s = n(124), l = n(89), c = n(85), u = n(10), f = u.process, d = u.setImmediate, p = u.clearImmediate, h = u.MessageChannel, v = u.Dispatch, g = 0, y = {}, b = function() {
                var t = +this;
                if (y.hasOwnProperty(t)) {
                    var e1 = y[t];
                    delete y[t], e1();
                }
            }, m = function(t) {
                b.call(t.data);
            };
            d && p || (d = function(t) {
                for(var e1 = [], n = 1; arguments.length > n;)e1.push(arguments[n++]);
                return y[++g] = function() {
                    s("function" == typeof t ? t : Function(t), e1);
                }, o(g), g;
            }, p = function(t) {
                delete y[t];
            }, "process" == n(37)(f) ? o = function(t) {
                f.nextTick(a(b, t, 1));
            } : v && v.now ? o = function(t) {
                v.now(a(b, t, 1));
            } : h ? (i = (r = new h).port2, r.port1.onmessage = m, o = a(i.postMessage, i, 1)) : u.addEventListener && "function" == typeof postMessage && !u.importScripts ? (o = function(t) {
                u.postMessage(t + "", "*");
            }, u.addEventListener("message", m, !1)) : o = "onreadystatechange" in c("script") ? function(t) {
                l.appendChild(c("script")).onreadystatechange = function() {
                    l.removeChild(this), b.call(t);
                };
            } : function(t) {
                setTimeout(a(b, t, 1), 0);
            }), t.exports = {
                set: d,
                clear: p
            };
        },
        function(t, e1, n) {
            "use strict";
            var o = n(10), r = n(18), i = n(45), a = n(80), s = n(27), l = n(58), c = n(11), u = n(57), f = n(33), d = n(16), p = n(143), h = n(49).f, v = n(19).f, g = n(104), y = n(53), b = o.ArrayBuffer, m = o.DataView, k = o.Math, x = o.RangeError, w = o.Infinity, S = b, T = k.abs, E = k.pow, B = k.floor, C = k.log, _ = k.LN2, I = r ? "_b" : "buffer", O = r ? "_l" : "byteLength", M = r ? "_o" : "byteOffset";
            function R(t, e1, n) {
                var o, r, i, a = new Array(n), s = 8 * n - e1 - 1, l = (1 << s) - 1, c = l >> 1, u = 23 === e1 ? E(2, -24) - E(2, -77) : 0, f = 0, d = t < 0 || 0 === t && 1 / t < 0 ? 1 : 0;
                for((t = T(t)) != t || t === w ? (r = t != t ? 1 : 0, o = l) : (o = B(C(t) / _), t * (i = E(2, -o)) < 1 && (o--, i *= 2), (t += o + c >= 1 ? u / i : u * E(2, 1 - c)) * i >= 2 && (o++, i /= 2), o + c >= l ? (r = 0, o = l) : o + c >= 1 ? (r = (t * i - 1) * E(2, e1), o += c) : (r = t * E(2, c - 1) * E(2, e1), o = 0)); e1 >= 8; a[f++] = 255 & r, r /= 256, e1 -= 8);
                for(o = o << e1 | r, s += e1; s > 0; a[f++] = 255 & o, o /= 256, s -= 8);
                return a[--f] |= 128 * d, a;
            }
            function A(t, e1, n) {
                var o, r = 8 * n - e1 - 1, i = (1 << r) - 1, a = i >> 1, s = r - 7, l = n - 1, c = t[l--], u = 127 & c;
                for(c >>= 7; s > 0; u = 256 * u + t[l], l--, s -= 8);
                for(o = u & (1 << -s) - 1, u >>= -s, s += e1; s > 0; o = 256 * o + t[l], l--, s -= 8);
                if (0 === u) u = 1 - a;
                else {
                    if (u === i) return o ? NaN : c ? -w : w;
                    o += E(2, e1), u -= a;
                }
                return (c ? -1 : 1) * o * E(2, u - e1);
            }
            function N(t) {
                return t[3] << 24 | t[2] << 16 | t[1] << 8 | t[0];
            }
            function L(t) {
                return [
                    255 & t
                ];
            }
            function P(t) {
                return [
                    255 & t,
                    t >> 8 & 255
                ];
            }
            function D(t) {
                return [
                    255 & t,
                    t >> 8 & 255,
                    t >> 16 & 255,
                    t >> 24 & 255
                ];
            }
            function j(t) {
                return R(t, 52, 8);
            }
            function F(t) {
                return R(t, 23, 4);
            }
            function H(t, e1, n) {
                v(t.prototype, e1, {
                    get: function() {
                        return this[n];
                    }
                });
            }
            function U(t, e1, n, o) {
                var r = p(+n);
                if (r + e1 > t[O]) throw x("Wrong index!");
                var i = t[I]._b, a = r + t[M], s = i.slice(a, a + e1);
                return o ? s : s.reverse();
            }
            function z(t, e1, n, o, r, i) {
                var a = p(+n);
                if (a + e1 > t[O]) throw x("Wrong index!");
                for(var s = t[I]._b, l = a + t[M], c = o(+r), u = 0; u < e1; u++)s[l + u] = c[i ? u : e1 - u - 1];
            }
            if (a.ABV) {
                if (!c(function() {
                    b(1);
                }) || !c(function() {
                    new b(-1);
                }) || c(function() {
                    return new b, new b(1.5), new b(NaN), "ArrayBuffer" != b.name;
                })) {
                    for(var W, Y = (b = function(t) {
                        return u(this, b), new S(p(t));
                    }).prototype = S.prototype, V = h(S), X = 0; V.length > X;)(W = V[X++]) in b || s(b, W, S[W]);
                    i || (Y.constructor = b);
                }
                var K = new m(new b(2)), G = m.prototype.setInt8;
                K.setInt8(0, 2147483648), K.setInt8(1, 2147483649), !K.getInt8(0) && K.getInt8(1) || l(m.prototype, {
                    setInt8: function(t, e1) {
                        G.call(this, t, e1 << 24 >> 24);
                    },
                    setUint8: function(t, e1) {
                        G.call(this, t, e1 << 24 >> 24);
                    }
                }, !0);
            } else b = function(t) {
                u(this, b, "ArrayBuffer");
                var e1 = p(t);
                this._b = g.call(new Array(e1), 0), this[O] = e1;
            }, m = function(t, e1, n) {
                u(this, m, "DataView"), u(t, b, "DataView");
                var o = t[O], r = f(e1);
                if (r < 0 || r > o) throw x("Wrong offset!");
                if (r + (n = void 0 === n ? o - r : d(n)) > o) throw x("Wrong length!");
                this[I] = t, this[M] = r, this[O] = n;
            }, r && (H(b, "byteLength", "_l"), H(m, "buffer", "_b"), H(m, "byteLength", "_l"), H(m, "byteOffset", "_o")), l(m.prototype, {
                getInt8: function(t) {
                    return U(this, 1, t)[0] << 24 >> 24;
                },
                getUint8: function(t) {
                    return U(this, 1, t)[0];
                },
                getInt16: function(t) {
                    var e1 = U(this, 2, t, arguments[1]);
                    return (e1[1] << 8 | e1[0]) << 16 >> 16;
                },
                getUint16: function(t) {
                    var e1 = U(this, 2, t, arguments[1]);
                    return e1[1] << 8 | e1[0];
                },
                getInt32: function(t) {
                    return N(U(this, 4, t, arguments[1]));
                },
                getUint32: function(t) {
                    return N(U(this, 4, t, arguments[1])) >>> 0;
                },
                getFloat32: function(t) {
                    return A(U(this, 4, t, arguments[1]), 23, 4);
                },
                getFloat64: function(t) {
                    return A(U(this, 8, t, arguments[1]), 52, 8);
                },
                setInt8: function(t, e1) {
                    z(this, 1, t, L, e1);
                },
                setUint8: function(t, e1) {
                    z(this, 1, t, L, e1);
                },
                setInt16: function(t, e1) {
                    z(this, 2, t, P, e1, arguments[2]);
                },
                setUint16: function(t, e1) {
                    z(this, 2, t, P, e1, arguments[2]);
                },
                setInt32: function(t, e1) {
                    z(this, 4, t, D, e1, arguments[2]);
                },
                setUint32: function(t, e1) {
                    z(this, 4, t, D, e1, arguments[2]);
                },
                setFloat32: function(t, e1) {
                    z(this, 4, t, F, e1, arguments[2]);
                },
                setFloat64: function(t, e1) {
                    z(this, 8, t, j, e1, arguments[2]);
                }
            });
            y(b, "ArrayBuffer"), y(m, "DataView"), s(m.prototype, a.VIEW, !0), e1.ArrayBuffer = b, e1.DataView = m;
        },
        function(t, e1) {
            function n(e1, o) {
                return t.exports = n = Object.setPrototypeOf || function(t, e1) {
                    return t.__proto__ = e1, t;
                }, n(e1, o);
            }
            t.exports = n;
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(7)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a) {
                "use strict";
                var s = n(8), l = n(1);
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = l(r), i = l(i), a = s(a);
                var c = function() {
                    function t() {
                        (0, r.default)(this, t), this.allListeners = [];
                    }
                    return (0, i.default)(t, [
                        {
                            key: "on",
                            value: function(t, e1, n) {
                                var o = arguments.length > 3 && void 0 !== arguments[3] && arguments[3], r = a.generateId("l"), i = {
                                    id: r,
                                    element: t,
                                    eventType: e1,
                                    handler: n,
                                    options: o
                                }, s = this.findOne(t, e1, n);
                                if (!s) return this.allListeners.push(i), t.addEventListener(e1, n, o), r;
                            }
                        },
                        {
                            key: "off",
                            value: function(t, e1, n, o) {
                                var r = this, i = this.findAll(t, e1, n);
                                i.forEach(function(t, e1) {
                                    var n = r.allListeners.indexOf(i[e1]);
                                    n > -1 && (r.allListeners.splice(n, 1), t.element.removeEventListener(t.eventType, t.handler, t.options));
                                });
                            }
                        },
                        {
                            key: "offById",
                            value: function(t) {
                                var e1 = this.findById(t);
                                e1 && e1.element.removeEventListener(e1.eventType, e1.handler, e1.options);
                            }
                        },
                        {
                            key: "findOne",
                            value: function(t, e1, n) {
                                var o = this.findAll(t, e1, n);
                                return o.length > 0 ? o[0] : null;
                            }
                        },
                        {
                            key: "findAll",
                            value: function(t, e1, n) {
                                var o = t ? this.findByEventTarget(t) : [];
                                return t && e1 && n ? o.filter(function(t) {
                                    return t.eventType === e1 && t.handler === n;
                                }) : t && e1 ? o.filter(function(t) {
                                    return t.eventType === e1;
                                }) : o;
                            }
                        },
                        {
                            key: "removeAll",
                            value: function() {
                                this.allListeners.map(function(t) {
                                    t.element.removeEventListener(t.eventType, t.handler, t.options);
                                }), this.allListeners = [];
                            }
                        },
                        {
                            key: "destroy",
                            value: function() {
                                this.removeAll();
                            }
                        },
                        {
                            key: "findByEventTarget",
                            value: function(t) {
                                return this.allListeners.filter(function(e1) {
                                    if (e1.element === t) return e1;
                                });
                            }
                        },
                        {
                            key: "findByType",
                            value: function(t) {
                                return this.allListeners.filter(function(e1) {
                                    if (e1.eventType === t) return e1;
                                });
                            }
                        },
                        {
                            key: "findByHandler",
                            value: function(t) {
                                return this.allListeners.filter(function(e1) {
                                    if (e1.handler === t) return e1;
                                });
                            }
                        },
                        {
                            key: "findById",
                            value: function(t) {
                                return this.allListeners.find(function(e1) {
                                    return e1.id === t;
                                });
                            }
                        }
                    ]), t;
                }();
                o.default = c, c.displayName = "Listeners", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1
            ], void 0 === (i = "function" == typeof (o = function(n) {
                "use strict";
                Object.defineProperty(n, "__esModule", {
                    value: !0
                }), n.default = void 0;
                var o = function(t) {
                    var e1 = {
                        get id () {
                            return t.id;
                        },
                        get name () {
                            return t.name;
                        },
                        get config () {
                            return t.config;
                        },
                        get holder () {
                            return t.holder;
                        },
                        get isEmpty () {
                            return t.isEmpty;
                        },
                        get selected () {
                            return t.selected;
                        },
                        set stretched (e){
                            t.stretched = e;
                        },
                        get stretched () {
                            return t.stretched;
                        },
                        call: function(e1, n) {
                            return t.call(e1, n);
                        },
                        save: function() {
                            return t.save();
                        },
                        validate: function(e1) {
                            return t.validate(e1);
                        },
                        dispatchChange: function() {
                            t.dispatchChange();
                        }
                    };
                    Object.setPrototypeOf(this, e1);
                };
                n.default = o, t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o = n(376);
            function r(e1, n, i) {
                return "undefined" != typeof Reflect && Reflect.get ? t.exports = r = Reflect.get : t.exports = r = function(t, e1, n) {
                    var r = o(t, e1);
                    if (r) {
                        var i = Object.getOwnPropertyDescriptor(r, e1);
                        return i.get ? i.get.call(n) : i.value;
                    }
                }, r(e1, n, i || e1);
            }
            t.exports = r;
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(380)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a) {
                "use strict";
                var s = n(1);
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = s(r), i = s(i), a = s(a);
                var l = function() {
                    function t() {
                        (0, r.default)(this, t), this.lib = new a.default;
                    }
                    return (0, i.default)(t, [
                        {
                            key: "destroy",
                            value: function() {
                                this.lib.destroy();
                            }
                        },
                        {
                            key: "show",
                            value: function(t, e1, n) {
                                this.lib.show(t, e1, n);
                            }
                        },
                        {
                            key: "hide",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                                this.lib.hide(t);
                            }
                        },
                        {
                            key: "onHover",
                            value: function(t, e1, n) {
                                this.lib.onHover(t, e1, n);
                            }
                        }
                    ]), t;
                }();
                o.default = l, l.displayName = "Tooltip", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(42),
                n(2),
                n(3),
                n(384)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s) {
                "use strict";
                var l = n(1);
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = l(r), i = l(i), a = l(a), s = l(s);
                var c = function() {
                    function t() {
                        (0, i.default)(this, t), this.registeredShortcuts = new Map;
                    }
                    return (0, a.default)(t, [
                        {
                            key: "add",
                            value: function(t) {
                                if (this.findShortcut(t.on, t.name)) throw Error("Shortcut ".concat(t.name, " is already registered for ").concat(t.on, ". Please remove it before add a new handler."));
                                var e1 = new s.default({
                                    name: t.name,
                                    on: t.on,
                                    callback: t.handler
                                }), n = this.registeredShortcuts.get(t.on) || [];
                                this.registeredShortcuts.set(t.on, [].concat((0, r.default)(n), [
                                    e1
                                ]));
                            }
                        },
                        {
                            key: "remove",
                            value: function(t, e1) {
                                var n = this.findShortcut(t, e1);
                                if (n) {
                                    n.remove();
                                    var o = this.registeredShortcuts.get(t);
                                    this.registeredShortcuts.set(t, o.filter(function(t) {
                                        return t !== n;
                                    }));
                                }
                            }
                        },
                        {
                            key: "findShortcut",
                            value: function(t, e1) {
                                return (this.registeredShortcuts.get(t) || []).find(function(t) {
                                    return t.name === e1;
                                });
                            }
                        }
                    ]), t;
                }();
                c.displayName = "Shortcuts";
                var u = new c;
                o.default = u, t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            t.exports = !n(18) && !n(11)(function() {
                return 7 != Object.defineProperty(n(85)("div"), "a", {
                    get: function() {
                        return 7;
                    }
                }).a;
            });
        },
        function(t, e1, n) {
            var o = n(10), r = n(17), i = n(45), a = n(86), s = n(19).f;
            t.exports = function(t) {
                var e1 = r.Symbol || (r.Symbol = i ? {} : o.Symbol || {});
                "_" == t.charAt(0) || t in e1 || s(e1, t, {
                    value: a.f(t)
                });
            };
        },
        function(t, e1, n) {
            var o = n(26), r = n(28), i = n(70)(!1), a = n(87)("IE_PROTO");
            t.exports = function(t, e1) {
                var n, s = r(t), l = 0, c = [];
                for(n in s)n != a && o(s, n) && c.push(n);
                for(; e1.length > l;)o(s, n = e1[l++]) && (~i(c, n) || c.push(n));
                return c;
            };
        },
        function(t, e1, n) {
            var o = n(19), r = n(12), i = n(46);
            t.exports = n(18) ? Object.defineProperties : function(t, e1) {
                r(t);
                for(var n, a = i(e1), s = a.length, l = 0; s > l;)o.f(t, n = a[l++], e1[n]);
                return t;
            };
        },
        function(t, e1, n) {
            var o = n(28), r = n(49).f, i = {}.toString, a = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
            t.exports.f = function(t) {
                return a && "[object Window]" == i.call(t) ? function(t) {
                    try {
                        return r(t);
                    } catch (t1) {
                        return a.slice();
                    }
                }(t) : r(o(t));
            };
        },
        function(t, e1, n) {
            "use strict";
            var o = n(18), r = n(46), i = n(71), a = n(64), s = n(22), l = n(63), c = Object.assign;
            t.exports = !c || n(11)(function() {
                var t = {}, e1 = {}, n = Symbol(), o = "abcdefghijklmnopqrst";
                return t[n] = 7, o.split("").forEach(function(t) {
                    e1[t] = t;
                }), 7 != c({}, t)[n] || Object.keys(c({}, e1)).join("") != o;
            }) ? function(t, e1) {
                for(var n = s(t), c = arguments.length, u = 1, f = i.f, d = a.f; c > u;)for(var p, h = l(arguments[u++]), v = f ? r(h).concat(f(h)) : r(h), g = v.length, y = 0; g > y;)p = v[y++], o && !d.call(h, p) || (n[p] = h[p]);
                return n;
            } : c;
        },
        function(t, e1) {
            t.exports = Object.is || function(t, e1) {
                return t === e1 ? 0 !== t || 1 / t == 1 / e1 : t != t && e1 != e1;
            };
        },
        function(t, e1, n) {
            "use strict";
            var o = n(32), r = n(13), i = n(124), a = [].slice, s = {}, l = function(t, e1, n) {
                if (!(e1 in s)) {
                    for(var o = [], r = 0; r < e1; r++)o[r] = "a[" + r + "]";
                    s[e1] = Function("F,a", "return new F(" + o.join(",") + ")");
                }
                return s[e1](t, n);
            };
            t.exports = Function.bind || function(t) {
                var e1 = o(this), n = a.call(arguments, 1), s = function() {
                    var o = n.concat(a.call(arguments));
                    return this instanceof s ? l(e1, o.length, o) : i(e1, o, t);
                };
                return r(e1.prototype) && (s.prototype = e1.prototype), s;
            };
        },
        function(t, e1) {
            t.exports = function(t, e1, n) {
                var o = void 0 === n;
                switch(e1.length){
                    case 0:
                        return o ? t() : t.call(n);
                    case 1:
                        return o ? t(e1[0]) : t.call(n, e1[0]);
                    case 2:
                        return o ? t(e1[0], e1[1]) : t.call(n, e1[0], e1[1]);
                    case 3:
                        return o ? t(e1[0], e1[1], e1[2]) : t.call(n, e1[0], e1[1], e1[2]);
                    case 4:
                        return o ? t(e1[0], e1[1], e1[2], e1[3]) : t.call(n, e1[0], e1[1], e1[2], e1[3]);
                }
                return t.apply(n, e1);
            };
        },
        function(t, e1, n) {
            var o = n(10).parseInt, r = n(54).trim, i = n(91), a = /^[-+]?0[xX]/;
            t.exports = 8 !== o(i + "08") || 22 !== o(i + "0x16") ? function(t, e1) {
                var n = r(String(t), 3);
                return o(n, e1 >>> 0 || (a.test(n) ? 16 : 10));
            } : o;
        },
        function(t, e1, n) {
            var o = n(10).parseFloat, r = n(54).trim;
            t.exports = 1 / o(n(91) + "-0") != -1 / 0 ? function(t) {
                var e1 = r(String(t), 3), n = o(e1);
                return 0 === n && "-" == e1.charAt(0) ? -0 : n;
            } : o;
        },
        function(t, e1, n) {
            var o = n(37);
            t.exports = function(t, e1) {
                if ("number" != typeof t && "Number" != o(t)) throw TypeError(e1);
                return +t;
            };
        },
        function(t, e1, n) {
            var o = n(13), r = Math.floor;
            t.exports = function(t) {
                return !o(t) && isFinite(t) && r(t) === t;
            };
        },
        function(t, e1) {
            t.exports = Math.log1p || function(t) {
                return (t = +t) > -0.00000001 && t < 1e-8 ? t - t * t / 2 : Math.log(1 + t);
            };
        },
        function(t, e1, n) {
            "use strict";
            var o = n(48), r = n(43), i = n(53), a = {};
            n(27)(a, n(15)("iterator"), function() {
                return this;
            }), t.exports = function(t, e1, n) {
                t.prototype = o(a, {
                    next: r(1, n)
                }), i(t, e1 + " Iterator");
            };
        },
        function(t, e1, n) {
            var o = n(12);
            t.exports = function(t, e1, n, r) {
                try {
                    return r ? e1(o(n)[0], n[1]) : e1(n);
                } catch (e2) {
                    var i = t.return;
                    throw void 0 !== i && o(i.call(t)), e2;
                }
            };
        },
        function(t, e1, n) {
            var o = n(282);
            t.exports = function(t, e1) {
                return new (o(t))(e1);
            };
        },
        function(t, e1, n) {
            var o = n(32), r = n(22), i = n(63), a = n(16);
            t.exports = function(t, e1, n, s, l) {
                o(e1);
                var c = r(t), u = i(c), f = a(c.length), d = l ? f - 1 : 0, p = l ? -1 : 1;
                if (n < 2) for(;;){
                    if (d in u) {
                        s = u[d], d += p;
                        break;
                    }
                    if (d += p, l ? d < 0 : f <= d) throw TypeError("Reduce of empty array with no initial value");
                }
                for(; l ? d >= 0 : f > d; d += p)d in u && (s = e1(s, u[d], d, c));
                return s;
            };
        },
        function(t, e1, n) {
            "use strict";
            var o = n(22), r = n(47), i = n(16);
            t.exports = [].copyWithin || function(t, e1) {
                var n = o(this), a = i(n.length), s = r(t, a), l = r(e1, a), c = arguments.length > 2 ? arguments[2] : void 0, u = Math.min((void 0 === c ? a : r(c, a)) - l, a - s), f = 1;
                for(l < s && s < l + u && (f = -1, l += u - 1, s += u - 1); u-- > 0;)l in n ? n[s] = n[l] : delete n[s], s += f, l += f;
                return n;
            };
        },
        function(t, e1) {
            t.exports = function(t, e1) {
                return {
                    value: e1,
                    done: !!t
                };
            };
        },
        function(t, e1, n) {
            "use strict";
            var o = n(106);
            n(0)({
                target: "RegExp",
                proto: !0,
                forced: o !== /./.exec
            }, {
                exec: o
            });
        },
        function(t, e1, n) {
            n(18) && "g" != /./g.flags && n(19).f(RegExp.prototype, "flags", {
                configurable: !0,
                get: n(74)
            });
        },
        function(t, e1, n) {
            "use strict";
            var o, r, i, a, s = n(45), l = n(10), c = n(31), u = n(65), f = n(0), d = n(13), p = n(32), h = n(57), v = n(77), g = n(66), y = n(108).set, b = n(302)(), m = n(139), k = n(303), x = n(78), w = n(140), S = l.TypeError, T = l.process, E = T && T.versions, B = E && E.v8 || "", C = l.Promise, _ = "process" == u(T), I = function() {}, O = r = m.f, M = !!function() {
                try {
                    var t = C.resolve(1), e1 = (t.constructor = {})[n(15)("species")] = function(t) {
                        t(I, I);
                    };
                    return (_ || "function" == typeof PromiseRejectionEvent) && t.then(I) instanceof e1 && 0 !== B.indexOf("6.6") && -1 === x.indexOf("Chrome/66");
                } catch (t1) {}
            }(), R = function(t) {
                var e1;
                return !(!d(t) || "function" != typeof (e1 = t.then)) && e1;
            }, A = function(t, e1) {
                if (!t._n) {
                    t._n = !0;
                    var n = t._c;
                    b(function() {
                        for(var o = t._v, r = 1 == t._s, i = 0, a = function(e1) {
                            var n, i, a, s = r ? e1.ok : e1.fail, l = e1.resolve, c = e1.reject, u = e1.domain;
                            try {
                                s ? (r || (2 == t._h && P(t), t._h = 1), !0 === s ? n = o : (u && u.enter(), n = s(o), u && (u.exit(), a = !0)), n === e1.promise ? c(S("Promise-chain cycle")) : (i = R(n)) ? i.call(n, l, c) : l(n)) : c(o);
                            } catch (t1) {
                                u && !a && u.exit(), c(t1);
                            }
                        }; n.length > i;)a(n[i++]);
                        t._c = [], t._n = !1, e1 && !t._h && N(t);
                    });
                }
            }, N = function(t) {
                y.call(l, function() {
                    var e1, n, o, r = t._v, i = L(t);
                    if (i && (e1 = k(function() {
                        _ ? T.emit("unhandledRejection", r, t) : (n = l.onunhandledrejection) ? n({
                            promise: t,
                            reason: r
                        }) : (o = l.console) && o.error && o.error("Unhandled promise rejection", r);
                    }), t._h = _ || L(t) ? 2 : 1), t._a = void 0, i && e1.e) throw e1.v;
                });
            }, L = function(t) {
                return 1 !== t._h && 0 === (t._a || t._c).length;
            }, P = function(t) {
                y.call(l, function() {
                    var e1;
                    _ ? T.emit("rejectionHandled", t) : (e1 = l.onrejectionhandled) && e1({
                        promise: t,
                        reason: t._v
                    });
                });
            }, D = function(t) {
                var e1 = this;
                e1._d || (e1._d = !0, (e1 = e1._w || e1)._v = t, e1._s = 2, e1._a || (e1._a = e1._c.slice()), A(e1, !0));
            }, j = function(t) {
                var e1, n = this;
                if (!n._d) {
                    n._d = !0, n = n._w || n;
                    try {
                        if (n === t) throw S("Promise can't be resolved itself");
                        (e1 = R(t)) ? b(function() {
                            var o = {
                                _w: n,
                                _d: !1
                            };
                            try {
                                e1.call(t, c(j, o, 1), c(D, o, 1));
                            } catch (t1) {
                                D.call(o, t1);
                            }
                        }) : (n._v = t, n._s = 1, A(n, !1));
                    } catch (t1) {
                        D.call({
                            _w: n,
                            _d: !1
                        }, t1);
                    }
                }
            };
            M || (C = function(t) {
                h(this, C, "Promise", "_h"), p(t), o.call(this);
                try {
                    t(c(j, this, 1), c(D, this, 1));
                } catch (t1) {
                    D.call(this, t1);
                }
            }, (o = function(t) {
                this._c = [], this._a = void 0, this._s = 0, this._d = !1, this._v = void 0, this._h = 0, this._n = !1;
            }).prototype = n(58)(C.prototype, {
                then: function(t, e1) {
                    var n = O(g(this, C));
                    return n.ok = "function" != typeof t || t, n.fail = "function" == typeof e1 && e1, n.domain = _ ? T.domain : void 0, this._c.push(n), this._a && this._a.push(n), this._s && A(this, !1), n.promise;
                },
                catch: function(t) {
                    return this.then(void 0, t);
                }
            }), i = function() {
                var t = new o;
                this.promise = t, this.resolve = c(j, t, 1), this.reject = c(D, t, 1);
            }, m.f = O = function(t) {
                return t === C || t === a ? new i(t) : r(t);
            }), f(f.G + f.W + f.F * !M, {
                Promise: C
            }), n(53)(C, "Promise"), n(56)("Promise"), a = n(17).Promise, f(f.S + f.F * !M, "Promise", {
                reject: function(t) {
                    var e1 = O(this);
                    return (0, e1.reject)(t), e1.promise;
                }
            }), f(f.S + f.F * (s || !M), "Promise", {
                resolve: function(t) {
                    return w(s && this === a ? C : this, t);
                }
            }), f(f.S + f.F * !(M && n(73)(function(t) {
                C.all(t).catch(I);
            })), "Promise", {
                all: function(t) {
                    var e1 = this, n = O(e1), o = n.resolve, r = n.reject, i = k(function() {
                        var n = [], i = 0, a = 1;
                        v(t, !1, function(t) {
                            var s = i++, l = !1;
                            n.push(void 0), a++, e1.resolve(t).then(function(t) {
                                l || (l = !0, n[s] = t, --a || o(n));
                            }, r);
                        }), --a || o(n);
                    });
                    return i.e && r(i.v), n.promise;
                },
                race: function(t) {
                    var e1 = this, n = O(e1), o = n.reject, r = k(function() {
                        v(t, !1, function(t) {
                            e1.resolve(t).then(n.resolve, o);
                        });
                    });
                    return r.e && o(r.v), n.promise;
                }
            });
        },
        function(t, e1, n) {
            "use strict";
            var o = n(32);
            function r(t) {
                var e1, n;
                this.promise = new t(function(t, o) {
                    if (void 0 !== e1 || void 0 !== n) throw TypeError("Bad Promise constructor");
                    e1 = t, n = o;
                }), this.resolve = o(e1), this.reject = o(n);
            }
            t.exports.f = function(t) {
                return new r(t);
            };
        },
        function(t, e1, n) {
            var o = n(12), r = n(13), i = n(139);
            t.exports = function(t, e1) {
                if (o(t), r(e1) && e1.constructor === t) return e1;
                var n = i.f(t);
                return (0, n.resolve)(e1), n.promise;
            };
        },
        function(t, e1, n) {
            "use strict";
            var o = n(19).f, r = n(48), i = n(58), a = n(31), s = n(57), l = n(77), c = n(97), u = n(135), f = n(56), d = n(18), p = n(41).fastKey, h = n(52), v = d ? "_s" : "size", g = function(t, e1) {
                var n, o = p(e1);
                if ("F" !== o) return t._i[o];
                for(n = t._f; n; n = n.n)if (n.k == e1) return n;
            };
            t.exports = {
                getConstructor: function(t, e1, n, c) {
                    var u = t(function(t, o) {
                        s(t, u, e1, "_i"), t._t = e1, t._i = r(null), t._f = void 0, t._l = void 0, t[v] = 0, null != o && l(o, n, t[c], t);
                    });
                    return i(u.prototype, {
                        clear: function() {
                            for(var t = h(this, e1), n = t._i, o = t._f; o; o = o.n)o.r = !0, o.p && (o.p = o.p.n = void 0), delete n[o.i];
                            t._f = t._l = void 0, t[v] = 0;
                        },
                        delete: function(t) {
                            var n = h(this, e1), o = g(n, t);
                            if (o) {
                                var r = o.n, i = o.p;
                                delete n._i[o.i], o.r = !0, i && (i.n = r), r && (r.p = i), n._f == o && (n._f = r), n._l == o && (n._l = i), n[v]--;
                            }
                            return !!o;
                        },
                        forEach: function(t) {
                            h(this, e1);
                            for(var n, o = a(t, arguments.length > 1 ? arguments[1] : void 0, 3); n = n ? n.n : this._f;)for(o(n.v, n.k, this); n && n.r;)n = n.p;
                        },
                        has: function(t) {
                            return !!g(h(this, e1), t);
                        }
                    }), d && o(u.prototype, "size", {
                        get: function() {
                            return h(this, e1)[v];
                        }
                    }), u;
                },
                def: function(t, e1, n) {
                    var o, r, i = g(t, e1);
                    return i ? i.v = n : (t._l = i = {
                        i: r = p(e1, !0),
                        k: e1,
                        v: n,
                        p: o = t._l,
                        n: void 0,
                        r: !1
                    }, t._f || (t._f = i), o && (o.n = i), t[v]++, "F" !== r && (t._i[r] = i)), t;
                },
                getEntry: g,
                setStrong: function(t, e1, n) {
                    c(t, e1, function(t, n) {
                        this._t = h(t, e1), this._k = n, this._l = void 0;
                    }, function() {
                        for(var t = this._k, e1 = this._l; e1 && e1.r;)e1 = e1.p;
                        return this._t && (this._l = e1 = e1 ? e1.n : this._t._f) ? u(0, "keys" == t ? e1.k : "values" == t ? e1.v : [
                            e1.k,
                            e1.v
                        ]) : (this._t = void 0, u(1));
                    }, n ? "entries" : "values", !n, !0), f(e1);
                }
            };
        },
        function(t, e1, n) {
            "use strict";
            var o = n(58), r = n(41).getWeak, i = n(12), a = n(13), s = n(57), l = n(77), c = n(36), u = n(26), f = n(52), d = c(5), p = c(6), h = 0, v = function(t) {
                return t._l || (t._l = new g);
            }, g = function() {
                this.a = [];
            }, y = function(t, e1) {
                return d(t.a, function(t) {
                    return t[0] === e1;
                });
            };
            g.prototype = {
                get: function(t) {
                    var e1 = y(this, t);
                    if (e1) return e1[1];
                },
                has: function(t) {
                    return !!y(this, t);
                },
                set: function(t, e1) {
                    var n = y(this, t);
                    n ? n[1] = e1 : this.a.push([
                        t,
                        e1
                    ]);
                },
                delete: function(t) {
                    var e1 = p(this.a, function(e1) {
                        return e1[0] === t;
                    });
                    return ~e1 && this.a.splice(e1, 1), !!~e1;
                }
            }, t.exports = {
                getConstructor: function(t, e1, n, i) {
                    var c = t(function(t, o) {
                        s(t, c, e1, "_i"), t._t = e1, t._i = h++, t._l = void 0, null != o && l(o, n, t[i], t);
                    });
                    return o(c.prototype, {
                        delete: function(t) {
                            if (!a(t)) return !1;
                            var n = r(t);
                            return !0 === n ? v(f(this, e1)).delete(t) : n && u(n, this._i) && delete n[this._i];
                        },
                        has: function(t) {
                            if (!a(t)) return !1;
                            var n = r(t);
                            return !0 === n ? v(f(this, e1)).has(t) : n && u(n, this._i);
                        }
                    }), c;
                },
                def: function(t, e1, n) {
                    var o = r(i(e1), !0);
                    return !0 === o ? v(t).set(e1, n) : o[t._i] = n, t;
                },
                ufstore: v
            };
        },
        function(t, e1, n) {
            var o = n(33), r = n(16);
            t.exports = function(t) {
                if (void 0 === t) return 0;
                var e1 = o(t), n = r(e1);
                if (e1 !== n) throw RangeError("Wrong length!");
                return n;
            };
        },
        function(t, e1, n) {
            var o = n(49), r = n(71), i = n(12), a = n(10).Reflect;
            t.exports = a && a.ownKeys || function(t) {
                var e1 = o.f(i(t)), n = r.f;
                return n ? e1.concat(n(t)) : e1;
            };
        },
        function(t, e1, n) {
            var o = n(16), r = n(93), i = n(38);
            t.exports = function(t, e1, n, a) {
                var s = String(i(t)), l = s.length, c = void 0 === n ? " " : String(n), u = o(e1);
                if (u <= l || "" == c) return s;
                var f = u - l, d = r.call(c, Math.ceil(f / c.length));
                return d.length > f && (d = d.slice(0, f)), a ? d + s : s + d;
            };
        },
        function(t, e1, n) {
            var o = n(18), r = n(46), i = n(28), a = n(64).f;
            t.exports = function(t) {
                return function(e1) {
                    for(var n, s = i(e1), l = r(s), c = l.length, u = 0, f = []; c > u;)n = l[u++], o && !a.call(s, n) || f.push(t ? [
                        n,
                        s[n]
                    ] : s[n]);
                    return f;
                };
            };
        },
        function(t, e1, n) {
            var o = function(t) {
                "use strict";
                var e1 = Object.prototype, n = e1.hasOwnProperty, o = "function" == typeof Symbol ? Symbol : {}, r = o.iterator || "@@iterator", i = o.asyncIterator || "@@asyncIterator", a = o.toStringTag || "@@toStringTag";
                function s(t, e1, n, o) {
                    var r = e1 && e1.prototype instanceof u ? e1 : u, i = Object.create(r.prototype), a = new w(o || []);
                    return i._invoke = function(t, e1, n) {
                        var o = "suspendedStart";
                        return function(r, i) {
                            if ("executing" === o) throw new Error("Generator is already running");
                            if ("completed" === o) {
                                if ("throw" === r) throw i;
                                return T();
                            }
                            for(n.method = r, n.arg = i;;){
                                var a = n.delegate;
                                if (a) {
                                    var s = m(a, n);
                                    if (s) {
                                        if (s === c) continue;
                                        return s;
                                    }
                                }
                                if ("next" === n.method) n.sent = n._sent = n.arg;
                                else if ("throw" === n.method) {
                                    if ("suspendedStart" === o) throw o = "completed", n.arg;
                                    n.dispatchException(n.arg);
                                } else "return" === n.method && n.abrupt("return", n.arg);
                                o = "executing";
                                var u = l(t, e1, n);
                                if ("normal" === u.type) {
                                    if (o = n.done ? "completed" : "suspendedYield", u.arg === c) continue;
                                    return {
                                        value: u.arg,
                                        done: n.done
                                    };
                                }
                                "throw" === u.type && (o = "completed", n.method = "throw", n.arg = u.arg);
                            }
                        };
                    }(t, n, a), i;
                }
                function l(t, e1, n) {
                    try {
                        return {
                            type: "normal",
                            arg: t.call(e1, n)
                        };
                    } catch (t1) {
                        return {
                            type: "throw",
                            arg: t1
                        };
                    }
                }
                t.wrap = s;
                var c = {};
                function u() {}
                function f() {}
                function d() {}
                var p = {};
                p[r] = function() {
                    return this;
                };
                var h = Object.getPrototypeOf, v = h && h(h(S([])));
                v && v !== e1 && n.call(v, r) && (p = v);
                var g = d.prototype = u.prototype = Object.create(p);
                function y(t) {
                    [
                        "next",
                        "throw",
                        "return"
                    ].forEach(function(e1) {
                        t[e1] = function(t) {
                            return this._invoke(e1, t);
                        };
                    });
                }
                function b(t, e1) {
                    var o;
                    this._invoke = function(r, i) {
                        function a() {
                            return new e1(function(o, a) {
                                !function o(r, i, a, s) {
                                    var c = l(t[r], t, i);
                                    if ("throw" !== c.type) {
                                        var u = c.arg, f = u.value;
                                        return f && "object" == typeof f && n.call(f, "__await") ? e1.resolve(f.__await).then(function(t) {
                                            o("next", t, a, s);
                                        }, function(t) {
                                            o("throw", t, a, s);
                                        }) : e1.resolve(f).then(function(t) {
                                            u.value = t, a(u);
                                        }, function(t) {
                                            return o("throw", t, a, s);
                                        });
                                    }
                                    s(c.arg);
                                }(r, i, o, a);
                            });
                        }
                        return o = o ? o.then(a, a) : a();
                    };
                }
                function m(t, e1) {
                    var n = t.iterator[e1.method];
                    if (void 0 === n) {
                        if (e1.delegate = null, "throw" === e1.method) {
                            if (t.iterator.return && (e1.method = "return", e1.arg = void 0, m(t, e1), "throw" === e1.method)) return c;
                            e1.method = "throw", e1.arg = new TypeError("The iterator does not provide a 'throw' method");
                        }
                        return c;
                    }
                    var o = l(n, t.iterator, e1.arg);
                    if ("throw" === o.type) return e1.method = "throw", e1.arg = o.arg, e1.delegate = null, c;
                    var r = o.arg;
                    return r ? r.done ? (e1[t.resultName] = r.value, e1.next = t.nextLoc, "return" !== e1.method && (e1.method = "next", e1.arg = void 0), e1.delegate = null, c) : r : (e1.method = "throw", e1.arg = new TypeError("iterator result is not an object"), e1.delegate = null, c);
                }
                function k(t) {
                    var e1 = {
                        tryLoc: t[0]
                    };
                    1 in t && (e1.catchLoc = t[1]), 2 in t && (e1.finallyLoc = t[2], e1.afterLoc = t[3]), this.tryEntries.push(e1);
                }
                function x(t) {
                    var e1 = t.completion || {};
                    e1.type = "normal", delete e1.arg, t.completion = e1;
                }
                function w(t) {
                    this.tryEntries = [
                        {
                            tryLoc: "root"
                        }
                    ], t.forEach(k, this), this.reset(!0);
                }
                function S(t) {
                    if (t) {
                        var e1 = t[r];
                        if (e1) return e1.call(t);
                        if ("function" == typeof t.next) return t;
                        if (!isNaN(t.length)) {
                            var o = -1, i = function e1() {
                                for(; ++o < t.length;)if (n.call(t, o)) return e1.value = t[o], e1.done = !1, e1;
                                return e1.value = void 0, e1.done = !0, e1;
                            };
                            return i.next = i;
                        }
                    }
                    return {
                        next: T
                    };
                }
                function T() {
                    return {
                        value: void 0,
                        done: !0
                    };
                }
                return f.prototype = g.constructor = d, d.constructor = f, d[a] = f.displayName = "GeneratorFunction", t.isGeneratorFunction = function(t) {
                    var e1 = "function" == typeof t && t.constructor;
                    return !!e1 && (e1 === f || "GeneratorFunction" === (e1.displayName || e1.name));
                }, t.mark = function(t) {
                    return Object.setPrototypeOf ? Object.setPrototypeOf(t, d) : (t.__proto__ = d, a in t || (t[a] = "GeneratorFunction")), t.prototype = Object.create(g), t;
                }, t.awrap = function(t) {
                    return {
                        __await: t
                    };
                }, y(b.prototype), b.prototype[i] = function() {
                    return this;
                }, t.AsyncIterator = b, t.async = function(e1, n, o, r, i) {
                    void 0 === i && (i = Promise);
                    var a = new b(s(e1, n, o, r), i);
                    return t.isGeneratorFunction(n) ? a : a.next().then(function(t) {
                        return t.done ? t.value : a.next();
                    });
                }, y(g), g[a] = "Generator", g[r] = function() {
                    return this;
                }, g.toString = function() {
                    return "[object Generator]";
                }, t.keys = function(t) {
                    var e1 = [];
                    for(var n in t)e1.push(n);
                    return e1.reverse(), function n() {
                        for(; e1.length;){
                            var o = e1.pop();
                            if (o in t) return n.value = o, n.done = !1, n;
                        }
                        return n.done = !0, n;
                    };
                }, t.values = S, w.prototype = {
                    constructor: w,
                    reset: function(t) {
                        if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(x), !t) for(var e1 in this)"t" === e1.charAt(0) && n.call(this, e1) && !isNaN(+e1.slice(1)) && (this[e1] = void 0);
                    },
                    stop: function() {
                        this.done = !0;
                        var t = this.tryEntries[0].completion;
                        if ("throw" === t.type) throw t.arg;
                        return this.rval;
                    },
                    dispatchException: function(t) {
                        if (this.done) throw t;
                        var e1 = this;
                        function o(n, o) {
                            return a.type = "throw", a.arg = t, e1.next = n, o && (e1.method = "next", e1.arg = void 0), !!o;
                        }
                        for(var r = this.tryEntries.length - 1; r >= 0; --r){
                            var i = this.tryEntries[r], a = i.completion;
                            if ("root" === i.tryLoc) return o("end");
                            if (i.tryLoc <= this.prev) {
                                var s = n.call(i, "catchLoc"), l = n.call(i, "finallyLoc");
                                if (s && l) {
                                    if (this.prev < i.catchLoc) return o(i.catchLoc, !0);
                                    if (this.prev < i.finallyLoc) return o(i.finallyLoc);
                                } else if (s) {
                                    if (this.prev < i.catchLoc) return o(i.catchLoc, !0);
                                } else {
                                    if (!l) throw new Error("try statement without catch or finally");
                                    if (this.prev < i.finallyLoc) return o(i.finallyLoc);
                                }
                            }
                        }
                    },
                    abrupt: function(t, e1) {
                        for(var o = this.tryEntries.length - 1; o >= 0; --o){
                            var r = this.tryEntries[o];
                            if (r.tryLoc <= this.prev && n.call(r, "finallyLoc") && this.prev < r.finallyLoc) {
                                var i = r;
                                break;
                            }
                        }
                        i && ("break" === t || "continue" === t) && i.tryLoc <= e1 && e1 <= i.finallyLoc && (i = null);
                        var a = i ? i.completion : {};
                        return a.type = t, a.arg = e1, i ? (this.method = "next", this.next = i.finallyLoc, c) : this.complete(a);
                    },
                    complete: function(t, e1) {
                        if ("throw" === t.type) throw t.arg;
                        return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e1 && (this.next = e1), c;
                    },
                    finish: function(t) {
                        for(var e1 = this.tryEntries.length - 1; e1 >= 0; --e1){
                            var n = this.tryEntries[e1];
                            if (n.finallyLoc === t) return this.complete(n.completion, n.afterLoc), x(n), c;
                        }
                    },
                    catch: function(t) {
                        for(var e1 = this.tryEntries.length - 1; e1 >= 0; --e1){
                            var n = this.tryEntries[e1];
                            if (n.tryLoc === t) {
                                var o = n.completion;
                                if ("throw" === o.type) {
                                    var r = o.arg;
                                    x(n);
                                }
                                return r;
                            }
                        }
                        throw new Error("illegal catch attempt");
                    },
                    delegateYield: function(t, e1, n) {
                        return this.delegate = {
                            iterator: S(t),
                            resultName: e1,
                            nextLoc: n
                        }, "next" === this.method && (this.arg = void 0), c;
                    }
                }, t;
            }(t.exports);
            try {
                regeneratorRuntime = o;
            } catch (t1) {
                Function("r", "regeneratorRuntime = r")(o);
            }
        },
        function(t, e1, n) {
            var o = n(149);
            t.exports = function(t, e1) {
                if (t) {
                    if ("string" == typeof t) return o(t, e1);
                    var n = Object.prototype.toString.call(t).slice(8, -1);
                    return "Object" === n && t.constructor && (n = t.constructor.name), "Map" === n || "Set" === n ? Array.from(n) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? o(t, e1) : void 0;
                }
            };
        },
        function(t, e1) {
            t.exports = function(t, e1) {
                (null == e1 || e1 > t.length) && (e1 = t.length);
                for(var n = 0, o = new Array(e1); n < e1; n++)o[n] = t[n];
                return o;
            };
        },
        function(t) {
            t.exports = JSON.parse('{"ui":{"blockTunes":{"toggler":{"Click to tune":"","or drag to move":""}},"inlineToolbar":{"converter":{"Convert to":""}},"toolbar":{"toolbox":{"Add":"","Filter":"","Nothing found":""}}},"toolNames":{"Text":"","Link":"","Bold":"","Italic":""},"tools":{"link":{"Add a link":""},"stub":{"The block can not be displayed correctly.":""}},"blockTunes":{"delete":{"Delete":""},"moveUp":{"Move up":""},"moveDown":{"Move down":""}}}');
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(5),
                n(6),
                n(4),
                n(153)
            ], void 0 === (i = "function" == typeof (o = function(t, e1, o, r, i, a) {
                "use strict";
                var s = n(1);
                function l() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.CriticalError = void 0, e1 = s(e1), o = s(o), r = s(r), i = s(i);
                var c = function(t) {
                    (0, o.default)(s, t);
                    var n, a = (n = s, function() {
                        var t, e1 = (0, i.default)(n);
                        if (l()) {
                            var o = (0, i.default)(this).constructor;
                            t = Reflect.construct(e1, arguments, o);
                        } else t = e1.apply(this, arguments);
                        return (0, r.default)(this, t);
                    });
                    function s() {
                        return (0, e1.default)(this, s), a.apply(this, arguments);
                    }
                    return s;
                }((0, (a = s(a)).default)(Error));
                t.CriticalError = c, c.displayName = "CriticalError";
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1) {
            t.exports = function(t) {
                if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t;
            };
        },
        function(t, e1, n) {
            var o = n(4), r = n(110), i = n(372), a = n(373);
            function s(e1) {
                var n = "function" == typeof Map ? new Map : void 0;
                return t.exports = s = function(t) {
                    if (null === t || !i(t)) return t;
                    if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function");
                    if (void 0 !== n) {
                        if (n.has(t)) return n.get(t);
                        n.set(t, e1);
                    }
                    function e1() {
                        return a(t, arguments, o(this).constructor);
                    }
                    return e1.prototype = Object.create(t.prototype, {
                        constructor: {
                            value: e1,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), r(e1, t);
                }, s(e1);
            }
            t.exports = s;
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(20),
                n(21),
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(7),
                n(112),
                n(9),
                n(61)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c, u, f, d, p, h) {
                "use strict";
                var v = n(8), g = n(1);
                function y() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = g(r), i = g(i), a = g(a), s = g(s), l = g(l), c = g(c), u = g(u), f = v(f), d = g(d), p = g(p), h = g(h);
                var b = function(t) {
                    (0, l.default)(o, t);
                    var e1, n = (e1 = o, function() {
                        var t, n = (0, u.default)(e1);
                        if (y()) {
                            var o = (0, u.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, c.default)(this, t);
                    });
                    function o() {
                        var t;
                        return (0, a.default)(this, o), (t = n.apply(this, arguments)).insert = function() {
                            var e1 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : t.config.defaultBlock, n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, o = (arguments.length > 2 && void 0 !== arguments[2] && arguments[2], arguments.length > 3 ? arguments[3] : void 0), r = arguments.length > 4 ? arguments[4] : void 0, i = arguments.length > 5 ? arguments[5] : void 0, a = t.Editor.BlockManager.insert({
                                tool: e1,
                                data: n,
                                index: o,
                                needToFocus: r,
                                replace: i
                            });
                            return new d.default(a);
                        }, t.composeBlockData = function() {
                            var e1 = (0, i.default)(r.default.mark(function e1(n) {
                                var o, i;
                                return r.default.wrap(function(e1) {
                                    for(;;)switch(e1.prev = e1.next){
                                        case 0:
                                            return o = t.Editor.Tools.blockTools.get(n), i = new h.default({
                                                tool: o,
                                                api: t.Editor.API,
                                                readOnly: !0,
                                                data: {},
                                                tunesData: {}
                                            }), e1.abrupt("return", i.data);
                                        case 3:
                                        case "end":
                                            return e1.stop();
                                    }
                                }, e1);
                            }));
                            return function(t) {
                                return e1.apply(this, arguments);
                            };
                        }(), t.update = function(e1, n) {
                            var o = t.Editor.BlockManager, r = o.getBlockById(e1);
                            if (r) {
                                var i = o.getBlockIndex(r);
                                o.insert({
                                    id: r.id,
                                    tool: r.name,
                                    data: n,
                                    index: i,
                                    replace: !0,
                                    tunes: r.tunes
                                });
                            } else f.log("blocks.update(): Block with passed id was not found", "warn");
                        }, t;
                    }
                    return (0, s.default)(o, [
                        {
                            key: "getBlocksCount",
                            value: function() {
                                return this.Editor.BlockManager.blocks.length;
                            }
                        },
                        {
                            key: "getCurrentBlockIndex",
                            value: function() {
                                return this.Editor.BlockManager.currentBlockIndex;
                            }
                        },
                        {
                            key: "getBlockIndex",
                            value: function(t) {
                                var e1 = this.Editor.BlockManager.getBlockById(t);
                                if (e1) return this.Editor.BlockManager.getBlockIndex(e1);
                                f.logLabeled("There is no block with id `" + t + "`", "warn");
                            }
                        },
                        {
                            key: "getBlockByIndex",
                            value: function(t) {
                                var e1 = this.Editor.BlockManager.getBlockByIndex(t);
                                if (void 0 !== e1) return new d.default(e1);
                                f.logLabeled("There is no block at index `" + t + "`", "warn");
                            }
                        },
                        {
                            key: "getById",
                            value: function(t) {
                                var e1 = this.Editor.BlockManager.getBlockById(t);
                                return void 0 === e1 ? (f.logLabeled("There is no block with id `" + t + "`", "warn"), null) : new d.default(e1);
                            }
                        },
                        {
                            key: "swap",
                            value: function(t, e1) {
                                f.log("`blocks.swap()` method is deprecated and will be removed in the next major release. Use `block.move()` method instead", "info"), this.Editor.BlockManager.swap(t, e1);
                            }
                        },
                        {
                            key: "move",
                            value: function(t, e1) {
                                this.Editor.BlockManager.move(t, e1);
                            }
                        },
                        {
                            key: "delete",
                            value: function(t) {
                                try {
                                    this.Editor.BlockManager.removeBlock(t);
                                } catch (t1) {
                                    return void f.logLabeled(t1, "warn");
                                }
                                0 === this.Editor.BlockManager.blocks.length && this.Editor.BlockManager.insert(), this.Editor.BlockManager.currentBlock && this.Editor.Caret.setToBlock(this.Editor.BlockManager.currentBlock, this.Editor.Caret.positions.END), this.Editor.Toolbar.close();
                            }
                        },
                        {
                            key: "clear",
                            value: function() {
                                this.Editor.BlockManager.clear(!0), this.Editor.InlineToolbar.close();
                            }
                        },
                        {
                            key: "render",
                            value: function(t) {
                                return this.Editor.BlockManager.clear(), this.Editor.Renderer.render(t.blocks);
                            }
                        },
                        {
                            key: "renderFromHTML",
                            value: function(t) {
                                return this.Editor.BlockManager.clear(), this.Editor.Paste.processText(t, !0);
                            }
                        },
                        {
                            key: "stretchBlock",
                            value: function(t) {
                                var e1 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
                                f.deprecationAssert(!0, "blocks.stretchBlock()", "BlockAPI");
                                var n = this.Editor.BlockManager.getBlockByIndex(t);
                                n && (n.stretched = e1);
                            }
                        },
                        {
                            key: "insertNewBlock",
                            value: function() {
                                f.log("Method blocks.insertNewBlock() is deprecated and it will be removed in the next major release. Use blocks.insert() instead.", "warn"), this.insert();
                            }
                        },
                        {
                            key: "methods",
                            get: function() {
                                var t = this;
                                return {
                                    clear: function() {
                                        return t.clear();
                                    },
                                    render: function(e1) {
                                        return t.render(e1);
                                    },
                                    renderFromHTML: function(e1) {
                                        return t.renderFromHTML(e1);
                                    },
                                    delete: function(e1) {
                                        return t.delete(e1);
                                    },
                                    swap: function(e1, n) {
                                        return t.swap(e1, n);
                                    },
                                    move: function(e1, n) {
                                        return t.move(e1, n);
                                    },
                                    getBlockByIndex: function(e1) {
                                        return t.getBlockByIndex(e1);
                                    },
                                    getById: function(e1) {
                                        return t.getById(e1);
                                    },
                                    getCurrentBlockIndex: function() {
                                        return t.getCurrentBlockIndex();
                                    },
                                    getBlockIndex: function(e1) {
                                        return t.getBlockIndex(e1);
                                    },
                                    getBlocksCount: function() {
                                        return t.getBlocksCount();
                                    },
                                    stretchBlock: function(e1) {
                                        var n = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
                                        return t.stretchBlock(e1, n);
                                    },
                                    insertNewBlock: function() {
                                        return t.insertNewBlock();
                                    },
                                    insert: this.insert,
                                    update: this.update,
                                    composeBlockData: this.composeBlockData
                                };
                            }
                        }
                    ]), o;
                }(p.default);
                o.default = b, b.displayName = "BlocksAPI", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(9)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c) {
                "use strict";
                var u = n(1);
                function f() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = u(r), i = u(i), a = u(a), s = u(s), l = u(l);
                var d = function(t) {
                    (0, a.default)(o, t);
                    var e1, n = (e1 = o, function() {
                        var t, n = (0, l.default)(e1);
                        if (f()) {
                            var o = (0, l.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, s.default)(this, t);
                    });
                    function o() {
                        var t;
                        return (0, r.default)(this, o), (t = n.apply(this, arguments)).setToFirstBlock = function() {
                            var e1 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : t.Editor.Caret.positions.DEFAULT, n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                            return !!t.Editor.BlockManager.firstBlock && (t.Editor.Caret.setToBlock(t.Editor.BlockManager.firstBlock, e1, n), !0);
                        }, t.setToLastBlock = function() {
                            var e1 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : t.Editor.Caret.positions.DEFAULT, n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                            return !!t.Editor.BlockManager.lastBlock && (t.Editor.Caret.setToBlock(t.Editor.BlockManager.lastBlock, e1, n), !0);
                        }, t.setToPreviousBlock = function() {
                            var e1 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : t.Editor.Caret.positions.DEFAULT, n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                            return !!t.Editor.BlockManager.previousBlock && (t.Editor.Caret.setToBlock(t.Editor.BlockManager.previousBlock, e1, n), !0);
                        }, t.setToNextBlock = function() {
                            var e1 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : t.Editor.Caret.positions.DEFAULT, n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                            return !!t.Editor.BlockManager.nextBlock && (t.Editor.Caret.setToBlock(t.Editor.BlockManager.nextBlock, e1, n), !0);
                        }, t.setToBlock = function(e1) {
                            var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : t.Editor.Caret.positions.DEFAULT, o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
                            return !!t.Editor.BlockManager.blocks[e1] && (t.Editor.Caret.setToBlock(t.Editor.BlockManager.blocks[e1], n, o), !0);
                        }, t.focus = function() {
                            var e1 = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                            return e1 ? t.setToLastBlock(t.Editor.Caret.positions.END) : t.setToFirstBlock(t.Editor.Caret.positions.START);
                        }, t;
                    }
                    return (0, i.default)(o, [
                        {
                            key: "methods",
                            get: function() {
                                return {
                                    setToFirstBlock: this.setToFirstBlock,
                                    setToLastBlock: this.setToLastBlock,
                                    setToPreviousBlock: this.setToPreviousBlock,
                                    setToNextBlock: this.setToNextBlock,
                                    setToBlock: this.setToBlock,
                                    focus: this.focus
                                };
                            }
                        }
                    ]), o;
                }((c = u(c)).default);
                o.default = d, d.displayName = "CaretAPI", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(9)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c) {
                "use strict";
                var u = n(1);
                function f() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = u(r), i = u(i), a = u(a), s = u(s), l = u(l);
                var d = function(t) {
                    (0, a.default)(o, t);
                    var e1, n = (e1 = o, function() {
                        var t, n = (0, l.default)(e1);
                        if (f()) {
                            var o = (0, l.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, s.default)(this, t);
                    });
                    function o() {
                        return (0, r.default)(this, o), n.apply(this, arguments);
                    }
                    return (0, i.default)(o, [
                        {
                            key: "on",
                            value: function(t, e1) {
                                this.eventsDispatcher.on(t, e1);
                            }
                        },
                        {
                            key: "emit",
                            value: function(t, e1) {
                                this.eventsDispatcher.emit(t, e1);
                            }
                        },
                        {
                            key: "off",
                            value: function(t, e1) {
                                this.eventsDispatcher.off(t, e1);
                            }
                        },
                        {
                            key: "methods",
                            get: function() {
                                var t = this;
                                return {
                                    emit: function(e1, n) {
                                        return t.emit(e1, n);
                                    },
                                    off: function(e1, n) {
                                        return t.off(e1, n);
                                    },
                                    on: function(e1, n) {
                                        return t.on(e1, n);
                                    }
                                };
                            }
                        }
                    ]), o;
                }((c = u(c)).default);
                o.default = d, d.displayName = "EventsAPI", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(60),
                n(7),
                n(9)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c, u, f) {
                "use strict";
                var d = n(1);
                function p() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = d(r), i = d(i), a = d(a), s = d(s), l = d(l), c = d(c);
                var h = function(t) {
                    (0, a.default)(o, t);
                    var e1, n = (e1 = o, function() {
                        var t, n = (0, l.default)(e1);
                        if (p()) {
                            var o = (0, l.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, s.default)(this, t);
                    });
                    function o() {
                        return (0, r.default)(this, o), n.apply(this, arguments);
                    }
                    return (0, i.default)(o, [
                        {
                            key: "getMethodsForTool",
                            value: function(t) {
                                return Object.assign(this.methods, {
                                    t: function(e1) {
                                        return c.default.t(o.getNamespace(t), e1);
                                    }
                                });
                            }
                        },
                        {
                            key: "methods",
                            get: function() {
                                return {
                                    t: function() {
                                        (0, u.logLabeled)("I18n.t() method can be accessed only from Tools", "warn");
                                    }
                                };
                            }
                        }
                    ], [
                        {
                            key: "getNamespace",
                            value: function(t) {
                                return t.isTune() ? "blockTunes.".concat(t.name) : "tools.".concat(t.name);
                            }
                        }
                    ]), o;
                }((f = d(f)).default);
                o.default = h, h.displayName = "I18nAPI", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(9)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c) {
                "use strict";
                var u = n(1);
                function f() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = u(r), i = u(i), a = u(a), s = u(s), l = u(l);
                var d = function(t) {
                    (0, a.default)(o, t);
                    var e1, n = (e1 = o, function() {
                        var t, n = (0, l.default)(e1);
                        if (f()) {
                            var o = (0, l.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, s.default)(this, t);
                    });
                    function o() {
                        return (0, r.default)(this, o), n.apply(this, arguments);
                    }
                    return (0, i.default)(o, [
                        {
                            key: "open",
                            value: function() {
                                this.Editor.InlineToolbar.tryToShow();
                            }
                        },
                        {
                            key: "close",
                            value: function() {
                                this.Editor.InlineToolbar.close();
                            }
                        },
                        {
                            key: "methods",
                            get: function() {
                                var t = this;
                                return {
                                    close: function() {
                                        return t.close();
                                    },
                                    open: function() {
                                        return t.open();
                                    }
                                };
                            }
                        }
                    ]), o;
                }((c = u(c)).default);
                o.default = d, d.displayName = "InlineToolbarAPI", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(9)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c) {
                "use strict";
                var u = n(1);
                function f() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = u(r), i = u(i), a = u(a), s = u(s), l = u(l);
                var d = function(t) {
                    (0, a.default)(o, t);
                    var e1, n = (e1 = o, function() {
                        var t, n = (0, l.default)(e1);
                        if (f()) {
                            var o = (0, l.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, s.default)(this, t);
                    });
                    function o() {
                        return (0, r.default)(this, o), n.apply(this, arguments);
                    }
                    return (0, i.default)(o, [
                        {
                            key: "on",
                            value: function(t, e1, n, o) {
                                return this.listeners.on(t, e1, n, o);
                            }
                        },
                        {
                            key: "off",
                            value: function(t, e1, n, o) {
                                this.listeners.off(t, e1, n, o);
                            }
                        },
                        {
                            key: "offById",
                            value: function(t) {
                                this.listeners.offById(t);
                            }
                        },
                        {
                            key: "methods",
                            get: function() {
                                var t = this;
                                return {
                                    on: function(e1, n, o, r) {
                                        return t.on(e1, n, o, r);
                                    },
                                    off: function(e1, n, o, r) {
                                        return t.off(e1, n, o, r);
                                    },
                                    offById: function(e1) {
                                        return t.offById(e1);
                                    }
                                };
                            }
                        }
                    ]), o;
                }((c = u(c)).default);
                o.default = d, d.displayName = "ListenersAPI", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(377),
                n(9)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c, u) {
                "use strict";
                var f = n(1);
                function d() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = f(r), i = f(i), a = f(a), s = f(s), l = f(l), c = f(c);
                var p = function(t) {
                    (0, a.default)(o, t);
                    var e1, n = (e1 = o, function() {
                        var t, n = (0, l.default)(e1);
                        if (d()) {
                            var o = (0, l.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, s.default)(this, t);
                    });
                    function o(t) {
                        var e1, i = t.config, a = t.eventsDispatcher;
                        return (0, r.default)(this, o), (e1 = n.call(this, {
                            config: i,
                            eventsDispatcher: a
                        })).notifier = new c.default, e1;
                    }
                    return (0, i.default)(o, [
                        {
                            key: "show",
                            value: function(t) {
                                return this.notifier.show(t);
                            }
                        },
                        {
                            key: "methods",
                            get: function() {
                                var t = this;
                                return {
                                    show: function(e1) {
                                        return t.show(e1);
                                    }
                                };
                            }
                        }
                    ]), o;
                }((u = f(u)).default);
                o.default = p, p.displayName = "NotifierAPI", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(9)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c) {
                "use strict";
                var u = n(1);
                function f() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = u(r), i = u(i), a = u(a), s = u(s), l = u(l);
                var d = function(t) {
                    (0, a.default)(o, t);
                    var e1, n = (e1 = o, function() {
                        var t, n = (0, l.default)(e1);
                        if (f()) {
                            var o = (0, l.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, s.default)(this, t);
                    });
                    function o() {
                        return (0, r.default)(this, o), n.apply(this, arguments);
                    }
                    return (0, i.default)(o, [
                        {
                            key: "toggle",
                            value: function(t) {
                                return this.Editor.ReadOnly.toggle(t);
                            }
                        },
                        {
                            key: "methods",
                            get: function() {
                                var t = this;
                                return {
                                    toggle: function(e1) {
                                        return t.toggle(e1);
                                    },
                                    get isEnabled () {
                                        return t.isEnabled;
                                    }
                                };
                            }
                        },
                        {
                            key: "isEnabled",
                            get: function() {
                                return this.Editor.ReadOnly.isEnabled;
                            }
                        }
                    ]), o;
                }((c = u(c)).default);
                o.default = d, d.displayName = "ReadOnlyAPI", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(9),
                n(67)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c, u) {
                "use strict";
                var f = n(1);
                function d() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = f(r), i = f(i), a = f(a), s = f(s), l = f(l);
                var p = function(t) {
                    (0, a.default)(o, t);
                    var e1, n = (e1 = o, function() {
                        var t, n = (0, l.default)(e1);
                        if (d()) {
                            var o = (0, l.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, s.default)(this, t);
                    });
                    function o() {
                        return (0, r.default)(this, o), n.apply(this, arguments);
                    }
                    return (0, i.default)(o, [
                        {
                            key: "clean",
                            value: function(t, e1) {
                                return (0, u.clean)(t, e1);
                            }
                        },
                        {
                            key: "methods",
                            get: function() {
                                var t = this;
                                return {
                                    clean: function(e1, n) {
                                        return t.clean(e1, n);
                                    }
                                };
                            }
                        }
                    ]), o;
                }((c = f(c)).default);
                o.default = p, p.displayName = "SanitizerAPI", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(7),
                n(9)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c, u) {
                "use strict";
                var f = n(8), d = n(1);
                function p() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = d(r), i = d(i), a = d(a), s = d(s), l = d(l), c = f(c);
                var h = function(t) {
                    (0, a.default)(o, t);
                    var e1, n = (e1 = o, function() {
                        var t, n = (0, l.default)(e1);
                        if (p()) {
                            var o = (0, l.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, s.default)(this, t);
                    });
                    function o() {
                        return (0, r.default)(this, o), n.apply(this, arguments);
                    }
                    return (0, i.default)(o, [
                        {
                            key: "save",
                            value: function() {
                                var t = "Editor's content can not be saved in read-only mode";
                                return this.Editor.ReadOnly.isEnabled ? (c.logLabeled(t, "warn"), Promise.reject(new Error(t))) : this.Editor.Saver.save();
                            }
                        },
                        {
                            key: "methods",
                            get: function() {
                                var t = this;
                                return {
                                    save: function() {
                                        return t.save();
                                    }
                                };
                            }
                        }
                    ]), o;
                }((u = d(u)).default);
                o.default = h, h.displayName = "SaverAPI", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(25),
                n(9)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c, u) {
                "use strict";
                var f = n(1);
                function d() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = f(r), i = f(i), a = f(a), s = f(s), l = f(l), c = f(c);
                var p = function(t) {
                    (0, a.default)(o, t);
                    var e1, n = (e1 = o, function() {
                        var t, n = (0, l.default)(e1);
                        if (d()) {
                            var o = (0, l.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, s.default)(this, t);
                    });
                    function o() {
                        return (0, r.default)(this, o), n.apply(this, arguments);
                    }
                    return (0, i.default)(o, [
                        {
                            key: "findParentTag",
                            value: function(t, e1) {
                                return (new c.default).findParentTag(t, e1);
                            }
                        },
                        {
                            key: "expandToTag",
                            value: function(t) {
                                (new c.default).expandToTag(t);
                            }
                        },
                        {
                            key: "methods",
                            get: function() {
                                var t = this;
                                return {
                                    findParentTag: function(e1, n) {
                                        return t.findParentTag(e1, n);
                                    },
                                    expandToTag: function(e1) {
                                        return t.expandToTag(e1);
                                    }
                                };
                            }
                        }
                    ]), o;
                }((u = f(u)).default);
                o.default = p, p.displayName = "SelectionAPI", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(9)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c) {
                "use strict";
                var u = n(1);
                function f() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = u(r), i = u(i), a = u(a), s = u(s), l = u(l);
                var d = function(t) {
                    (0, a.default)(o, t);
                    var e1, n = (e1 = o, function() {
                        var t, n = (0, l.default)(e1);
                        if (f()) {
                            var o = (0, l.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, s.default)(this, t);
                    });
                    function o() {
                        return (0, r.default)(this, o), n.apply(this, arguments);
                    }
                    return (0, i.default)(o, [
                        {
                            key: "classes",
                            get: function() {
                                return {
                                    block: "cdx-block",
                                    inlineToolButton: "ce-inline-tool",
                                    inlineToolButtonActive: "ce-inline-tool--active",
                                    input: "cdx-input",
                                    loader: "cdx-loader",
                                    button: "cdx-button",
                                    settingsButton: "cdx-settings-button",
                                    settingsButtonActive: "cdx-settings-button--active"
                                };
                            }
                        }
                    ]), o;
                }((c = u(c)).default);
                o.default = d, d.displayName = "StylesAPI", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(9),
                n(7)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c, u) {
                "use strict";
                var f = n(8), d = n(1);
                function p() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = d(r), i = d(i), a = d(a), s = d(s), l = d(l), c = d(c), u = f(u);
                var h = function(t) {
                    (0, a.default)(o, t);
                    var e1, n = (e1 = o, function() {
                        var t, n = (0, l.default)(e1);
                        if (p()) {
                            var o = (0, l.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, s.default)(this, t);
                    });
                    function o() {
                        return (0, r.default)(this, o), n.apply(this, arguments);
                    }
                    return (0, i.default)(o, [
                        {
                            key: "open",
                            value: function() {
                                this.Editor.Toolbar.moveAndOpen();
                            }
                        },
                        {
                            key: "close",
                            value: function() {
                                this.Editor.Toolbar.close();
                            }
                        },
                        {
                            key: "toggleBlockSettings",
                            value: function(t) {
                                -1 !== this.Editor.BlockManager.currentBlockIndex ? (null != t ? t : !this.Editor.BlockSettings.opened) ? (this.Editor.Toolbar.moveAndOpen(), this.Editor.BlockSettings.open()) : this.Editor.BlockSettings.close() : u.logLabeled("Could't toggle the Toolbar because there is no block selected ", "warn");
                            }
                        },
                        {
                            key: "methods",
                            get: function() {
                                var t = this;
                                return {
                                    close: function() {
                                        return t.close();
                                    },
                                    open: function() {
                                        return t.open();
                                    },
                                    toggleBlockSettings: function(e1) {
                                        return t.toggleBlockSettings(e1);
                                    }
                                };
                            }
                        }
                    ]), o;
                }(c.default);
                o.default = h, h.displayName = "ToolbarAPI", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(9),
                n(114)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c, u) {
                "use strict";
                var f = n(1);
                function d() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = f(r), i = f(i), a = f(a), s = f(s), l = f(l), c = f(c), u = f(u);
                var p = function(t) {
                    (0, a.default)(o, t);
                    var e1, n = (e1 = o, function() {
                        var t, n = (0, l.default)(e1);
                        if (d()) {
                            var o = (0, l.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, s.default)(this, t);
                    });
                    function o(t) {
                        var e1, i = t.config, a = t.eventsDispatcher;
                        return (0, r.default)(this, o), (e1 = n.call(this, {
                            config: i,
                            eventsDispatcher: a
                        })).tooltip = new u.default, e1;
                    }
                    return (0, i.default)(o, [
                        {
                            key: "destroy",
                            value: function() {
                                this.tooltip.destroy();
                            }
                        },
                        {
                            key: "show",
                            value: function(t, e1, n) {
                                this.tooltip.show(t, e1, n);
                            }
                        },
                        {
                            key: "hide",
                            value: function() {
                                this.tooltip.hide();
                            }
                        },
                        {
                            key: "onHover",
                            value: function(t, e1, n) {
                                this.tooltip.onHover(t, e1, n);
                            }
                        },
                        {
                            key: "methods",
                            get: function() {
                                var t = this;
                                return {
                                    show: function(e1, n, o) {
                                        return t.show(e1, n, o);
                                    },
                                    hide: function() {
                                        return t.hide();
                                    },
                                    onHover: function(e1, n, o) {
                                        return t.onHover(e1, n, o);
                                    }
                                };
                            }
                        }
                    ]), o;
                }(c.default);
                o.default = p, p.displayName = "TooltipAPI", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(9)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c) {
                "use strict";
                var u = n(1);
                function f() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = u(r), i = u(i), a = u(a), s = u(s), l = u(l);
                var d = function(t) {
                    (0, a.default)(o, t);
                    var e1, n = (e1 = o, function() {
                        var t, n = (0, l.default)(e1);
                        if (f()) {
                            var o = (0, l.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, s.default)(this, t);
                    });
                    function o() {
                        return (0, r.default)(this, o), n.apply(this, arguments);
                    }
                    return (0, i.default)(o, [
                        {
                            key: "methods",
                            get: function() {
                                return {
                                    nodes: this.editorNodes
                                };
                            }
                        },
                        {
                            key: "editorNodes",
                            get: function() {
                                return {
                                    wrapper: this.Editor.UI.nodes.wrapper,
                                    redactor: this.Editor.UI.nodes.redactor
                                };
                            }
                        }
                    ]), o;
                }((c = u(c)).default);
                o.default = d, d.displayName = "UiAPI", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(9),
                n(7),
                n(25),
                n(62)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c, u, f, d) {
                "use strict";
                var p = n(8), h = n(1);
                function v() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = h(r), i = h(i), a = h(a), s = h(s), l = h(l), c = h(c), u = p(u), f = h(f), d = h(d);
                var g = function(t) {
                    (0, a.default)(o, t);
                    var e1, n = (e1 = o, function() {
                        var t, n = (0, l.default)(e1);
                        if (v()) {
                            var o = (0, l.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, s.default)(this, t);
                    });
                    function o() {
                        return (0, r.default)(this, o), n.apply(this, arguments);
                    }
                    return (0, i.default)(o, [
                        {
                            key: "keydown",
                            value: function(t) {
                                switch(this.beforeKeydownProcessing(t), t.keyCode){
                                    case u.keyCodes.BACKSPACE:
                                        this.backspace(t);
                                        break;
                                    case u.keyCodes.ENTER:
                                        this.enter(t);
                                        break;
                                    case u.keyCodes.DOWN:
                                    case u.keyCodes.RIGHT:
                                        this.arrowRightAndDown(t);
                                        break;
                                    case u.keyCodes.UP:
                                    case u.keyCodes.LEFT:
                                        this.arrowLeftAndUp(t);
                                        break;
                                    case u.keyCodes.TAB:
                                        this.tabPressed(t);
                                }
                            }
                        },
                        {
                            key: "beforeKeydownProcessing",
                            value: function(t) {
                                this.needToolbarClosing(t) && u.isPrintableKey(t.keyCode) && (this.Editor.Toolbar.close(), this.Editor.ConversionToolbar.close(), t.ctrlKey || t.metaKey || t.altKey || t.shiftKey || (this.Editor.BlockManager.clearFocused(), this.Editor.BlockSelection.clearSelection(t)));
                            }
                        },
                        {
                            key: "keyup",
                            value: function(t) {
                                t.shiftKey || this.Editor.UI.checkEmptiness();
                            }
                        },
                        {
                            key: "tabPressed",
                            value: function(t) {
                                this.Editor.BlockSelection.clearSelection(t);
                                var e1 = this.Editor, n = e1.BlockManager, o = e1.InlineToolbar, r = e1.ConversionToolbar, i = n.currentBlock;
                                if (i) {
                                    var a = i.isEmpty, s = i.tool.isDefault && a, l = !a && r.opened, c = !a && !f.default.isCollapsed && o.opened;
                                    s ? this.activateToolbox() : l || c || this.activateBlockSettings();
                                }
                            }
                        },
                        {
                            key: "dragOver",
                            value: function(t) {
                                this.Editor.BlockManager.getBlockByChildNode(t.target).dropTarget = !0;
                            }
                        },
                        {
                            key: "dragLeave",
                            value: function(t) {
                                this.Editor.BlockManager.getBlockByChildNode(t.target).dropTarget = !1;
                            }
                        },
                        {
                            key: "handleCommandC",
                            value: function(t) {
                                var e1 = this.Editor.BlockSelection;
                                e1.anyBlockSelected && e1.copySelectedBlocks(t);
                            }
                        },
                        {
                            key: "handleCommandX",
                            value: function(t) {
                                var e1 = this.Editor, n = e1.BlockSelection, o = e1.BlockManager, r = e1.Caret;
                                n.anyBlockSelected && n.copySelectedBlocks(t).then(function() {
                                    var e1 = o.removeSelectedBlocks(), i = o.insertDefaultBlockAtIndex(e1, !0);
                                    r.setToBlock(i, r.positions.START), n.clearSelection(t);
                                });
                            }
                        },
                        {
                            key: "enter",
                            value: function(t) {
                                var e1 = this.Editor, n = e1.BlockManager, o = e1.UI;
                                if (!n.currentBlock.tool.isLineBreaksEnabled && !(o.someToolbarOpened && o.someFlipperButtonFocused || t.shiftKey)) {
                                    var r = this.Editor.BlockManager.currentBlock;
                                    this.Editor.Caret.isAtStart && !this.Editor.BlockManager.currentBlock.hasMedia ? this.Editor.BlockManager.insertDefaultBlockAtIndex(this.Editor.BlockManager.currentBlockIndex) : r = this.Editor.BlockManager.split(), this.Editor.Caret.setToBlock(r), this.Editor.Toolbar.moveAndOpen(r), t.preventDefault();
                                }
                            }
                        },
                        {
                            key: "backspace",
                            value: function(t) {
                                var e1 = this.Editor, n = e1.BlockManager, o = e1.BlockSelection, r = e1.Caret, i = n.currentBlock, a = i.tool;
                                if (i.selected || i.isEmpty && i.currentInput === i.firstInput) {
                                    t.preventDefault();
                                    var s = n.currentBlockIndex;
                                    return n.previousBlock && 0 === n.previousBlock.inputs.length ? n.removeBlock(s - 1) : n.removeBlock(), r.setToBlock(n.currentBlock, s ? r.positions.END : r.positions.START), this.Editor.Toolbar.close(), void o.clearSelection(t);
                                }
                                if (!a.isLineBreaksEnabled || r.isAtStart) {
                                    var l = 0 === n.currentBlockIndex;
                                    r.isAtStart && f.default.isCollapsed && i.currentInput === i.firstInput && !l && (t.preventDefault(), this.mergeBlocks());
                                }
                            }
                        },
                        {
                            key: "mergeBlocks",
                            value: function() {
                                var t = this.Editor, e1 = t.BlockManager, n = t.Caret, o = t.Toolbar, r = e1.previousBlock, i = e1.currentBlock;
                                if (i.name !== r.name || !r.mergeable) return 0 === r.inputs.length || r.isEmpty ? (e1.removeBlock(e1.currentBlockIndex - 1), n.setToBlock(e1.currentBlock), void o.close()) : void (n.navigatePrevious() && o.close());
                                n.createShadow(r.pluginsContent), e1.mergeBlocks(r, i).then(function() {
                                    n.restoreCaret(r.pluginsContent), r.pluginsContent.normalize(), o.close();
                                });
                            }
                        },
                        {
                            key: "arrowRightAndDown",
                            value: function(t) {
                                var e1 = this, n = d.default.usedKeys.includes(t.keyCode) && (!t.shiftKey || t.keyCode === u.keyCodes.TAB);
                                if (!this.Editor.UI.someToolbarOpened || !n) {
                                    this.Editor.BlockManager.clearFocused(), this.Editor.Toolbar.close();
                                    var o = this.Editor.Caret.isAtEnd || this.Editor.BlockSelection.anyBlockSelected;
                                    t.shiftKey && t.keyCode === u.keyCodes.DOWN && o ? this.Editor.CrossBlockSelection.toggleBlockSelectedState() : ((t.keyCode === u.keyCodes.DOWN || t.keyCode === u.keyCodes.RIGHT && !this.isRtl ? this.Editor.Caret.navigateNext() : this.Editor.Caret.navigatePrevious()) ? t.preventDefault() : u.delay(function() {
                                        e1.Editor.BlockManager.currentBlock && e1.Editor.BlockManager.currentBlock.updateCurrentInput();
                                    }, 20)(), this.Editor.BlockSelection.clearSelection(t));
                                }
                            }
                        },
                        {
                            key: "arrowLeftAndUp",
                            value: function(t) {
                                var e1 = this;
                                if (this.Editor.UI.someToolbarOpened) {
                                    if (d.default.usedKeys.includes(t.keyCode) && (!t.shiftKey || t.keyCode === u.keyCodes.TAB)) return;
                                    this.Editor.UI.closeAllToolbars();
                                }
                                this.Editor.BlockManager.clearFocused(), this.Editor.Toolbar.close();
                                var n = this.Editor.Caret.isAtStart || this.Editor.BlockSelection.anyBlockSelected;
                                t.shiftKey && t.keyCode === u.keyCodes.UP && n ? this.Editor.CrossBlockSelection.toggleBlockSelectedState(!1) : ((t.keyCode === u.keyCodes.UP || t.keyCode === u.keyCodes.LEFT && !this.isRtl ? this.Editor.Caret.navigatePrevious() : this.Editor.Caret.navigateNext()) ? t.preventDefault() : u.delay(function() {
                                    e1.Editor.BlockManager.currentBlock && e1.Editor.BlockManager.currentBlock.updateCurrentInput();
                                }, 20)(), this.Editor.BlockSelection.clearSelection(t));
                            }
                        },
                        {
                            key: "needToolbarClosing",
                            value: function(t) {
                                var e1 = t.keyCode === u.keyCodes.ENTER && this.Editor.Toolbar.toolbox.opened, n = t.keyCode === u.keyCodes.ENTER && this.Editor.BlockSettings.opened, o = t.keyCode === u.keyCodes.ENTER && this.Editor.InlineToolbar.opened, r = t.keyCode === u.keyCodes.ENTER && this.Editor.ConversionToolbar.opened, i = t.keyCode === u.keyCodes.TAB;
                                return !(t.shiftKey || i || e1 || n || o || r);
                            }
                        },
                        {
                            key: "activateToolbox",
                            value: function() {
                                this.Editor.Toolbar.opened || this.Editor.Toolbar.moveAndOpen(), this.Editor.Toolbar.toolbox.open();
                            }
                        },
                        {
                            key: "activateBlockSettings",
                            value: function() {
                                this.Editor.Toolbar.opened || (this.Editor.BlockManager.currentBlock.focused = !0, this.Editor.Toolbar.moveAndOpen()), this.Editor.BlockSettings.opened || this.Editor.BlockSettings.open();
                            }
                        }
                    ]), o;
                }(c.default);
                o.default = g, g.displayName = "BlockEvents", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(20),
                n(21),
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(61),
                n(9),
                n(14),
                n(7),
                n(382),
                n(112),
                n(383)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c, u, f, d, p, h, v, g, y) {
                "use strict";
                var b = n(8), m = n(1);
                function k() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = m(r), i = m(i), a = m(a), s = m(s), l = m(l), c = m(c), u = m(u), f = b(f), d = m(d), p = m(p), h = b(h), v = m(v), g = m(g);
                var x = function(t) {
                    (0, l.default)(b, t);
                    var e1, n, o, d = (e1 = b, function() {
                        var t, n = (0, u.default)(e1);
                        if (k()) {
                            var o = (0, u.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, c.default)(this, t);
                    });
                    function b() {
                        var t;
                        return (0, a.default)(this, b), (t = d.apply(this, arguments))._currentBlockIndex = -1, t._blocks = null, t;
                    }
                    return (0, s.default)(b, [
                        {
                            key: "prepare",
                            value: function() {
                                var t = this, e1 = new v.default(this.Editor.UI.nodes.redactor);
                                this._blocks = new Proxy(e1, {
                                    set: v.default.set,
                                    get: v.default.get
                                }), this.listeners.on(document, "copy", function(e1) {
                                    return t.Editor.BlockEvents.handleCommandC(e1);
                                });
                            }
                        },
                        {
                            key: "toggleReadOnly",
                            value: function(t) {
                                t ? this.disableModuleBindings() : this.enableModuleBindings();
                            }
                        },
                        {
                            key: "composeBlock",
                            value: function(t) {
                                var e1 = t.tool, n = t.data, o = void 0 === n ? {} : n, r = t.id, i = void 0 === r ? void 0 : r, a = t.tunes, s = void 0 === a ? {} : a, l = this.Editor.ReadOnly.isEnabled, c = this.Editor.Tools.blockTools.get(e1), u = new f.default({
                                    id: i,
                                    data: o,
                                    tool: c,
                                    api: this.Editor.API,
                                    readOnly: l,
                                    tunesData: s
                                });
                                return l || this.bindBlockEvents(u), u;
                            }
                        },
                        {
                            key: "insert",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, e1 = t.id, n = void 0 === e1 ? void 0 : e1, o = t.tool, r = void 0 === o ? this.config.defaultBlock : o, i = t.data, a = void 0 === i ? {} : i, s = t.index, l = t.needToFocus, c = void 0 === l || l, u = t.replace, f = void 0 !== u && u, d = t.tunes, p = void 0 === d ? {} : d, h = s;
                                void 0 === h && (h = this.currentBlockIndex + (f ? 0 : 1));
                                var v = this.composeBlock({
                                    id: n,
                                    tool: r,
                                    data: a,
                                    tunes: p
                                });
                                return f && this.blockDidMutated(y.BlockMutationType.Removed, this.getBlockByIndex(h), {
                                    index: h
                                }), this._blocks.insert(h, v, f), this.blockDidMutated(y.BlockMutationType.Added, v, {
                                    index: h
                                }), c ? this.currentBlockIndex = h : h <= this.currentBlockIndex && this.currentBlockIndex++, v;
                            }
                        },
                        {
                            key: "replace",
                            value: function(t) {
                                var e1 = t.tool, n = void 0 === e1 ? this.config.defaultBlock : e1, o = t.data, r = void 0 === o ? {} : o;
                                return this.insert({
                                    tool: n,
                                    data: r,
                                    index: this.currentBlockIndex,
                                    replace: !0
                                });
                            }
                        },
                        {
                            key: "paste",
                            value: function(t, e1) {
                                var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], o = this.insert({
                                    tool: t,
                                    replace: n
                                });
                                try {
                                    o.call(f.BlockToolAPI.ON_PASTE, e1);
                                } catch (e2) {
                                    h.log("".concat(t, ": onPaste callback call is failed"), "error", e2);
                                }
                                return o;
                            }
                        },
                        {
                            key: "insertDefaultBlockAtIndex",
                            value: function(t) {
                                var e1 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], n = this.composeBlock({
                                    tool: this.config.defaultBlock
                                });
                                return this._blocks[t] = n, this.blockDidMutated(y.BlockMutationType.Added, n, {
                                    index: t
                                }), e1 ? this.currentBlockIndex = t : t <= this.currentBlockIndex && this.currentBlockIndex++, n;
                            }
                        },
                        {
                            key: "insertAtEnd",
                            value: function() {
                                return this.currentBlockIndex = this.blocks.length - 1, this.insert();
                            }
                        },
                        {
                            key: "mergeBlocks",
                            value: (o = (0, i.default)(r.default.mark(function t(e1, n) {
                                var o, i;
                                return r.default.wrap(function(t) {
                                    for(;;)switch(t.prev = t.next){
                                        case 0:
                                            if (o = this._blocks.indexOf(n), !n.isEmpty) {
                                                t.next = 3;
                                                break;
                                            }
                                            return t.abrupt("return");
                                        case 3:
                                            return t.next = 5, n.data;
                                        case 5:
                                            if (i = t.sent, h.isEmpty(i)) {
                                                t.next = 9;
                                                break;
                                            }
                                            return t.next = 9, e1.mergeWith(i);
                                        case 9:
                                            this.removeBlock(o), this.currentBlockIndex = this._blocks.indexOf(e1);
                                        case 11:
                                        case "end":
                                            return t.stop();
                                    }
                                }, t, this);
                            })), function(t, e1) {
                                return o.apply(this, arguments);
                            })
                        },
                        {
                            key: "removeBlock",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.currentBlockIndex;
                                if (!this.validateIndex(t)) throw new Error("Can't find a Block to remove");
                                var e1 = this._blocks[t];
                                e1.destroy(), this._blocks.remove(t), this.blockDidMutated(y.BlockMutationType.Removed, e1, {
                                    index: t
                                }), this.currentBlockIndex >= t && this.currentBlockIndex--, this.blocks.length ? 0 === t && (this.currentBlockIndex = 0) : (this.currentBlockIndex = -1, this.insert());
                            }
                        },
                        {
                            key: "removeSelectedBlocks",
                            value: function() {
                                for(var t, e1 = this.blocks.length - 1; e1 >= 0; e1--)this.blocks[e1].selected && (this.removeBlock(e1), t = e1);
                                return t;
                            }
                        },
                        {
                            key: "removeAllBlocks",
                            value: function() {
                                for(var t = this.blocks.length - 1; t >= 0; t--)this._blocks.remove(t);
                                this.currentBlockIndex = -1, this.insert(), this.currentBlock.firstInput.focus();
                            }
                        },
                        {
                            key: "split",
                            value: function() {
                                var t = this.Editor.Caret.extractFragmentFromCaretPosition(), e1 = p.default.make("div");
                                e1.appendChild(t);
                                var n = {
                                    text: p.default.isEmpty(e1) ? "" : e1.innerHTML
                                };
                                return this.insert({
                                    data: n
                                });
                            }
                        },
                        {
                            key: "getBlockByIndex",
                            value: function(t) {
                                return -1 === t && (t = this._blocks.length - 1), this._blocks[t];
                            }
                        },
                        {
                            key: "getBlockIndex",
                            value: function(t) {
                                return this._blocks.indexOf(t);
                            }
                        },
                        {
                            key: "getBlockById",
                            value: function(t) {
                                return this._blocks.array.find(function(e1) {
                                    return e1.id === t;
                                });
                            }
                        },
                        {
                            key: "getBlock",
                            value: function(t) {
                                p.default.isElement(t) || (t = t.parentNode);
                                var e1 = this._blocks.nodes, n = t.closest(".".concat(f.default.CSS.wrapper)), o = e1.indexOf(n);
                                if (o >= 0) return this._blocks[o];
                            }
                        },
                        {
                            key: "highlightCurrentNode",
                            value: function() {
                                this.clearFocused(), this.currentBlock.focused = !0;
                            }
                        },
                        {
                            key: "clearFocused",
                            value: function() {
                                this.blocks.forEach(function(t) {
                                    t.focused = !1;
                                });
                            }
                        },
                        {
                            key: "setCurrentBlockByChildNode",
                            value: function(t) {
                                p.default.isElement(t) || (t = t.parentNode);
                                var e1 = t.closest(".".concat(f.default.CSS.wrapper));
                                if (e1) {
                                    var n = e1.closest(".".concat(this.Editor.UI.CSS.editorWrapper));
                                    if (null == n ? void 0 : n.isEqualNode(this.Editor.UI.nodes.wrapper)) return this.currentBlockIndex = this._blocks.nodes.indexOf(e1), this.currentBlock.updateCurrentInput(), this.currentBlock;
                                }
                            }
                        },
                        {
                            key: "getBlockByChildNode",
                            value: function(t) {
                                p.default.isElement(t) || (t = t.parentNode);
                                var e1 = t.closest(".".concat(f.default.CSS.wrapper));
                                return this.blocks.find(function(t) {
                                    return t.holder === e1;
                                });
                            }
                        },
                        {
                            key: "swap",
                            value: function(t, e1) {
                                this._blocks.swap(t, e1), this.currentBlockIndex = e1;
                            }
                        },
                        {
                            key: "move",
                            value: function(t) {
                                var e1 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.currentBlockIndex;
                                isNaN(t) || isNaN(e1) ? h.log("Warning during 'move' call: incorrect indices provided.", "warn") : this.validateIndex(t) && this.validateIndex(e1) ? (this._blocks.move(t, e1), this.currentBlockIndex = t, this.blockDidMutated(y.BlockMutationType.Moved, this.currentBlock, {
                                    fromIndex: e1,
                                    toIndex: t
                                })) : h.log("Warning during 'move' call: indices cannot be lower than 0 or greater than the amount of blocks.", "warn");
                            }
                        },
                        {
                            key: "dropPointer",
                            value: function() {
                                this.currentBlockIndex = -1, this.clearFocused();
                            }
                        },
                        {
                            key: "clear",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                                this._blocks.removeAll(), this.dropPointer(), t && this.insert(), this.Editor.UI.checkEmptiness();
                            }
                        },
                        {
                            key: "destroy",
                            value: (n = (0, i.default)(r.default.mark(function t() {
                                return r.default.wrap(function(t) {
                                    for(;;)switch(t.prev = t.next){
                                        case 0:
                                            return t.next = 2, Promise.all(this.blocks.map(function(t) {
                                                return t.destroy();
                                            }));
                                        case 2:
                                        case "end":
                                            return t.stop();
                                    }
                                }, t, this);
                            })), function() {
                                return n.apply(this, arguments);
                            })
                        },
                        {
                            key: "bindBlockEvents",
                            value: function(t) {
                                var e1 = this, n = this.Editor.BlockEvents;
                                this.readOnlyMutableListeners.on(t.holder, "keydown", function(t) {
                                    n.keydown(t);
                                }), this.readOnlyMutableListeners.on(t.holder, "keyup", function(t) {
                                    n.keyup(t);
                                }), this.readOnlyMutableListeners.on(t.holder, "dragover", function(t) {
                                    n.dragOver(t);
                                }), this.readOnlyMutableListeners.on(t.holder, "dragleave", function(t) {
                                    n.dragLeave(t);
                                }), t.on("didMutated", function(t) {
                                    return e1.blockDidMutated(y.BlockMutationType.Changed, t, {
                                        index: e1.getBlockIndex(t)
                                    });
                                });
                            }
                        },
                        {
                            key: "disableModuleBindings",
                            value: function() {
                                this.readOnlyMutableListeners.clearAll();
                            }
                        },
                        {
                            key: "enableModuleBindings",
                            value: function() {
                                var t = this;
                                this.readOnlyMutableListeners.on(document, "cut", function(e1) {
                                    return t.Editor.BlockEvents.handleCommandX(e1);
                                }), this.blocks.forEach(function(e1) {
                                    t.bindBlockEvents(e1);
                                });
                            }
                        },
                        {
                            key: "validateIndex",
                            value: function(t) {
                                return !(t < 0 || t >= this._blocks.length);
                            }
                        },
                        {
                            key: "blockDidMutated",
                            value: function(t, e1) {
                                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, o = new CustomEvent(t, {
                                    detail: Object.assign({
                                        target: new g.default(e1)
                                    }, n)
                                });
                                return this.Editor.ModificationsObserver.onChange(o), e1;
                            }
                        },
                        {
                            key: "currentBlockIndex",
                            get: function() {
                                return this._currentBlockIndex;
                            },
                            set: function(t) {
                                this._blocks[this._currentBlockIndex] && this._blocks[this._currentBlockIndex].willUnselect(), this._blocks[t] && this._blocks[t].willSelect(), this._currentBlockIndex = t;
                            }
                        },
                        {
                            key: "firstBlock",
                            get: function() {
                                return this._blocks[0];
                            }
                        },
                        {
                            key: "lastBlock",
                            get: function() {
                                return this._blocks[this._blocks.length - 1];
                            }
                        },
                        {
                            key: "currentBlock",
                            get: function() {
                                return this._blocks[this.currentBlockIndex];
                            },
                            set: function(t) {
                                this.currentBlockIndex = this.getBlockIndex(t);
                            }
                        },
                        {
                            key: "nextBlock",
                            get: function() {
                                return this.currentBlockIndex === this._blocks.length - 1 ? null : this._blocks[this.currentBlockIndex + 1];
                            }
                        },
                        {
                            key: "nextContentfulBlock",
                            get: function() {
                                return this.blocks.slice(this.currentBlockIndex + 1).find(function(t) {
                                    return !!t.inputs.length;
                                });
                            }
                        },
                        {
                            key: "previousContentfulBlock",
                            get: function() {
                                return this.blocks.slice(0, this.currentBlockIndex).reverse().find(function(t) {
                                    return !!t.inputs.length;
                                });
                            }
                        },
                        {
                            key: "previousBlock",
                            get: function() {
                                return 0 === this.currentBlockIndex ? null : this._blocks[this.currentBlockIndex - 1];
                            }
                        },
                        {
                            key: "blocks",
                            get: function() {
                                return this._blocks.array;
                            }
                        },
                        {
                            key: "isEditorEmpty",
                            get: function() {
                                return this.blocks.every(function(t) {
                                    return t.isEmpty;
                                });
                            }
                        }
                    ]), b;
                }(d.default);
                o.default = x, x.displayName = "BlockManager", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(9),
                n(7),
                n(14),
                n(115),
                n(25),
                n(67)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c, u, f, d, p, h) {
                "use strict";
                var v = n(8), g = n(1);
                function y() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = g(r), i = g(i), a = g(a), s = g(s), l = g(l), c = g(c), u = v(u), f = g(f), d = g(d), p = g(p);
                var b = function(t) {
                    (0, a.default)(o, t);
                    var e1, n = (e1 = o, function() {
                        var t, n = (0, l.default)(e1);
                        if (y()) {
                            var o = (0, l.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, s.default)(this, t);
                    });
                    function o() {
                        var t;
                        return (0, r.default)(this, o), (t = n.apply(this, arguments)).anyBlockSelectedCache = null, t.needToSelectAll = !1, t.nativeInputSelected = !1, t.readyToBlockSelection = !1, t;
                    }
                    return (0, i.default)(o, [
                        {
                            key: "prepare",
                            value: function() {
                                var t = this;
                                this.selection = new p.default, d.default.add({
                                    name: "CMD+A",
                                    handler: function(e1) {
                                        var n = t.Editor, o = n.BlockManager;
                                        if (n.ReadOnly.isEnabled) return e1.preventDefault(), void t.selectAllBlocks();
                                        o.currentBlock && t.handleCommandA(e1);
                                    },
                                    on: this.Editor.UI.nodes.redactor
                                });
                            }
                        },
                        {
                            key: "toggleReadOnly",
                            value: function(t) {
                                p.default.get().removeAllRanges(), this.allBlocksSelected = !1;
                            }
                        },
                        {
                            key: "unSelectBlockByIndex",
                            value: function(t) {
                                var e1 = this.Editor.BlockManager;
                                (isNaN(t) ? e1.currentBlock : e1.getBlockByIndex(t)).selected = !1, this.clearCache();
                            }
                        },
                        {
                            key: "clearSelection",
                            value: function(t) {
                                var e1 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], n = this.Editor, o = n.BlockManager, r = n.Caret, i = n.RectangleSelection;
                                this.needToSelectAll = !1, this.nativeInputSelected = !1, this.readyToBlockSelection = !1;
                                var a = t && t instanceof KeyboardEvent, s = a && u.isPrintableKey(t.keyCode);
                                if (this.anyBlockSelected && a && s && !p.default.isSelectionExists) {
                                    var l = o.removeSelectedBlocks();
                                    o.insertDefaultBlockAtIndex(l, !0), r.setToBlock(o.currentBlock), u.delay(function() {
                                        var e1 = t.key;
                                        r.insertContentAtCaretPosition(e1.length > 1 ? "" : e1);
                                    }, 20)();
                                }
                                this.Editor.CrossBlockSelection.clear(t), this.anyBlockSelected && !i.isRectActivated() ? (e1 && this.selection.restore(), this.allBlocksSelected = !1) : this.Editor.RectangleSelection.clearSelection();
                            }
                        },
                        {
                            key: "copySelectedBlocks",
                            value: function(t) {
                                var e1 = this;
                                t.preventDefault();
                                var n = f.default.make("div");
                                this.selectedBlocks.forEach(function(t) {
                                    var o = (0, h.clean)(t.holder.innerHTML, e1.sanitizerConfig), r = f.default.make("p");
                                    r.innerHTML = o, n.appendChild(r);
                                });
                                var o = Array.from(n.childNodes).map(function(t) {
                                    return t.textContent;
                                }).join("\n\n"), r = n.innerHTML;
                                return t.clipboardData.setData("text/plain", o), t.clipboardData.setData("text/html", r), Promise.all(this.selectedBlocks.map(function(t) {
                                    return t.save();
                                })).then(function(n) {
                                    try {
                                        t.clipboardData.setData(e1.Editor.Paste.MIME_TYPE, JSON.stringify(n));
                                    } catch (t1) {}
                                });
                            }
                        },
                        {
                            key: "selectBlockByIndex",
                            value: function(t) {
                                var e1, n = this.Editor.BlockManager;
                                n.clearFocused(), e1 = isNaN(t) ? n.currentBlock : n.getBlockByIndex(t), this.selection.save(), p.default.get().removeAllRanges(), e1.selected = !0, this.clearCache(), this.Editor.InlineToolbar.close();
                            }
                        },
                        {
                            key: "clearCache",
                            value: function() {
                                this.anyBlockSelectedCache = null;
                            }
                        },
                        {
                            key: "destroy",
                            value: function() {
                                d.default.remove(this.Editor.UI.nodes.redactor, "CMD+A");
                            }
                        },
                        {
                            key: "handleCommandA",
                            value: function(t) {
                                if (this.Editor.RectangleSelection.clearSelection(), !f.default.isNativeInput(t.target) || this.readyToBlockSelection) {
                                    var e1 = this.Editor.BlockManager.getBlock(t.target).inputs;
                                    e1.length > 1 && !this.readyToBlockSelection ? this.readyToBlockSelection = !0 : 1 !== e1.length || this.needToSelectAll ? this.needToSelectAll ? (t.preventDefault(), this.selectAllBlocks(), this.needToSelectAll = !1, this.readyToBlockSelection = !1, this.Editor.ConversionToolbar.close()) : this.readyToBlockSelection && (t.preventDefault(), this.selectBlockByIndex(), this.needToSelectAll = !0) : this.needToSelectAll = !0;
                                } else this.readyToBlockSelection = !0;
                            }
                        },
                        {
                            key: "selectAllBlocks",
                            value: function() {
                                this.selection.save(), p.default.get().removeAllRanges(), this.allBlocksSelected = !0, this.Editor.InlineToolbar.close();
                            }
                        },
                        {
                            key: "sanitizerConfig",
                            get: function() {
                                return {
                                    p: {},
                                    h1: {},
                                    h2: {},
                                    h3: {},
                                    h4: {},
                                    h5: {},
                                    h6: {},
                                    ol: {},
                                    ul: {},
                                    li: {},
                                    br: !0,
                                    img: {
                                        src: !0,
                                        width: !0,
                                        height: !0
                                    },
                                    a: {
                                        href: !0
                                    },
                                    b: {},
                                    i: {},
                                    u: {}
                                };
                            }
                        },
                        {
                            key: "allBlocksSelected",
                            get: function() {
                                return this.Editor.BlockManager.blocks.every(function(t) {
                                    return !0 === t.selected;
                                });
                            },
                            set: function(t) {
                                this.Editor.BlockManager.blocks.forEach(function(e1) {
                                    e1.selected = t;
                                }), this.clearCache();
                            }
                        },
                        {
                            key: "anyBlockSelected",
                            get: function() {
                                var t = this.Editor.BlockManager;
                                return null === this.anyBlockSelectedCache && (this.anyBlockSelectedCache = t.blocks.some(function(t) {
                                    return !0 === t.selected;
                                })), this.anyBlockSelectedCache;
                            }
                        },
                        {
                            key: "selectedBlocks",
                            get: function() {
                                return this.Editor.BlockManager.blocks.filter(function(t) {
                                    return t.selected;
                                });
                            }
                        }
                    ]), o;
                }(c.default);
                o.default = b, b.displayName = "BlockSelection", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(25),
                n(9),
                n(14),
                n(7)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c, u, f, d) {
                "use strict";
                var p = n(8), h = n(1);
                function v() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = h(r), i = h(i), a = h(a), s = h(s), l = h(l), c = h(c), u = h(u), f = h(f), d = p(d);
                var g = function(t) {
                    (0, a.default)(o, t);
                    var e1, n = (e1 = o, function() {
                        var t, n = (0, l.default)(e1);
                        if (v()) {
                            var o = (0, l.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, s.default)(this, t);
                    });
                    function o() {
                        return (0, r.default)(this, o), n.apply(this, arguments);
                    }
                    return (0, i.default)(o, [
                        {
                            key: "setToBlock",
                            value: function(t) {
                                var e1, n = this, o = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.positions.DEFAULT, r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, i = this.Editor.BlockManager;
                                switch(o){
                                    case this.positions.START:
                                        e1 = t.firstInput;
                                        break;
                                    case this.positions.END:
                                        e1 = t.lastInput;
                                        break;
                                    default:
                                        e1 = t.currentInput;
                                }
                                if (e1) {
                                    var a = f.default.getDeepestNode(e1, o === this.positions.END), s = f.default.getContentLength(a);
                                    switch(!0){
                                        case o === this.positions.START:
                                            r = 0;
                                            break;
                                        case o === this.positions.END:
                                        case r > s:
                                            r = s;
                                    }
                                    d.delay(function() {
                                        n.set(a, r);
                                    }, 20)(), i.setCurrentBlockByChildNode(t.holder), i.currentBlock.currentInput = e1;
                                }
                            }
                        },
                        {
                            key: "setToInput",
                            value: function(t) {
                                var e1 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.positions.DEFAULT, n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, o = this.Editor.BlockManager.currentBlock, r = f.default.getDeepestNode(t);
                                switch(e1){
                                    case this.positions.START:
                                        this.set(r, 0);
                                        break;
                                    case this.positions.END:
                                        this.set(r, f.default.getContentLength(r));
                                        break;
                                    default:
                                        n && this.set(r, n);
                                }
                                o.currentInput = t;
                            }
                        },
                        {
                            key: "set",
                            value: function(t) {
                                var e1 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n = c.default.setCursor(t, e1), o = n.top, r = n.bottom, i = window, a = i.innerHeight;
                                o < 0 && window.scrollBy(0, o), r > a && window.scrollBy(0, r - a);
                            }
                        },
                        {
                            key: "setToTheLastBlock",
                            value: function() {
                                var t = this.Editor.BlockManager.lastBlock;
                                if (t) {
                                    if (t.tool.isDefault && t.isEmpty) this.setToBlock(t);
                                    else {
                                        var e1 = this.Editor.BlockManager.insertAtEnd();
                                        this.setToBlock(e1);
                                    }
                                }
                            }
                        },
                        {
                            key: "extractFragmentFromCaretPosition",
                            value: function() {
                                var t = c.default.get();
                                if (t.rangeCount) {
                                    var e1 = t.getRangeAt(0), n = this.Editor.BlockManager.currentBlock.currentInput;
                                    if (e1.deleteContents(), n) {
                                        if (f.default.isNativeInput(n)) {
                                            var o = n, r = document.createDocumentFragment(), i = o.value.substring(0, o.selectionStart), a = o.value.substring(o.selectionStart);
                                            return r.textContent = a, o.value = i, r;
                                        }
                                        var s = e1.cloneRange();
                                        return s.selectNodeContents(n), s.setStart(e1.endContainer, e1.endOffset), s.extractContents();
                                    }
                                }
                            }
                        },
                        {
                            key: "navigateNext",
                            value: function() {
                                var t = this.Editor.BlockManager, e1 = t.currentBlock, n = t.nextContentfulBlock, o = e1.nextInput, r = this.isAtEnd, i = n;
                                if (!i && !o) {
                                    if (e1.tool.isDefault || !r) return !1;
                                    i = t.insertAtEnd();
                                }
                                return !!r && (o ? this.setToInput(o, this.positions.START) : this.setToBlock(i, this.positions.START), !0);
                            }
                        },
                        {
                            key: "navigatePrevious",
                            value: function() {
                                var t = this.Editor.BlockManager, e1 = t.currentBlock, n = t.previousContentfulBlock;
                                if (!e1) return !1;
                                var o = e1.previousInput;
                                return !(!n && !o || !this.isAtStart || (o ? this.setToInput(o, this.positions.END) : this.setToBlock(n, this.positions.END), 0));
                            }
                        },
                        {
                            key: "createShadow",
                            value: function(t) {
                                var e1 = document.createElement("span");
                                e1.classList.add(o.CSS.shadowCaret), t.insertAdjacentElement("beforeend", e1);
                            }
                        },
                        {
                            key: "restoreCaret",
                            value: function(t) {
                                var e1 = t.querySelector(".".concat(o.CSS.shadowCaret));
                                e1 && ((new c.default).expandToTag(e1), setTimeout(function() {
                                    var t = document.createRange();
                                    t.selectNode(e1), t.extractContents();
                                }, 50));
                            }
                        },
                        {
                            key: "insertContentAtCaretPosition",
                            value: function(t) {
                                var e1 = document.createDocumentFragment(), n = document.createElement("div"), o = c.default.get(), r = c.default.range;
                                n.innerHTML = t, Array.from(n.childNodes).forEach(function(t) {
                                    return e1.appendChild(t);
                                }), 0 === e1.childNodes.length && e1.appendChild(new Text);
                                var i = e1.lastChild;
                                r.deleteContents(), r.insertNode(e1);
                                var a = document.createRange();
                                a.setStart(i, i.textContent.length), o.removeAllRanges(), o.addRange(a);
                            }
                        },
                        {
                            key: "getHigherLevelSiblings",
                            value: function(t, e1) {
                                for(var n = t, o = []; n.parentNode && "true" !== n.parentNode.contentEditable;)n = n.parentNode;
                                for(var r = "left" === e1 ? "previousSibling" : "nextSibling"; n[r];)n = n[r], o.push(n);
                                return o;
                            }
                        },
                        {
                            key: "positions",
                            get: function() {
                                return {
                                    START: "start",
                                    END: "end",
                                    DEFAULT: "default"
                                };
                            }
                        },
                        {
                            key: "isAtStart",
                            get: function() {
                                var t = c.default.get(), e1 = f.default.getDeepestNode(this.Editor.BlockManager.currentBlock.currentInput), n = t.focusNode;
                                if (f.default.isNativeInput(e1)) return 0 === e1.selectionEnd;
                                if (!t.anchorNode) return !1;
                                var o = n.textContent.search(/\S/);
                                -1 === o && (o = 0);
                                var r = t.focusOffset;
                                return n.nodeType !== Node.TEXT_NODE && n.childNodes.length && (n.childNodes[r] ? (n = n.childNodes[r], r = 0) : r = (n = n.childNodes[r - 1]).textContent.length), !(!f.default.isLineBreakTag(e1) && !f.default.isEmpty(e1) || !this.getHigherLevelSiblings(n, "left").every(function(t) {
                                    var e1 = f.default.isLineBreakTag(t), n = 1 === t.children.length && f.default.isLineBreakTag(t.children[0]), o = e1 || n;
                                    return f.default.isEmpty(t) && !o;
                                }) || r !== o) || null === e1 || n === e1 && r <= o;
                            }
                        },
                        {
                            key: "isAtEnd",
                            get: function() {
                                var t = c.default.get(), e1 = t.focusNode, n = f.default.getDeepestNode(this.Editor.BlockManager.currentBlock.currentInput, !0);
                                if (f.default.isNativeInput(n)) return n.selectionEnd === n.value.length;
                                if (!t.focusNode) return !1;
                                var o = t.focusOffset;
                                if (e1.nodeType !== Node.TEXT_NODE && e1.childNodes.length && (e1.childNodes[o - 1] ? o = (e1 = e1.childNodes[o - 1]).textContent.length : (e1 = e1.childNodes[0], o = 0)), f.default.isLineBreakTag(n) || f.default.isEmpty(n)) {
                                    var r = this.getHigherLevelSiblings(e1, "right");
                                    if (r.every(function(t, e1) {
                                        return e1 === r.length - 1 && f.default.isLineBreakTag(t) || f.default.isEmpty(t) && !f.default.isLineBreakTag(t);
                                    }) && o === e1.textContent.length) return !0;
                                }
                                var i = n.textContent.replace(/\s+$/, "");
                                return e1 === n && o >= i.length;
                            }
                        }
                    ], [
                        {
                            key: "CSS",
                            get: function() {
                                return {
                                    shadowCaret: "cdx-shadow-caret"
                                };
                            }
                        }
                    ]), o;
                }(u.default);
                o.default = g, g.displayName = "Caret", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(20),
                n(21),
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(9),
                n(25),
                n(7)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c, u, f, d, p) {
                "use strict";
                var h = n(8), v = n(1);
                function g() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = v(r), i = v(i), a = v(a), s = v(s), l = v(l), c = v(c), u = v(u), f = v(f), d = v(d), p = h(p);
                var y = function(t) {
                    (0, l.default)(f, t);
                    var e1, n, o = (e1 = f, function() {
                        var t, n = (0, u.default)(e1);
                        if (g()) {
                            var o = (0, u.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, c.default)(this, t);
                    });
                    function f() {
                        var t;
                        return (0, a.default)(this, f), (t = o.apply(this, arguments)).onMouseUp = function() {
                            t.listeners.off(document, "mouseover", t.onMouseOver), t.listeners.off(document, "mouseup", t.onMouseUp);
                        }, t.onMouseOver = function(e1) {
                            var n = t.Editor, o = n.BlockManager, r = n.BlockSelection, i = o.getBlockByChildNode(e1.relatedTarget) || t.lastSelectedBlock, a = o.getBlockByChildNode(e1.target);
                            if (i && a && a !== i) {
                                if (i === t.firstSelectedBlock) return d.default.get().removeAllRanges(), i.selected = !0, a.selected = !0, void r.clearCache();
                                if (a === t.firstSelectedBlock) return i.selected = !1, a.selected = !1, void r.clearCache();
                                t.Editor.InlineToolbar.close(), t.toggleBlocksSelectedState(i, a), t.lastSelectedBlock = a;
                            }
                        }, t;
                    }
                    return (0, s.default)(f, [
                        {
                            key: "prepare",
                            value: (n = (0, i.default)(r.default.mark(function t() {
                                var e1 = this;
                                return r.default.wrap(function(t) {
                                    for(;;)switch(t.prev = t.next){
                                        case 0:
                                            this.listeners.on(document, "mousedown", function(t) {
                                                e1.enableCrossBlockSelection(t);
                                            });
                                        case 1:
                                        case "end":
                                            return t.stop();
                                    }
                                }, t, this);
                            })), function() {
                                return n.apply(this, arguments);
                            })
                        },
                        {
                            key: "watchSelection",
                            value: function(t) {
                                if (t.button === p.mouseButtons.LEFT) {
                                    var e1 = this.Editor.BlockManager;
                                    this.firstSelectedBlock = e1.getBlock(t.target), this.lastSelectedBlock = this.firstSelectedBlock, this.listeners.on(document, "mouseover", this.onMouseOver), this.listeners.on(document, "mouseup", this.onMouseUp);
                                }
                            }
                        },
                        {
                            key: "toggleBlockSelectedState",
                            value: function() {
                                var t = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0], e1 = this.Editor, n = e1.BlockManager, o = e1.BlockSelection;
                                this.lastSelectedBlock || (this.lastSelectedBlock = this.firstSelectedBlock = n.currentBlock), this.firstSelectedBlock === this.lastSelectedBlock && (this.firstSelectedBlock.selected = !0, o.clearCache(), d.default.get().removeAllRanges());
                                var r = n.blocks.indexOf(this.lastSelectedBlock) + (t ? 1 : -1), i = n.blocks[r];
                                i && (this.lastSelectedBlock.selected !== i.selected ? (i.selected = !0, o.clearCache()) : (this.lastSelectedBlock.selected = !1, o.clearCache()), this.lastSelectedBlock = i, this.Editor.InlineToolbar.close(), i.holder.scrollIntoView({
                                    block: "nearest"
                                }));
                            }
                        },
                        {
                            key: "clear",
                            value: function(t) {
                                var e1 = this.Editor, n = e1.BlockManager, o = e1.BlockSelection, r = e1.Caret, i = n.blocks.indexOf(this.firstSelectedBlock), a = n.blocks.indexOf(this.lastSelectedBlock);
                                if (o.anyBlockSelected && i > -1 && a > -1) {
                                    if (t && t instanceof KeyboardEvent) switch(t.keyCode){
                                        case p.keyCodes.DOWN:
                                        case p.keyCodes.RIGHT:
                                            r.setToBlock(n.blocks[Math.max(i, a)], r.positions.END);
                                            break;
                                        case p.keyCodes.UP:
                                        case p.keyCodes.LEFT:
                                            r.setToBlock(n.blocks[Math.min(i, a)], r.positions.START);
                                            break;
                                        default:
                                            r.setToBlock(n.blocks[Math.max(i, a)], r.positions.END);
                                    }
                                    else r.setToBlock(n.blocks[Math.max(i, a)], r.positions.END);
                                }
                                this.firstSelectedBlock = this.lastSelectedBlock = null;
                            }
                        },
                        {
                            key: "enableCrossBlockSelection",
                            value: function(t) {
                                var e1 = this.Editor.UI;
                                d.default.isCollapsed || this.Editor.BlockSelection.clearSelection(t), e1.nodes.redactor.contains(t.target) ? this.watchSelection(t) : this.Editor.BlockSelection.clearSelection(t);
                            }
                        },
                        {
                            key: "toggleBlocksSelectedState",
                            value: function(t, e1) {
                                for(var n = this.Editor, o = n.BlockManager, r = n.BlockSelection, i = o.blocks.indexOf(t), a = o.blocks.indexOf(e1), s = t.selected !== e1.selected, l = Math.min(i, a); l <= Math.max(i, a); l++){
                                    var c = o.blocks[l];
                                    c !== this.firstSelectedBlock && c !== (s ? t : e1) && (o.blocks[l].selected = !o.blocks[l].selected, r.clearCache());
                                }
                            }
                        },
                        {
                            key: "isCrossBlockSelectionStarted",
                            get: function() {
                                return !!this.firstSelectedBlock && !!this.lastSelectedBlock;
                            }
                        }
                    ]), f;
                }(f.default);
                o.default = y, y.displayName = "CrossBlockSelection", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(20),
                n(21),
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(25),
                n(9)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c, u, f, d) {
                "use strict";
                var p = n(1);
                function h() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = p(r), i = p(i), a = p(a), s = p(s), l = p(l), c = p(c), u = p(u), f = p(f);
                var v = function(t) {
                    (0, l.default)(d, t);
                    var e1, n, o = (e1 = d, function() {
                        var t, n = (0, u.default)(e1);
                        if (h()) {
                            var o = (0, u.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, c.default)(this, t);
                    });
                    function d() {
                        var t;
                        return (0, a.default)(this, d), (t = o.apply(this, arguments)).isStartedAtEditor = !1, t;
                    }
                    return (0, s.default)(d, [
                        {
                            key: "toggleReadOnly",
                            value: function(t) {
                                t ? this.disableModuleBindings() : this.enableModuleBindings();
                            }
                        },
                        {
                            key: "enableModuleBindings",
                            value: function() {
                                var t = this, e1 = this.Editor.UI;
                                this.readOnlyMutableListeners.on(e1.nodes.holder, "drop", function() {
                                    var e1 = (0, i.default)(r.default.mark(function e1(n) {
                                        return r.default.wrap(function(e1) {
                                            for(;;)switch(e1.prev = e1.next){
                                                case 0:
                                                    return e1.next = 2, t.processDrop(n);
                                                case 2:
                                                case "end":
                                                    return e1.stop();
                                            }
                                        }, e1);
                                    }));
                                    return function(t) {
                                        return e1.apply(this, arguments);
                                    };
                                }(), !0), this.readOnlyMutableListeners.on(e1.nodes.holder, "dragstart", function() {
                                    t.processDragStart();
                                }), this.readOnlyMutableListeners.on(e1.nodes.holder, "dragover", function(e1) {
                                    t.processDragOver(e1);
                                }, !0);
                            }
                        },
                        {
                            key: "disableModuleBindings",
                            value: function() {
                                this.readOnlyMutableListeners.clearAll();
                            }
                        },
                        {
                            key: "processDrop",
                            value: (n = (0, i.default)(r.default.mark(function t(e1) {
                                var n, o, i, a, s, l;
                                return r.default.wrap(function(t) {
                                    for(;;)switch(t.prev = t.next){
                                        case 0:
                                            return n = this.Editor, o = n.BlockManager, i = n.Caret, a = n.Paste, e1.preventDefault(), o.blocks.forEach(function(t) {
                                                t.dropTarget = !1;
                                            }), f.default.isAtEditor && !f.default.isCollapsed && this.isStartedAtEditor && document.execCommand("delete"), this.isStartedAtEditor = !1, (s = o.setCurrentBlockByChildNode(e1.target)) ? this.Editor.Caret.setToBlock(s, i.positions.END) : (l = o.setCurrentBlockByChildNode(o.lastBlock.holder), this.Editor.Caret.setToBlock(l, i.positions.END)), t.next = 9, a.processDataTransfer(e1.dataTransfer, !0);
                                        case 9:
                                        case "end":
                                            return t.stop();
                                    }
                                }, t, this);
                            })), function(t) {
                                return n.apply(this, arguments);
                            })
                        },
                        {
                            key: "processDragStart",
                            value: function() {
                                f.default.isAtEditor && !f.default.isCollapsed && (this.isStartedAtEditor = !0), this.Editor.InlineToolbar.close();
                            }
                        },
                        {
                            key: "processDragOver",
                            value: function(t) {
                                t.preventDefault();
                            }
                        }
                    ]), d;
                }((d = p(d)).default);
                o.default = v, v.displayName = "DragNDrop", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(9),
                n(7)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c, u) {
                "use strict";
                var f = n(8), d = n(1);
                function p() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = d(r), i = d(i), a = d(a), s = d(s), l = d(l), c = d(c), u = f(u);
                var h = function(t) {
                    (0, a.default)(o, t);
                    var e1, n = (e1 = o, function() {
                        var t, n = (0, l.default)(e1);
                        if (p()) {
                            var o = (0, l.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, s.default)(this, t);
                    });
                    function o() {
                        var t;
                        return (0, r.default)(this, o), (t = n.apply(this, arguments)).disabled = !1, t;
                    }
                    return (0, i.default)(o, [
                        {
                            key: "enable",
                            value: function() {
                                this.disabled = !1;
                            }
                        },
                        {
                            key: "disable",
                            value: function() {
                                this.disabled = !0;
                            }
                        },
                        {
                            key: "onChange",
                            value: function(t) {
                                !this.disabled && u.isFunction(this.config.onChange) && this.config.onChange(this.Editor.API.methods, t);
                            }
                        }
                    ]), o;
                }(c.default);
                o.default = h, h.displayName = "ModificationsObserver", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(42),
                n(30),
                n(20),
                n(21),
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(9),
                n(14),
                n(7),
                n(67)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c, u, f, d, p, h, v, g) {
                "use strict";
                var y = n(8), b = n(1);
                function m() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = b(r), i = b(i), a = b(a), s = b(s), l = b(l), c = b(c), u = b(u), f = b(f), d = b(d), p = b(p), h = b(h), v = y(v);
                var k = function(t) {
                    (0, u.default)(T, t);
                    var e1, n, o, p, y, b, k, x, w, S = (e1 = T, function() {
                        var t, n = (0, d.default)(e1);
                        if (m()) {
                            var o = (0, d.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, f.default)(this, t);
                    });
                    function T() {
                        var t;
                        return (0, l.default)(this, T), (t = S.apply(this, arguments)).MIME_TYPE = "application/x-editor-js", t.toolsTags = {}, t.tagsByTool = {}, t.toolsPatterns = [], t.toolsFiles = {}, t.exceptionList = [], t.processTool = function(e1) {
                            try {
                                var n = e1.create({}, {}, !1);
                                if (!1 === e1.pasteConfig) return void t.exceptionList.push(e1.name);
                                if (!v.isFunction(n.onPaste)) return;
                                t.getTagsConfig(e1), t.getFilesConfig(e1), t.getPatternsConfig(e1);
                            } catch (t1) {
                                v.log("Paste handling for \xab".concat(e1.name, "\xbb Tool hasn't been set up because of the error"), "warn", t1);
                            }
                        }, t.handlePasteEvent = function() {
                            var e1 = (0, s.default)(a.default.mark(function e1(n) {
                                var o, r, i;
                                return a.default.wrap(function(e1) {
                                    for(;;)switch(e1.prev = e1.next){
                                        case 0:
                                            if (o = t.Editor, r = o.BlockManager, i = o.Toolbar, r.currentBlock && (!t.isNativeBehaviour(n.target) || n.clipboardData.types.includes("Files"))) {
                                                e1.next = 3;
                                                break;
                                            }
                                            return e1.abrupt("return");
                                        case 3:
                                            if (!r.currentBlock || !t.exceptionList.includes(r.currentBlock.name)) {
                                                e1.next = 5;
                                                break;
                                            }
                                            return e1.abrupt("return");
                                        case 5:
                                            n.preventDefault(), t.processDataTransfer(n.clipboardData), r.clearFocused(), i.close();
                                        case 9:
                                        case "end":
                                            return e1.stop();
                                    }
                                }, e1);
                            }));
                            return function(t) {
                                return e1.apply(this, arguments);
                            };
                        }(), t;
                    }
                    return (0, c.default)(T, [
                        {
                            key: "prepare",
                            value: (w = (0, s.default)(a.default.mark(function t() {
                                return a.default.wrap(function(t) {
                                    for(;;)switch(t.prev = t.next){
                                        case 0:
                                            this.processTools();
                                        case 1:
                                        case "end":
                                            return t.stop();
                                    }
                                }, t, this);
                            })), function() {
                                return w.apply(this, arguments);
                            })
                        },
                        {
                            key: "toggleReadOnly",
                            value: function(t) {
                                t ? this.unsetCallback() : this.setCallback();
                            }
                        },
                        {
                            key: "processDataTransfer",
                            value: (x = (0, s.default)(a.default.mark(function t(e1) {
                                var n, o, r, i, s, l, c, u, f, d = arguments;
                                return a.default.wrap(function(t) {
                                    for(;;)switch(t.prev = t.next){
                                        case 0:
                                            if (n = d.length > 1 && void 0 !== d[1] && d[1], o = this.Editor.Tools, !((r = e1.types).includes ? r.includes("Files") : r.contains("Files"))) {
                                                t.next = 8;
                                                break;
                                            }
                                            return t.next = 7, this.processFiles(e1.files);
                                        case 7:
                                            return t.abrupt("return");
                                        case 8:
                                            if (i = e1.getData(this.MIME_TYPE), s = e1.getData("text/plain"), l = e1.getData("text/html"), !i) {
                                                t.next = 19;
                                                break;
                                            }
                                            return t.prev = 12, this.insertEditorJSData(JSON.parse(i)), t.abrupt("return");
                                        case 17:
                                            t.prev = 17, t.t0 = t.catch(12);
                                        case 19:
                                            if (n && s.trim() && l.trim() && (l = "<p>" + (l.trim() ? l : s) + "</p>"), c = Object.keys(this.toolsTags).reduce(function(t, e1) {
                                                return t[e1.toLowerCase()] = !0, t;
                                            }, {}), u = Object.assign({}, c, o.getAllInlineToolsSanitizeConfig(), {
                                                br: {}
                                            }), (f = (0, g.clean)(l, u)).trim() && f.trim() !== s && h.default.isHTMLString(f)) {
                                                t.next = 28;
                                                break;
                                            }
                                            return t.next = 26, this.processText(s);
                                        case 26:
                                            t.next = 30;
                                            break;
                                        case 28:
                                            return t.next = 30, this.processText(f, !0);
                                        case 30:
                                        case "end":
                                            return t.stop();
                                    }
                                }, t, this, [
                                    [
                                        12,
                                        17
                                    ]
                                ]);
                            })), function(t) {
                                return x.apply(this, arguments);
                            })
                        },
                        {
                            key: "processText",
                            value: (k = (0, s.default)(a.default.mark(function t(e1) {
                                var n, o, r, i, l, c, u, f = this, d = arguments;
                                return a.default.wrap(function(t) {
                                    for(;;)switch(t.prev = t.next){
                                        case 0:
                                            if (n = d.length > 1 && void 0 !== d[1] && d[1], o = this.Editor, r = o.Caret, i = o.BlockManager, (l = n ? this.processHTML(e1) : this.processPlain(e1)).length) {
                                                t.next = 5;
                                                break;
                                            }
                                            return t.abrupt("return");
                                        case 5:
                                            if (1 !== l.length) {
                                                t.next = 8;
                                                break;
                                            }
                                            return l[0].isBlock ? this.processSingleBlock(l.pop()) : this.processInlinePaste(l.pop()), t.abrupt("return");
                                        case 8:
                                            c = i.currentBlock && i.currentBlock.tool.isDefault, u = c && i.currentBlock.isEmpty, l.map(function() {
                                                var t = (0, s.default)(a.default.mark(function t(e1, n) {
                                                    return a.default.wrap(function(t) {
                                                        for(;;)switch(t.prev = t.next){
                                                            case 0:
                                                                return t.abrupt("return", f.insertBlock(e1, 0 === n && u));
                                                            case 1:
                                                            case "end":
                                                                return t.stop();
                                                        }
                                                    }, t);
                                                }));
                                                return function(e1, n) {
                                                    return t.apply(this, arguments);
                                                };
                                            }()), i.currentBlock && r.setToBlock(i.currentBlock, r.positions.END);
                                        case 12:
                                        case "end":
                                            return t.stop();
                                    }
                                }, t, this);
                            })), function(t) {
                                return k.apply(this, arguments);
                            })
                        },
                        {
                            key: "setCallback",
                            value: function() {
                                this.listeners.on(this.Editor.UI.nodes.holder, "paste", this.handlePasteEvent);
                            }
                        },
                        {
                            key: "unsetCallback",
                            value: function() {
                                this.listeners.off(this.Editor.UI.nodes.holder, "paste", this.handlePasteEvent);
                            }
                        },
                        {
                            key: "processTools",
                            value: function() {
                                var t = this.Editor.Tools.blockTools;
                                Array.from(t.values()).forEach(this.processTool);
                            }
                        },
                        {
                            key: "getTagsConfig",
                            value: function(t) {
                                var e1 = this, n = t.pasteConfig.tags || [];
                                n.forEach(function(n) {
                                    Object.prototype.hasOwnProperty.call(e1.toolsTags, n) ? v.log("Paste handler for \xab".concat(t.name, "\xbb Tool on \xab").concat(n, "\xbb tag is skipped ") + "because it is already used by \xab".concat(e1.toolsTags[n].tool.name, "\xbb Tool."), "warn") : e1.toolsTags[n.toUpperCase()] = {
                                        tool: t
                                    };
                                }), this.tagsByTool[t.name] = n.map(function(t) {
                                    return t.toUpperCase();
                                });
                            }
                        },
                        {
                            key: "getFilesConfig",
                            value: function(t) {
                                var e1 = t.pasteConfig.files, n = void 0 === e1 ? {} : e1, o = n.extensions, r = n.mimeTypes;
                                (o || r) && (o && !Array.isArray(o) && (v.log("\xabextensions\xbb property of the onDrop config for \xab".concat(t.name, "\xbb Tool should be an array")), o = []), r && !Array.isArray(r) && (v.log("\xabmimeTypes\xbb property of the onDrop config for \xab".concat(t.name, "\xbb Tool should be an array")), r = []), r && (r = r.filter(function(e1) {
                                    return !!v.isValidMimeType(e1) || (v.log("MIME type value \xab".concat(e1, "\xbb for the \xab").concat(t.name, "\xbb Tool is not a valid MIME type"), "warn"), !1);
                                })), this.toolsFiles[t.name] = {
                                    extensions: o || [],
                                    mimeTypes: r || []
                                });
                            }
                        },
                        {
                            key: "getPatternsConfig",
                            value: function(t) {
                                var e1 = this;
                                t.pasteConfig.patterns && !v.isEmpty(t.pasteConfig.patterns) && Object.entries(t.pasteConfig.patterns).forEach(function(n) {
                                    var o = (0, i.default)(n, 2), r = o[0], a = o[1];
                                    a instanceof RegExp || v.log("Pattern ".concat(a, " for \xab").concat(t.name, "\xbb Tool is skipped because it should be a Regexp instance."), "warn"), e1.toolsPatterns.push({
                                        key: r,
                                        pattern: a,
                                        tool: t
                                    });
                                });
                            }
                        },
                        {
                            key: "isNativeBehaviour",
                            value: function(t) {
                                return h.default.isNativeInput(t);
                            }
                        },
                        {
                            key: "processFiles",
                            value: (b = (0, s.default)(a.default.mark(function t(e1) {
                                var n, o, r, i, s = this;
                                return a.default.wrap(function(t) {
                                    for(;;)switch(t.prev = t.next){
                                        case 0:
                                            return n = this.Editor.BlockManager, t.next = 3, Promise.all(Array.from(e1).map(function(t) {
                                                return s.processFile(t);
                                            }));
                                        case 3:
                                            o = (o = t.sent).filter(function(t) {
                                                return !!t;
                                            }), r = n.currentBlock.tool.isDefault, i = r && n.currentBlock.isEmpty, o.forEach(function(t, e1) {
                                                n.paste(t.type, t.event, 0 === e1 && i);
                                            });
                                        case 8:
                                        case "end":
                                            return t.stop();
                                    }
                                }, t, this);
                            })), function(t) {
                                return b.apply(this, arguments);
                            })
                        },
                        {
                            key: "processFile",
                            value: (y = (0, s.default)(a.default.mark(function t(e1) {
                                var n, o, r, s, l;
                                return a.default.wrap(function(t) {
                                    for(;;)switch(t.prev = t.next){
                                        case 0:
                                            if (n = v.getFileExtension(e1), o = Object.entries(this.toolsFiles).find(function(t) {
                                                var o = (0, i.default)(t, 2), r = (o[0], o[1]), a = r.mimeTypes, s = r.extensions, l = e1.type.split("/"), c = (0, i.default)(l, 2), u = c[0], f = c[1], d = s.find(function(t) {
                                                    return t.toLowerCase() === n.toLowerCase();
                                                }), p = a.find(function(t) {
                                                    var e1 = t.split("/"), n = (0, i.default)(e1, 2), o = n[0], r = n[1];
                                                    return o === u && (r === f || "*" === r);
                                                });
                                                return !!d || !!p;
                                            })) {
                                                t.next = 4;
                                                break;
                                            }
                                            return t.abrupt("return");
                                        case 4:
                                            return r = (0, i.default)(o, 1), s = r[0], l = this.composePasteEvent("file", {
                                                file: e1
                                            }), t.abrupt("return", {
                                                event: l,
                                                type: s
                                            });
                                        case 7:
                                        case "end":
                                            return t.stop();
                                    }
                                }, t, this);
                            })), function(t) {
                                return y.apply(this, arguments);
                            })
                        },
                        {
                            key: "processHTML",
                            value: function(t) {
                                var e1 = this, n = this.Editor.Tools, o = h.default.make("DIV");
                                return o.innerHTML = t, this.getNodes(o).map(function(t) {
                                    var o, r = n.defaultTool, i = !1;
                                    switch(t.nodeType){
                                        case Node.DOCUMENT_FRAGMENT_NODE:
                                            (o = h.default.make("div")).appendChild(t);
                                            break;
                                        case Node.ELEMENT_NODE:
                                            o = t, i = !0, e1.toolsTags[o.tagName] && (r = e1.toolsTags[o.tagName].tool);
                                    }
                                    var a = r.pasteConfig.tags.reduce(function(t, e1) {
                                        return t[e1.toLowerCase()] = {}, t;
                                    }, {}), s = Object.assign({}, a, r.baseSanitizeConfig);
                                    o.innerHTML = (0, g.clean)(o.innerHTML, s);
                                    var l = e1.composePasteEvent("tag", {
                                        data: o
                                    });
                                    return {
                                        content: o,
                                        isBlock: i,
                                        tool: r.name,
                                        event: l
                                    };
                                }).filter(function(t) {
                                    return !h.default.isNodeEmpty(t.content) || h.default.isSingleTag(t.content);
                                });
                            }
                        },
                        {
                            key: "processPlain",
                            value: function(t) {
                                var e1 = this, n = this.config.defaultBlock;
                                if (!t) return [];
                                var o = n;
                                return t.split(/\r?\n/).filter(function(t) {
                                    return t.trim();
                                }).map(function(t) {
                                    var n = h.default.make("div");
                                    n.textContent = t;
                                    var r = e1.composePasteEvent("tag", {
                                        data: n
                                    });
                                    return {
                                        content: n,
                                        tool: o,
                                        isBlock: !1,
                                        event: r
                                    };
                                });
                            }
                        },
                        {
                            key: "processSingleBlock",
                            value: (p = (0, s.default)(a.default.mark(function t(e1) {
                                var n, o, r, i;
                                return a.default.wrap(function(t) {
                                    for(;;)switch(t.prev = t.next){
                                        case 0:
                                            if (n = this.Editor, o = n.Caret, r = n.BlockManager, (i = r.currentBlock) && e1.tool === i.name && h.default.containsOnlyInlineElements(e1.content.innerHTML)) {
                                                t.next = 5;
                                                break;
                                            }
                                            return this.insertBlock(e1, (null == i ? void 0 : i.tool.isDefault) && i.isEmpty), t.abrupt("return");
                                        case 5:
                                            o.insertContentAtCaretPosition(e1.content.innerHTML);
                                        case 6:
                                        case "end":
                                            return t.stop();
                                    }
                                }, t, this);
                            })), function(t) {
                                return p.apply(this, arguments);
                            })
                        },
                        {
                            key: "processInlinePaste",
                            value: (o = (0, s.default)(a.default.mark(function t(e1) {
                                var n, o, r, i, s, l, c, u;
                                return a.default.wrap(function(t) {
                                    for(;;)switch(t.prev = t.next){
                                        case 0:
                                            if (n = this.Editor, o = n.BlockManager, r = n.Caret, i = e1.content, !(o.currentBlock && o.currentBlock.tool.isDefault && i.textContent.length < T.PATTERN_PROCESSING_MAX_LENGTH)) {
                                                t.next = 12;
                                                break;
                                            }
                                            return t.next = 6, this.processPattern(i.textContent);
                                        case 6:
                                            if (!(s = t.sent)) {
                                                t.next = 12;
                                                break;
                                            }
                                            return l = o.currentBlock && o.currentBlock.tool.isDefault && o.currentBlock.isEmpty, c = o.paste(s.tool, s.event, l), r.setToBlock(c, r.positions.END), t.abrupt("return");
                                        case 12:
                                            o.currentBlock && o.currentBlock.currentInput ? (u = o.currentBlock.tool.baseSanitizeConfig, document.execCommand("insertHTML", !1, (0, g.clean)(i.innerHTML, u))) : this.insertBlock(e1);
                                        case 13:
                                        case "end":
                                            return t.stop();
                                    }
                                }, t, this);
                            })), function(t) {
                                return o.apply(this, arguments);
                            })
                        },
                        {
                            key: "processPattern",
                            value: (n = (0, s.default)(a.default.mark(function t(e1) {
                                var n, o;
                                return a.default.wrap(function(t) {
                                    for(;;)switch(t.prev = t.next){
                                        case 0:
                                            if (n = this.toolsPatterns.find(function(t) {
                                                var n = t.pattern.exec(e1);
                                                return !!n && e1 === n.shift();
                                            })) {
                                                t.next = 3;
                                                break;
                                            }
                                            return t.abrupt("return");
                                        case 3:
                                            return o = this.composePasteEvent("pattern", {
                                                key: n.key,
                                                data: e1
                                            }), t.abrupt("return", {
                                                event: o,
                                                tool: n.tool.name
                                            });
                                        case 5:
                                        case "end":
                                            return t.stop();
                                    }
                                }, t, this);
                            })), function(t) {
                                return n.apply(this, arguments);
                            })
                        },
                        {
                            key: "insertBlock",
                            value: function(t) {
                                var e1, n = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], o = this.Editor, r = o.BlockManager, i = o.Caret, a = r.currentBlock;
                                if (n && a && a.isEmpty) return e1 = r.paste(t.tool, t.event, !0), void i.setToBlock(e1, i.positions.END);
                                e1 = r.paste(t.tool, t.event), i.setToBlock(e1, i.positions.END);
                            }
                        },
                        {
                            key: "insertEditorJSData",
                            value: function(t) {
                                var e1 = this.Editor, n = e1.BlockManager, o = e1.Caret, r = e1.Tools;
                                (0, g.sanitizeBlocks)(t, function(t) {
                                    return r.blockTools.get(t).sanitizeConfig;
                                }).forEach(function(t, e1) {
                                    var r = t.tool, i = t.data, a = !1;
                                    0 === e1 && (a = n.currentBlock && n.currentBlock.tool.isDefault && n.currentBlock.isEmpty);
                                    var s = n.insert({
                                        tool: r,
                                        data: i,
                                        replace: a
                                    });
                                    o.setToBlock(s, o.positions.END);
                                });
                            }
                        },
                        {
                            key: "processElementNode",
                            value: function(t, e1, n) {
                                var o = Object.keys(this.toolsTags), i = t, a = (this.toolsTags[i.tagName] || {}).tool, s = this.tagsByTool[null == a ? void 0 : a.name] || [], l = o.includes(i.tagName), c = h.default.blockElements.includes(i.tagName.toLowerCase()), u = Array.from(i.children).some(function(t) {
                                    var e1 = t.tagName;
                                    return o.includes(e1) && !s.includes(e1);
                                }), f = Array.from(i.children).some(function(t) {
                                    var e1 = t.tagName;
                                    return h.default.blockElements.includes(e1.toLowerCase());
                                });
                                return c || l || u ? l && !u || c && !f && !u ? [].concat((0, r.default)(e1), [
                                    n,
                                    i
                                ]) : void 0 : (n.appendChild(i), [].concat((0, r.default)(e1), [
                                    n
                                ]));
                            }
                        },
                        {
                            key: "getNodes",
                            value: function(t) {
                                var e1, n = this;
                                return Array.from(t.childNodes).reduce(function t(o, i) {
                                    if (h.default.isEmpty(i) && !h.default.isSingleTag(i)) return o;
                                    var a = o[o.length - 1], s = new DocumentFragment;
                                    switch(a && h.default.isFragment(a) && (s = o.pop()), i.nodeType){
                                        case Node.ELEMENT_NODE:
                                            if (e1 = n.processElementNode(i, o, s)) return e1;
                                            break;
                                        case Node.TEXT_NODE:
                                            return s.appendChild(i), [].concat((0, r.default)(o), [
                                                s
                                            ]);
                                        default:
                                            return [].concat((0, r.default)(o), [
                                                s
                                            ]);
                                    }
                                    return [].concat((0, r.default)(o), (0, r.default)(Array.from(i.childNodes).reduce(t, [])));
                                }, []);
                            }
                        },
                        {
                            key: "composePasteEvent",
                            value: function(t, e1) {
                                return new CustomEvent(t, {
                                    detail: e1
                                });
                            }
                        }
                    ]), T;
                }(p.default);
                o.default = k, k.displayName = "Paste", k.PATTERN_PROCESSING_MAX_LENGTH = 450, t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(20),
                n(30),
                n(21),
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(9),
                n(151)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c, u, f, d, p) {
                "use strict";
                var h = n(1);
                function v() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = h(r), i = h(i), a = h(a), s = h(s), l = h(l), c = h(c), u = h(u), f = h(f);
                var g = function(t) {
                    (0, c.default)(h, t);
                    var e1, n, o, d = (e1 = h, function() {
                        var t, n = (0, f.default)(e1);
                        if (v()) {
                            var o = (0, f.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, u.default)(this, t);
                    });
                    function h() {
                        var t;
                        return (0, s.default)(this, h), (t = d.apply(this, arguments)).toolsDontSupportReadOnly = [], t.readOnlyEnabled = !1, t;
                    }
                    return (0, l.default)(h, [
                        {
                            key: "prepare",
                            value: (o = (0, a.default)(r.default.mark(function t() {
                                var e1, n, o;
                                return r.default.wrap(function(t) {
                                    for(;;)switch(t.prev = t.next){
                                        case 0:
                                            e1 = this.Editor.Tools, n = e1.blockTools, o = [], Array.from(n.entries()).forEach(function(t) {
                                                var e1 = (0, i.default)(t, 2), n = e1[0];
                                                e1[1].isReadOnlySupported || o.push(n);
                                            }), this.toolsDontSupportReadOnly = o, this.config.readOnly && o.length > 0 && this.throwCriticalError(), this.toggle(this.config.readOnly);
                                        case 7:
                                        case "end":
                                            return t.stop();
                                    }
                                }, t, this);
                            })), function() {
                                return o.apply(this, arguments);
                            })
                        },
                        {
                            key: "toggle",
                            value: (n = (0, a.default)(r.default.mark(function t() {
                                var e1, n, o, i, a = arguments;
                                return r.default.wrap(function(t) {
                                    for(;;)switch(t.prev = t.next){
                                        case 0:
                                            (e1 = a.length > 0 && void 0 !== a[0] ? a[0] : !this.readOnlyEnabled) && this.toolsDontSupportReadOnly.length > 0 && this.throwCriticalError(), n = this.readOnlyEnabled, this.readOnlyEnabled = e1, t.t0 = r.default.keys(this.Editor);
                                        case 5:
                                            if ((t.t1 = t.t0()).done) {
                                                t.next = 12;
                                                break;
                                            }
                                            if (o = t.t1.value, this.Editor[o].toggleReadOnly) {
                                                t.next = 9;
                                                break;
                                            }
                                            return t.abrupt("continue", 5);
                                        case 9:
                                            this.Editor[o].toggleReadOnly(e1), t.next = 5;
                                            break;
                                        case 12:
                                            if (n !== e1) {
                                                t.next = 14;
                                                break;
                                            }
                                            return t.abrupt("return", this.readOnlyEnabled);
                                        case 14:
                                            return t.next = 16, this.Editor.Saver.save();
                                        case 16:
                                            return i = t.sent, t.next = 19, this.Editor.BlockManager.clear();
                                        case 19:
                                            return t.next = 21, this.Editor.Renderer.render(i.blocks);
                                        case 21:
                                            return t.abrupt("return", this.readOnlyEnabled);
                                        case 22:
                                        case "end":
                                            return t.stop();
                                    }
                                }, t, this);
                            })), function() {
                                return n.apply(this, arguments);
                            })
                        },
                        {
                            key: "throwCriticalError",
                            value: function() {
                                throw new p.CriticalError("To enable read-only mode all connected tools should support it. Tools ".concat(this.toolsDontSupportReadOnly.join(", "), " don't support read-only mode."));
                            }
                        },
                        {
                            key: "isEnabled",
                            get: function() {
                                return this.readOnlyEnabled;
                            }
                        }
                    ]), h;
                }((d = h(d)).default);
                o.default = g, g.displayName = "ReadOnly", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(9),
                n(14),
                n(25),
                n(61),
                n(7)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c, u, f, d, p) {
                "use strict";
                var h = n(8), v = n(1);
                function g(t) {
                    if ("undefined" == typeof Symbol || null == t[Symbol.iterator]) {
                        if (Array.isArray(t) || (t = function(t, e1) {
                            if (t) {
                                if ("string" == typeof t) return y(t, e1);
                                var n = Object.prototype.toString.call(t).slice(8, -1);
                                return "Object" === n && t.constructor && (n = t.constructor.name), "Map" === n || "Set" === n ? Array.from(n) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? y(t, e1) : void 0;
                            }
                        }(t))) {
                            var e1 = 0, n = function() {};
                            return {
                                s: n,
                                n: function() {
                                    return e1 >= t.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: t[e1++]
                                    };
                                },
                                e: function(t) {
                                    throw t;
                                },
                                f: n
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var o, r, i = !0, a = !1;
                    return {
                        s: function() {
                            o = t[Symbol.iterator]();
                        },
                        n: function() {
                            var t = o.next();
                            return i = t.done, t;
                        },
                        e: function(t) {
                            a = !0, r = t;
                        },
                        f: function() {
                            try {
                                i || null == o.return || o.return();
                            } finally{
                                if (a) throw r;
                            }
                        }
                    };
                }
                function y(t, e1) {
                    (null == e1 || e1 > t.length) && (e1 = t.length);
                    for(var n = 0, o = new Array(e1); n < e1; n++)o[n] = t[n];
                    return o;
                }
                function b() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = v(r), i = v(i), a = v(a), s = v(s), l = v(l), c = v(c), u = v(u), f = v(f), d = v(d), p = h(p);
                var m = function(t) {
                    (0, a.default)(o, t);
                    var e1, n = (e1 = o, function() {
                        var t, n = (0, l.default)(e1);
                        if (b()) {
                            var o = (0, l.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, s.default)(this, t);
                    });
                    function o() {
                        var t;
                        return (0, r.default)(this, o), (t = n.apply(this, arguments)).isRectSelectionActivated = !1, t.SCROLL_SPEED = 3, t.HEIGHT_OF_SCROLL_ZONE = 40, t.BOTTOM_SCROLL_ZONE = 1, t.TOP_SCROLL_ZONE = 2, t.MAIN_MOUSE_BUTTON = 0, t.mousedown = !1, t.isScrolling = !1, t.inScrollZone = null, t.startX = 0, t.startY = 0, t.mouseX = 0, t.mouseY = 0, t.stackOfSelected = [], t.listenerIds = [], t;
                    }
                    return (0, i.default)(o, [
                        {
                            key: "prepare",
                            value: function() {
                                this.enableModuleBindings();
                            }
                        },
                        {
                            key: "startSelection",
                            value: function(t, e1) {
                                var n = document.elementFromPoint(t - window.pageXOffset, e1 - window.pageYOffset);
                                n.closest(".".concat(this.Editor.Toolbar.CSS.toolbar)) || (this.Editor.BlockSelection.allBlocksSelected = !1, this.clearSelection(), this.stackOfSelected = []);
                                var o = [
                                    ".".concat(d.default.CSS.content),
                                    ".".concat(this.Editor.Toolbar.CSS.toolbar),
                                    ".".concat(this.Editor.InlineToolbar.CSS.inlineToolbar)
                                ], r = n.closest("." + this.Editor.UI.CSS.editorWrapper), i = o.some(function(t) {
                                    return !!n.closest(t);
                                });
                                r && !i && (this.mousedown = !0, this.startX = t, this.startY = e1);
                            }
                        },
                        {
                            key: "endSelection",
                            value: function() {
                                this.mousedown = !1, this.startX = 0, this.startY = 0, this.overlayRectangle.style.display = "none";
                            }
                        },
                        {
                            key: "isRectActivated",
                            value: function() {
                                return this.isRectSelectionActivated;
                            }
                        },
                        {
                            key: "clearSelection",
                            value: function() {
                                this.isRectSelectionActivated = !1;
                            }
                        },
                        {
                            key: "enableModuleBindings",
                            value: function() {
                                var t = this, e1 = this.genHTML().container;
                                this.listeners.on(e1, "mousedown", function(e1) {
                                    t.processMouseDown(e1);
                                }, !1), this.listeners.on(document.body, "mousemove", p.throttle(function(e1) {
                                    t.processMouseMove(e1);
                                }, 10), {
                                    passive: !0
                                }), this.listeners.on(document.body, "mouseleave", function() {
                                    t.processMouseLeave();
                                }), this.listeners.on(window, "scroll", p.throttle(function(e1) {
                                    t.processScroll(e1);
                                }, 10), {
                                    passive: !0
                                }), this.listeners.on(document.body, "mouseup", function() {
                                    t.processMouseUp();
                                }, !1);
                            }
                        },
                        {
                            key: "processMouseDown",
                            value: function(t) {
                                t.button === this.MAIN_MOUSE_BUTTON && (null !== t.target.closest(u.default.allInputsSelector) || this.startSelection(t.pageX, t.pageY));
                            }
                        },
                        {
                            key: "processMouseMove",
                            value: function(t) {
                                this.changingRectangle(t), this.scrollByZones(t.clientY);
                            }
                        },
                        {
                            key: "processMouseLeave",
                            value: function() {
                                this.clearSelection(), this.endSelection();
                            }
                        },
                        {
                            key: "processScroll",
                            value: function(t) {
                                this.changingRectangle(t);
                            }
                        },
                        {
                            key: "processMouseUp",
                            value: function() {
                                this.clearSelection(), this.endSelection();
                            }
                        },
                        {
                            key: "scrollByZones",
                            value: function(t) {
                                this.inScrollZone = null, t <= this.HEIGHT_OF_SCROLL_ZONE && (this.inScrollZone = this.TOP_SCROLL_ZONE), document.documentElement.clientHeight - t <= this.HEIGHT_OF_SCROLL_ZONE && (this.inScrollZone = this.BOTTOM_SCROLL_ZONE), this.inScrollZone ? this.isScrolling || (this.scrollVertical(this.inScrollZone === this.TOP_SCROLL_ZONE ? -this.SCROLL_SPEED : this.SCROLL_SPEED), this.isScrolling = !0) : this.isScrolling = !1;
                            }
                        },
                        {
                            key: "genHTML",
                            value: function() {
                                var t = this.Editor.UI, e1 = t.nodes.holder.querySelector("." + t.CSS.editorWrapper), n = u.default.make("div", o.CSS.overlay, {}), r = u.default.make("div", o.CSS.overlayContainer, {}), i = u.default.make("div", o.CSS.rect, {});
                                return r.appendChild(i), n.appendChild(r), e1.appendChild(n), this.overlayRectangle = i, {
                                    container: e1,
                                    overlay: n
                                };
                            }
                        },
                        {
                            key: "scrollVertical",
                            value: function(t) {
                                var e1 = this;
                                if (this.inScrollZone && this.mousedown) {
                                    var n = window.pageYOffset;
                                    window.scrollBy(0, t), this.mouseY += window.pageYOffset - n, setTimeout(function() {
                                        e1.scrollVertical(t);
                                    }, 0);
                                }
                            }
                        },
                        {
                            key: "changingRectangle",
                            value: function(t) {
                                if (this.mousedown) {
                                    void 0 !== t.pageY && (this.mouseX = t.pageX, this.mouseY = t.pageY);
                                    var e1 = this.genInfoForMouseSelection(), n = e1.rightPos, o = e1.leftPos, r = e1.index, i = this.startX > n && this.mouseX > n, a = this.startX < o && this.mouseX < o;
                                    this.rectCrossesBlocks = !(i || a), this.isRectSelectionActivated || (this.rectCrossesBlocks = !1, this.isRectSelectionActivated = !0, this.shrinkRectangleToPoint(), this.overlayRectangle.style.display = "block"), this.updateRectangleSize(), this.Editor.Toolbar.close(), void 0 !== r && (this.trySelectNextBlock(r), this.inverseSelection(), f.default.get().removeAllRanges());
                                }
                            }
                        },
                        {
                            key: "shrinkRectangleToPoint",
                            value: function() {
                                this.overlayRectangle.style.left = "".concat(this.startX - window.pageXOffset, "px"), this.overlayRectangle.style.top = "".concat(this.startY - window.pageYOffset, "px"), this.overlayRectangle.style.bottom = "calc(100% - ".concat(this.startY - window.pageYOffset, "px"), this.overlayRectangle.style.right = "calc(100% - ".concat(this.startX - window.pageXOffset, "px");
                            }
                        },
                        {
                            key: "inverseSelection",
                            value: function() {
                                var t = this.Editor.BlockManager.getBlockByIndex(this.stackOfSelected[0]).selected;
                                if (this.rectCrossesBlocks && !t) {
                                    var e1, n = g(this.stackOfSelected);
                                    try {
                                        for(n.s(); !(e1 = n.n()).done;){
                                            var o = e1.value;
                                            this.Editor.BlockSelection.selectBlockByIndex(o);
                                        }
                                    } catch (t1) {
                                        n.e(t1);
                                    } finally{
                                        n.f();
                                    }
                                }
                                if (!this.rectCrossesBlocks && t) {
                                    var r, i = g(this.stackOfSelected);
                                    try {
                                        for(i.s(); !(r = i.n()).done;){
                                            var a = r.value;
                                            this.Editor.BlockSelection.unSelectBlockByIndex(a);
                                        }
                                    } catch (t2) {
                                        i.e(t2);
                                    } finally{
                                        i.f();
                                    }
                                }
                            }
                        },
                        {
                            key: "updateRectangleSize",
                            value: function() {
                                this.mouseY >= this.startY ? (this.overlayRectangle.style.top = "".concat(this.startY - window.pageYOffset, "px"), this.overlayRectangle.style.bottom = "calc(100% - ".concat(this.mouseY - window.pageYOffset, "px")) : (this.overlayRectangle.style.bottom = "calc(100% - ".concat(this.startY - window.pageYOffset, "px"), this.overlayRectangle.style.top = "".concat(this.mouseY - window.pageYOffset, "px")), this.mouseX >= this.startX ? (this.overlayRectangle.style.left = "".concat(this.startX - window.pageXOffset, "px"), this.overlayRectangle.style.right = "calc(100% - ".concat(this.mouseX - window.pageXOffset, "px")) : (this.overlayRectangle.style.right = "calc(100% - ".concat(this.startX - window.pageXOffset, "px"), this.overlayRectangle.style.left = "".concat(this.mouseX - window.pageXOffset, "px"));
                            }
                        },
                        {
                            key: "genInfoForMouseSelection",
                            value: function() {
                                var t, e1 = document.body.offsetWidth / 2, n = this.mouseY - window.pageYOffset, o = document.elementFromPoint(e1, n), r = this.Editor.BlockManager.getBlockByChildNode(o);
                                void 0 !== r && (t = this.Editor.BlockManager.blocks.findIndex(function(t) {
                                    return t.holder === r.holder;
                                }));
                                var i = this.Editor.BlockManager.lastBlock.holder.querySelector("." + d.default.CSS.content), a = Number.parseInt(window.getComputedStyle(i).width, 10) / 2;
                                return {
                                    index: t,
                                    leftPos: e1 - a,
                                    rightPos: e1 + a
                                };
                            }
                        },
                        {
                            key: "addBlockInSelection",
                            value: function(t) {
                                this.rectCrossesBlocks && this.Editor.BlockSelection.selectBlockByIndex(t), this.stackOfSelected.push(t);
                            }
                        },
                        {
                            key: "trySelectNextBlock",
                            value: function(t) {
                                var e1 = this, n = this.stackOfSelected[this.stackOfSelected.length - 1] === t, o = this.stackOfSelected.length;
                                if (!n) {
                                    var r = this.stackOfSelected[o - 1] - this.stackOfSelected[o - 2] > 0, i = 0;
                                    o > 1 && (i = r ? 1 : -1);
                                    var a = t > this.stackOfSelected[o - 1] && 1 === i, s = t < this.stackOfSelected[o - 1] && -1 === i, l = !(a || s || 0 === i);
                                    if (l || !(t > this.stackOfSelected[o - 1] || void 0 === this.stackOfSelected[o - 1])) {
                                        if (!l && t < this.stackOfSelected[o - 1]) for(var c = this.stackOfSelected[o - 1] - 1; c >= t; c--)this.addBlockInSelection(c);
                                        else if (l) {
                                            var u, f = o - 1;
                                            for(u = t > this.stackOfSelected[o - 1] ? function() {
                                                return t > e1.stackOfSelected[f];
                                            } : function() {
                                                return t < e1.stackOfSelected[f];
                                            }; u();)this.rectCrossesBlocks && this.Editor.BlockSelection.unSelectBlockByIndex(this.stackOfSelected[f]), this.stackOfSelected.pop(), f--;
                                        }
                                    } else for(var d = this.stackOfSelected[o - 1] + 1 || t; d <= t; d++)this.addBlockInSelection(d);
                                }
                            }
                        }
                    ], [
                        {
                            key: "CSS",
                            get: function() {
                                return {
                                    overlay: "codex-editor-overlay",
                                    overlayContainer: "codex-editor-overlay__container",
                                    rect: "codex-editor-overlay__rectangle",
                                    topScrollZone: "codex-editor-overlay__scroll-zone--top",
                                    bottomScrollZone: "codex-editor-overlay__scroll-zone--bottom"
                                };
                            }
                        }
                    ]), o;
                }(c.default);
                o.default = m, m.displayName = "RectangleSelection", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(20),
                n(21),
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(9),
                n(7)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c, u, f, d) {
                "use strict";
                var p = n(8), h = n(1);
                function v() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = h(r), i = h(i), a = h(a), s = h(s), l = h(l), c = h(c), u = h(u), f = h(f), d = p(d);
                var g = function(t) {
                    (0, l.default)(p, t);
                    var e1, n, o, f = (e1 = p, function() {
                        var t, n = (0, u.default)(e1);
                        if (v()) {
                            var o = (0, u.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, c.default)(this, t);
                    });
                    function p() {
                        return (0, a.default)(this, p), f.apply(this, arguments);
                    }
                    return (0, s.default)(p, [
                        {
                            key: "render",
                            value: (o = (0, i.default)(r.default.mark(function t(e1) {
                                var n, o, i = this;
                                return r.default.wrap(function(t) {
                                    for(;;)switch(t.prev = t.next){
                                        case 0:
                                            return n = e1.map(function(t) {
                                                return {
                                                    function: function() {
                                                        return i.insertBlock(t);
                                                    }
                                                };
                                            }), this.Editor.ModificationsObserver.disable(), t.next = 4, d.sequence(n);
                                        case 4:
                                            return o = t.sent, this.Editor.ModificationsObserver.enable(), this.Editor.UI.checkEmptiness(), t.abrupt("return", o);
                                        case 8:
                                        case "end":
                                            return t.stop();
                                    }
                                }, t, this);
                            })), function(t) {
                                return o.apply(this, arguments);
                            })
                        },
                        {
                            key: "insertBlock",
                            value: (n = (0, i.default)(r.default.mark(function t(e1) {
                                var n, o, i, a, s, l, c, u, f, p, h;
                                return r.default.wrap(function(t) {
                                    for(;;)switch(t.prev = t.next){
                                        case 0:
                                            if (o = this.Editor, i = o.Tools, a = o.BlockManager, s = e1.type, l = e1.data, c = e1.tunes, u = e1.id, !i.available.has(s)) {
                                                t.next = 13;
                                                break;
                                            }
                                            t.prev = 3, a.insert({
                                                id: u,
                                                tool: s,
                                                data: l,
                                                tunes: c
                                            }), t.next = 11;
                                            break;
                                        case 7:
                                            throw t.prev = 7, t.t0 = t.catch(3), d.log("Block \xab".concat(s, "\xbb skipped because of plugins error"), "warn", l), Error(t.t0);
                                        case 11:
                                            t.next = 18;
                                            break;
                                        case 13:
                                            f = {
                                                savedData: {
                                                    id: u,
                                                    type: s,
                                                    data: l
                                                },
                                                title: s
                                            }, i.unavailable.has(s) && (p = i.unavailable.get(s).toolbox, h = null === (n = p[0]) || void 0 === n ? void 0 : n.title, f.title = h || f.title), a.insert({
                                                id: u,
                                                tool: i.stubTool,
                                                data: f
                                            }).stretched = !0, d.log("Tool \xab".concat(s, "\xbb is not found. Check 'tools' property at your initial Editor.js config."), "warn");
                                        case 18:
                                        case "end":
                                            return t.stop();
                                    }
                                }, t, this, [
                                    [
                                        3,
                                        7
                                    ]
                                ]);
                            })), function(t) {
                                return n.apply(this, arguments);
                            })
                        }
                    ]), p;
                }(f.default);
                o.default = g, g.displayName = "Renderer", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(20),
                n(21),
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(9),
                n(7),
                n(67)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c, u, f, d, p) {
                "use strict";
                var h = n(8), v = n(1);
                function g() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = v(r), i = v(i), a = v(a), s = v(s), l = v(l), c = v(c), u = v(u), f = v(f), d = h(d);
                var y = function(t) {
                    (0, l.default)(h, t);
                    var e1, n, o, f = (e1 = h, function() {
                        var t, n = (0, u.default)(e1);
                        if (g()) {
                            var o = (0, u.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, c.default)(this, t);
                    });
                    function h() {
                        return (0, a.default)(this, h), f.apply(this, arguments);
                    }
                    return (0, s.default)(h, [
                        {
                            key: "save",
                            value: (o = (0, i.default)(r.default.mark(function t() {
                                var e1, n, o, i, a, s, l, c = this;
                                return r.default.wrap(function(t) {
                                    for(;;)switch(t.prev = t.next){
                                        case 0:
                                            return e1 = this.Editor, n = e1.BlockManager, o = e1.Tools, i = n.blocks, a = [], t.prev = 2, i.forEach(function(t) {
                                                a.push(c.getSavedData(t));
                                            }), t.next = 6, Promise.all(a);
                                        case 6:
                                            return s = t.sent, t.next = 9, (0, p.sanitizeBlocks)(s, function(t) {
                                                return o.blockTools.get(t).sanitizeConfig;
                                            });
                                        case 9:
                                            return l = t.sent, t.abrupt("return", this.makeOutput(l));
                                        case 13:
                                            t.prev = 13, t.t0 = t.catch(2), d.logLabeled("Saving failed due to the Error %o", "error", t.t0);
                                        case 16:
                                        case "end":
                                            return t.stop();
                                    }
                                }, t, this, [
                                    [
                                        2,
                                        13
                                    ]
                                ]);
                            })), function() {
                                return o.apply(this, arguments);
                            })
                        },
                        {
                            key: "getSavedData",
                            value: (n = (0, i.default)(r.default.mark(function t(e1) {
                                var n, o;
                                return r.default.wrap(function(t) {
                                    for(;;)switch(t.prev = t.next){
                                        case 0:
                                            return t.next = 2, e1.save();
                                        case 2:
                                            if (n = t.sent, t.t0 = n, !t.t0) {
                                                t.next = 8;
                                                break;
                                            }
                                            return t.next = 7, e1.validate(n.data);
                                        case 7:
                                            t.t0 = t.sent;
                                        case 8:
                                            return o = t.t0, t.abrupt("return", Object.assign(Object.assign({}, n), {
                                                isValid: o
                                            }));
                                        case 10:
                                        case "end":
                                            return t.stop();
                                    }
                                }, t);
                            })), function(t) {
                                return n.apply(this, arguments);
                            })
                        },
                        {
                            key: "makeOutput",
                            value: function(t) {
                                var e1 = this, n = 0, o = [];
                                return d.log("[Editor.js saving]:", "groupCollapsed"), t.forEach(function(t) {
                                    var r = t.id, i = t.tool, a = t.data, s = t.tunes, l = t.time, c = t.isValid;
                                    if (n += l, d.log("".concat(i.charAt(0).toUpperCase() + i.slice(1)), "group"), !c) return d.log("Block \xab".concat(i, "\xbb skipped because saved data is invalid")), void d.log(void 0, "groupEnd");
                                    if (d.log(a), d.log(void 0, "groupEnd"), i !== e1.Editor.Tools.stubTool) {
                                        var u = Object.assign({
                                            id: r,
                                            type: i,
                                            data: a
                                        }, !d.isEmpty(s) && {
                                            tunes: s
                                        });
                                        o.push(u);
                                    } else o.push(a);
                                }), d.log("Total", "log", n), d.log(void 0, "groupEnd"), {
                                    time: +new Date,
                                    blocks: o,
                                    version: "2.25.0"
                                };
                            }
                        }
                    ]), h;
                }(f.default);
                o.default = y, y.displayName = "Saver", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(30),
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(9),
                n(14),
                n(62),
                n(7),
                n(25)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c, u, f, d, p, h) {
                "use strict";
                var v = n(8), g = n(1);
                function y() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = g(r), i = g(i), a = g(a), s = g(s), l = g(l), c = g(c), u = g(u), f = g(f), d = g(d), p = v(p), h = g(h);
                var b = function(t) {
                    (0, s.default)(o, t);
                    var e1, n = (e1 = o, function() {
                        var t, n = (0, c.default)(e1);
                        if (y()) {
                            var o = (0, c.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, l.default)(this, t);
                    });
                    function o() {
                        var t;
                        return (0, i.default)(this, o), (t = n.apply(this, arguments)).buttons = [], t.flipper = null, t.selection = new h.default, t;
                    }
                    return (0, a.default)(o, [
                        {
                            key: "make",
                            value: function() {
                                this.nodes.wrapper = f.default.make("div", this.CSS.wrapper), this.nodes.toolSettings = f.default.make("div", this.CSS.toolSettings), this.nodes.defaultSettings = f.default.make("div", this.CSS.defaultSettings), f.default.append(this.nodes.wrapper, [
                                    this.nodes.toolSettings,
                                    this.nodes.defaultSettings
                                ]), this.enableFlipper();
                            }
                        },
                        {
                            key: "destroy",
                            value: function() {
                                this.flipper && (this.flipper.deactivate(), this.flipper = null), this.removeAllNodes();
                            }
                        },
                        {
                            key: "open",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.Editor.BlockManager.currentBlock;
                                this.nodes.wrapper.classList.add(this.CSS.wrapperOpened), this.selection.save(), t.selected = !0, this.Editor.BlockSelection.clearCache(), this.addToolSettings(t), this.addTunes(t), this.eventsDispatcher.emit(this.events.opened), this.flipper.activate(this.blockTunesButtons);
                            }
                        },
                        {
                            key: "close",
                            value: function() {
                                this.nodes.wrapper.classList.remove(this.CSS.wrapperOpened), h.default.isAtEditor || this.selection.restore(), this.selection.clearSaved(), !this.Editor.CrossBlockSelection.isCrossBlockSelectionStarted && this.Editor.BlockManager.currentBlock && (this.Editor.BlockManager.currentBlock.selected = !1), this.nodes.toolSettings.innerHTML = "", this.nodes.defaultSettings.innerHTML = "", this.eventsDispatcher.emit(this.events.closed), this.buttons = [], this.flipper.deactivate();
                            }
                        },
                        {
                            key: "addToolSettings",
                            value: function(t) {
                                var e1 = t.renderSettings();
                                e1 && f.default.append(this.nodes.toolSettings, e1);
                            }
                        },
                        {
                            key: "addTunes",
                            value: function(t) {
                                var e1 = t.renderTunes(), n = (0, r.default)(e1, 2), o = n[0], i = n[1];
                                f.default.append(this.nodes.toolSettings, o), f.default.append(this.nodes.defaultSettings, i);
                            }
                        },
                        {
                            key: "enableFlipper",
                            value: function() {
                                var t = this;
                                this.flipper = new d.default({
                                    focusedItemClass: this.CSS.focusedButton,
                                    activateCallback: function(e1) {
                                        e1 && f.default.canSetCaret(e1) ? t.close() : p.delay(function() {
                                            t.Editor.Caret.setToBlock(t.Editor.BlockManager.currentBlock);
                                        }, 50)();
                                    }
                                });
                            }
                        },
                        {
                            key: "events",
                            get: function() {
                                return {
                                    opened: "block-settings-opened",
                                    closed: "block-settings-closed"
                                };
                            }
                        },
                        {
                            key: "CSS",
                            get: function() {
                                return {
                                    wrapper: "ce-settings",
                                    wrapperOpened: "ce-settings--opened",
                                    toolSettings: "ce-settings__plugin-zone",
                                    defaultSettings: "ce-settings__default-zone",
                                    button: "ce-settings__button",
                                    focusedButton: "ce-settings__button--focused",
                                    focusedButtonAnimated: "ce-settings__button--focused-animated"
                                };
                            }
                        },
                        {
                            key: "opened",
                            get: function() {
                                return this.nodes.wrapper.classList.contains(this.CSS.wrapperOpened);
                            }
                        },
                        {
                            key: "blockTunesButtons",
                            get: function() {
                                var t = this, e1 = this.Editor.StylesAPI;
                                if (0 !== this.buttons.length) return this.buttons;
                                var n = this.nodes.toolSettings.querySelectorAll(".".concat(e1.classes.settingsButton, ", ").concat(f.default.allInputsSelector)), o = this.nodes.defaultSettings.querySelectorAll(".".concat(this.CSS.button));
                                return n.forEach(function(e1) {
                                    t.buttons.push(e1);
                                }), o.forEach(function(e1) {
                                    t.buttons.push(e1);
                                }), this.buttons;
                            }
                        }
                    ]), o;
                }(u.default);
                o.default = b, b.displayName = "BlockSettings", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(30),
                n(20),
                n(21),
                n(42),
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(9),
                n(14),
                n(7),
                n(62),
                n(60),
                n(84),
                n(67)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c, u, f, d, p, h, v, g, y, b, m) {
                "use strict";
                var k = n(8), x = n(1);
                function w() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = x(r), i = x(i), a = x(a), s = x(s), l = x(l), c = x(c), u = x(u), f = x(f), d = x(d), p = x(p), h = x(h), v = k(v), g = x(g), y = x(y);
                var S = function(t) {
                    (0, u.default)(k, t);
                    var e1, n, o, p = (e1 = k, function() {
                        var t, n = (0, d.default)(e1);
                        if (w()) {
                            var o = (0, d.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, f.default)(this, t);
                    });
                    function k() {
                        var t;
                        return (0, l.default)(this, k), (t = p.apply(this, arguments)).opened = !1, t.tools = [], t.flipper = null, t.togglingCallback = null, t;
                    }
                    return (0, c.default)(k, [
                        {
                            key: "make",
                            value: function() {
                                this.nodes.wrapper = h.default.make("div", [
                                    k.CSS.conversionToolbarWrapper
                                ].concat((0, s.default)(this.isRtl ? [
                                    this.Editor.UI.CSS.editorRtlFix
                                ] : []))), this.nodes.tools = h.default.make("div", k.CSS.conversionToolbarTools);
                                var t = h.default.make("div", k.CSS.conversionToolbarLabel, {
                                    textContent: y.default.ui(b.I18nInternalNS.ui.inlineToolbar.converter, "Convert to")
                                });
                                return this.addTools(), this.enableFlipper(), h.default.append(this.nodes.wrapper, t), h.default.append(this.nodes.wrapper, this.nodes.tools), this.nodes.wrapper;
                            }
                        },
                        {
                            key: "destroy",
                            value: function() {
                                this.flipper && (this.flipper.deactivate(), this.flipper = null), this.removeAllNodes();
                            }
                        },
                        {
                            key: "toggle",
                            value: function(t) {
                                this.opened ? this.close() : this.open(), v.isFunction(t) && (this.togglingCallback = t);
                            }
                        },
                        {
                            key: "open",
                            value: function() {
                                var t = this;
                                this.filterTools(), this.opened = !0, this.nodes.wrapper.classList.add(k.CSS.conversionToolbarShowed), window.requestAnimationFrame(function() {
                                    t.flipper.activate(t.tools.map(function(t) {
                                        return t.button;
                                    }).filter(function(t) {
                                        return !t.classList.contains(k.CSS.conversionToolHidden);
                                    })), t.flipper.focusFirst(), v.isFunction(t.togglingCallback) && t.togglingCallback(!0);
                                });
                            }
                        },
                        {
                            key: "close",
                            value: function() {
                                this.opened = !1, this.flipper.deactivate(), this.nodes.wrapper.classList.remove(k.CSS.conversionToolbarShowed), v.isFunction(this.togglingCallback) && this.togglingCallback(!1);
                            }
                        },
                        {
                            key: "hasTools",
                            value: function() {
                                return 1 !== this.tools.length || this.tools[0].name !== this.config.defaultBlock;
                            }
                        },
                        {
                            key: "replaceWithBlock",
                            value: (o = (0, a.default)(i.default.mark(function t(e1, n) {
                                var o, r, a, s, l, c, u, f, d, p = this;
                                return i.default.wrap(function(t) {
                                    for(;;)switch(t.prev = t.next){
                                        case 0:
                                            return o = this.Editor.BlockManager.currentBlock.tool, t.next = 3, this.Editor.BlockManager.currentBlock.save();
                                        case 3:
                                            if (r = t.sent, a = r.data, s = this.Editor.Tools.blockTools.get(e1), l = "", c = o.conversionConfig.export, !v.isFunction(c)) {
                                                t.next = 12;
                                                break;
                                            }
                                            l = c(a), t.next = 18;
                                            break;
                                        case 12:
                                            if (!v.isString(c)) {
                                                t.next = 16;
                                                break;
                                            }
                                            l = a[c], t.next = 18;
                                            break;
                                        case 16:
                                            return v.log("Conversion \xabexport\xbb property must be a string or function. String means key of saved data object to export. Function should export processed string to export."), t.abrupt("return");
                                        case 18:
                                            if (u = (0, m.clean)(l, s.sanitizeConfig), f = {}, d = s.conversionConfig.import, !v.isFunction(d)) {
                                                t.next = 25;
                                                break;
                                            }
                                            f = d(u), t.next = 31;
                                            break;
                                        case 25:
                                            if (!v.isString(d)) {
                                                t.next = 29;
                                                break;
                                            }
                                            f[d] = u, t.next = 31;
                                            break;
                                        case 29:
                                            return v.log("Conversion \xabimport\xbb property must be a string or function. String means key of tool data to import. Function accepts a imported string and return composed tool data."), t.abrupt("return");
                                        case 31:
                                            n && (f = Object.assign(f, n)), this.Editor.BlockManager.replace({
                                                tool: e1,
                                                data: f
                                            }), this.Editor.BlockSelection.clearSelection(), this.close(), this.Editor.InlineToolbar.close(), v.delay(function() {
                                                p.Editor.Caret.setToBlock(p.Editor.BlockManager.currentBlock);
                                            }, 10)();
                                        case 37:
                                        case "end":
                                            return t.stop();
                                    }
                                }, t, this);
                            })), function(t, e1) {
                                return o.apply(this, arguments);
                            })
                        },
                        {
                            key: "addTools",
                            value: function() {
                                var t = this, e1 = this.Editor.Tools.blockTools;
                                Array.from(e1.entries()).forEach(function(e1) {
                                    var n = (0, r.default)(e1, 2), o = n[0], i = n[1], a = i.conversionConfig;
                                    a && a.import && i.toolbox.forEach(function(e1) {
                                        return t.addToolIfValid(o, e1);
                                    });
                                });
                            }
                        },
                        {
                            key: "addToolIfValid",
                            value: function(t, e1) {
                                !v.isEmpty(e1) && e1.icon && this.addTool(t, e1);
                            }
                        },
                        {
                            key: "addTool",
                            value: function(t, e1) {
                                var n = this, o = h.default.make("div", [
                                    k.CSS.conversionTool
                                ]), r = h.default.make("div", [
                                    k.CSS.conversionToolIcon
                                ]);
                                o.dataset.tool = t, r.innerHTML = e1.icon, h.default.append(o, r), h.default.append(o, h.default.text(y.default.t(b.I18nInternalNS.toolNames, e1.title || v.capitalize(t)))), h.default.append(this.nodes.tools, o), this.tools.push({
                                    name: t,
                                    button: o,
                                    toolboxItem: e1
                                }), this.listeners.on(o, "click", (0, a.default)(i.default.mark(function o() {
                                    return i.default.wrap(function(o) {
                                        for(;;)switch(o.prev = o.next){
                                            case 0:
                                                return o.next = 2, n.replaceWithBlock(t, e1.data);
                                            case 2:
                                            case "end":
                                                return o.stop();
                                        }
                                    }, o);
                                })));
                            }
                        },
                        {
                            key: "filterTools",
                            value: (n = (0, a.default)(i.default.mark(function t() {
                                var e1, n, o;
                                return i.default.wrap(function(t) {
                                    for(;;)switch(t.prev = t.next){
                                        case 0:
                                            return o = function(t, e1) {
                                                return t.icon === e1.icon && t.title === e1.title;
                                            }, e1 = this.Editor.BlockManager.currentBlock, t.next = 4, e1.getActiveToolboxEntry();
                                        case 4:
                                            n = t.sent, this.tools.forEach(function(t) {
                                                var r = !1;
                                                if (n) {
                                                    var i = o(n, t.toolboxItem);
                                                    r = t.button.dataset.tool === e1.name && i;
                                                }
                                                t.button.hidden = r, t.button.classList.toggle(k.CSS.conversionToolHidden, r);
                                            });
                                        case 6:
                                        case "end":
                                            return t.stop();
                                    }
                                }, t, this);
                            })), function() {
                                return n.apply(this, arguments);
                            })
                        },
                        {
                            key: "enableFlipper",
                            value: function() {
                                this.flipper = new g.default({
                                    focusedItemClass: k.CSS.conversionToolFocused
                                });
                            }
                        }
                    ], [
                        {
                            key: "CSS",
                            get: function() {
                                return {
                                    conversionToolbarWrapper: "ce-conversion-toolbar",
                                    conversionToolbarShowed: "ce-conversion-toolbar--showed",
                                    conversionToolbarTools: "ce-conversion-toolbar__tools",
                                    conversionToolbarLabel: "ce-conversion-toolbar__label",
                                    conversionTool: "ce-conversion-tool",
                                    conversionToolHidden: "ce-conversion-tool--hidden",
                                    conversionToolIcon: "ce-conversion-tool__icon",
                                    conversionToolFocused: "ce-conversion-tool--focused",
                                    conversionToolActive: "ce-conversion-tool--active"
                                };
                            }
                        }
                    ]), k;
                }(p.default);
                o.default = S, S.displayName = "ConversionToolbar", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(20),
                n(21),
                n(42),
                n(30),
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(9),
                n(14),
                n(25),
                n(7),
                n(62),
                n(60),
                n(84),
                n(115),
                n(114),
                n(68)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c, u, f, d, p, h, v, g, y, b, m, k, x, w) {
                "use strict";
                var S = n(8), T = n(1);
                function E() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = T(r), i = T(i), a = T(a), s = T(s), l = T(l), c = T(c), u = T(u), f = T(f), d = T(d), p = T(p), h = T(h), v = T(v), g = S(g), y = T(y), b = T(b), k = T(k), x = T(x);
                var B = function(t) {
                    (0, u.default)(p, t);
                    var e1, n, o = (e1 = p, function() {
                        var t, n = (0, d.default)(e1);
                        if (E()) {
                            var o = (0, d.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, f.default)(this, t);
                    });
                    function p(t) {
                        var e1, n = t.config, r = t.eventsDispatcher;
                        return (0, l.default)(this, p), (e1 = o.call(this, {
                            config: n,
                            eventsDispatcher: r
                        })).CSS = {
                            inlineToolbar: "ce-inline-toolbar",
                            inlineToolbarShowed: "ce-inline-toolbar--showed",
                            inlineToolbarLeftOriented: "ce-inline-toolbar--left-oriented",
                            inlineToolbarRightOriented: "ce-inline-toolbar--right-oriented",
                            inlineToolbarShortcut: "ce-inline-toolbar__shortcut",
                            buttonsWrapper: "ce-inline-toolbar__buttons",
                            actionsWrapper: "ce-inline-toolbar__actions",
                            inlineToolButton: "ce-inline-tool",
                            inputField: "cdx-input",
                            focusedButton: "ce-inline-tool--focused",
                            conversionToggler: "ce-inline-toolbar__dropdown",
                            conversionTogglerHidden: "ce-inline-toolbar__dropdown--hidden",
                            conversionTogglerContent: "ce-inline-toolbar__dropdown-content",
                            togglerAndButtonsWrapper: "ce-inline-toolbar__toggler-and-button-wrapper"
                        }, e1.opened = !1, e1.toolbarVerticalMargin = 5, e1.buttonsList = null, e1.width = 0, e1.flipper = null, e1.tooltip = new x.default, e1;
                    }
                    return (0, c.default)(p, [
                        {
                            key: "toggleReadOnly",
                            value: function(t) {
                                t ? (this.destroy(), this.Editor.ConversionToolbar.destroy()) : this.make();
                            }
                        },
                        {
                            key: "tryToShow",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0], e1 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
                                this.allowedToShow() ? (this.move(), this.open(e1), this.Editor.Toolbar.close()) : t && this.close();
                            }
                        },
                        {
                            key: "move",
                            value: function() {
                                var t = v.default.rect, e1 = this.Editor.UI.nodes.wrapper.getBoundingClientRect(), n = {
                                    x: t.x - e1.left,
                                    y: t.y + t.height - e1.top + this.toolbarVerticalMargin
                                };
                                t.width && (n.x += Math.floor(t.width / 2));
                                var o = n.x - this.width / 2, r = n.x + this.width / 2;
                                this.nodes.wrapper.classList.toggle(this.CSS.inlineToolbarLeftOriented, o < this.Editor.UI.contentRect.left), this.nodes.wrapper.classList.toggle(this.CSS.inlineToolbarRightOriented, r > this.Editor.UI.contentRect.right), this.nodes.wrapper.style.left = Math.floor(n.x) + "px", this.nodes.wrapper.style.top = Math.floor(n.y) + "px";
                            }
                        },
                        {
                            key: "close",
                            value: function() {
                                var t = this;
                                this.opened && (this.Editor.ReadOnly.isEnabled || (this.nodes.wrapper.classList.remove(this.CSS.inlineToolbarShowed), Array.from(this.toolsInstances.entries()).forEach(function(e1) {
                                    var n = (0, s.default)(e1, 2), o = n[0], r = n[1], i = t.getToolShortcut(o);
                                    i && k.default.remove(t.Editor.UI.nodes.redactor, i), g.isFunction(r.clear) && r.clear();
                                }), this.opened = !1, this.flipper.deactivate(), this.Editor.ConversionToolbar.close()));
                            }
                        },
                        {
                            key: "open",
                            value: function() {
                                var t = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
                                if (!this.opened) {
                                    this.addToolsFiltered(), this.nodes.wrapper.classList.add(this.CSS.inlineToolbarShowed), this.buttonsList = this.nodes.buttons.querySelectorAll(".".concat(this.CSS.inlineToolButton)), this.opened = !0, t && this.Editor.ConversionToolbar.hasTools() ? this.setConversionTogglerContent() : this.nodes.conversionToggler.hidden = !0;
                                    var e1 = Array.from(this.buttonsList);
                                    e1.unshift(this.nodes.conversionToggler), e1 = e1.filter(function(t) {
                                        return !t.hidden;
                                    }), this.flipper.activate(e1);
                                }
                            }
                        },
                        {
                            key: "containsNode",
                            value: function(t) {
                                return this.nodes.wrapper.contains(t);
                            }
                        },
                        {
                            key: "destroy",
                            value: function() {
                                this.flipper && (this.flipper.deactivate(), this.flipper = null), this.removeAllNodes(), this.tooltip.destroy();
                            }
                        },
                        {
                            key: "make",
                            value: function() {
                                var t = this;
                                this.nodes.wrapper = h.default.make("div", [
                                    this.CSS.inlineToolbar
                                ].concat((0, a.default)(this.isRtl ? [
                                    this.Editor.UI.CSS.editorRtlFix
                                ] : []))), this.nodes.togglerAndButtonsWrapper = h.default.make("div", this.CSS.togglerAndButtonsWrapper), this.nodes.buttons = h.default.make("div", this.CSS.buttonsWrapper), this.nodes.actions = h.default.make("div", this.CSS.actionsWrapper), this.listeners.on(this.nodes.wrapper, "mousedown", function(e1) {
                                    e1.target.closest(".".concat(t.CSS.actionsWrapper)) || e1.preventDefault();
                                }), h.default.append(this.nodes.wrapper, [
                                    this.nodes.togglerAndButtonsWrapper,
                                    this.nodes.actions
                                ]), h.default.append(this.Editor.UI.nodes.wrapper, this.nodes.wrapper), this.addConversionToggler(), h.default.append(this.nodes.togglerAndButtonsWrapper, this.nodes.buttons), this.prepareConversionToolbar(), this.recalculateWidth(), this.enableFlipper();
                            }
                        },
                        {
                            key: "allowedToShow",
                            value: function() {
                                var t = v.default.get(), e1 = v.default.text;
                                if (!t || !t.anchorNode) return !1;
                                if (t.isCollapsed || e1.length < 1) return !1;
                                var n = h.default.isElement(t.anchorNode) ? t.anchorNode : t.anchorNode.parentElement;
                                if (t && [
                                    "IMG",
                                    "INPUT"
                                ].includes(n.tagName)) return !1;
                                if (null === n.closest('[contenteditable="true"]')) return !1;
                                var o = this.Editor.BlockManager.getBlock(t.anchorNode);
                                return !!o && 0 !== o.tool.inlineTools.size;
                            }
                        },
                        {
                            key: "recalculateWidth",
                            value: function() {
                                this.width = this.nodes.wrapper.offsetWidth;
                            }
                        },
                        {
                            key: "addConversionToggler",
                            value: function() {
                                var t = this;
                                this.nodes.conversionToggler = h.default.make("div", this.CSS.conversionToggler), this.nodes.conversionTogglerContent = h.default.make("div", this.CSS.conversionTogglerContent);
                                var e1 = h.default.svg("toggler-down", 13, 13);
                                this.nodes.conversionToggler.appendChild(this.nodes.conversionTogglerContent), this.nodes.conversionToggler.appendChild(e1), this.nodes.togglerAndButtonsWrapper.appendChild(this.nodes.conversionToggler), this.listeners.on(this.nodes.conversionToggler, "click", function() {
                                    t.Editor.ConversionToolbar.toggle(function(e1) {
                                        !e1 && t.opened ? t.flipper.activate() : t.opened && t.flipper.deactivate();
                                    });
                                }), this.tooltip.onHover(this.nodes.conversionToggler, b.default.ui(m.I18nInternalNS.ui.inlineToolbar.converter, "Convert to"), {
                                    placement: "top",
                                    hidingDelay: 100
                                });
                            }
                        },
                        {
                            key: "setConversionTogglerContent",
                            value: (n = (0, i.default)(r.default.mark(function t() {
                                var e1, n, o, i, a, s;
                                return r.default.wrap(function(t) {
                                    for(;;)switch(t.prev = t.next){
                                        case 0:
                                            return e1 = this.Editor.BlockManager, n = e1.currentBlock, o = n.name, i = n.tool.conversionConfig, a = i && i.export, this.nodes.conversionToggler.hidden = !a, this.nodes.conversionToggler.classList.toggle(this.CSS.conversionTogglerHidden, !a), t.next = 9, n.getActiveToolboxEntry();
                                        case 9:
                                            if (t.t0 = t.sent, t.t0) {
                                                t.next = 12;
                                                break;
                                            }
                                            t.t0 = {};
                                        case 12:
                                            s = t.t0, this.nodes.conversionTogglerContent.innerHTML = s.icon || s.title || g.capitalize(o);
                                        case 14:
                                        case "end":
                                            return t.stop();
                                    }
                                }, t, this);
                            })), function() {
                                return n.apply(this, arguments);
                            })
                        },
                        {
                            key: "prepareConversionToolbar",
                            value: function() {
                                var t = this.Editor.ConversionToolbar.make();
                                h.default.append(this.nodes.wrapper, t);
                            }
                        },
                        {
                            key: "addToolsFiltered",
                            value: function() {
                                var t = this, e1 = v.default.get(), n = this.Editor.BlockManager.getBlock(e1.anchorNode);
                                this.nodes.buttons.innerHTML = "", this.nodes.actions.innerHTML = "", this.toolsInstances = new Map, Array.from(n.tool.inlineTools.values()).forEach(function(e1) {
                                    t.addTool(e1);
                                }), this.recalculateWidth();
                            }
                        },
                        {
                            key: "addTool",
                            value: function(t) {
                                var e1 = this, n = t.create(), o = n.render();
                                if (o) {
                                    if (o.dataset.tool = t.name, this.nodes.buttons.appendChild(o), this.toolsInstances.set(t.name, n), g.isFunction(n.renderActions)) {
                                        var r = n.renderActions();
                                        this.nodes.actions.appendChild(r);
                                    }
                                    this.listeners.on(o, "click", function(t) {
                                        e1.toolClicked(n), t.preventDefault();
                                    });
                                    var i = this.getToolShortcut(t.name);
                                    if (i) try {
                                        this.enableShortcuts(n, i);
                                    } catch (t1) {}
                                    var a = h.default.make("div"), s = b.default.t(m.I18nInternalNS.toolNames, t.title || g.capitalize(t.name));
                                    a.appendChild(h.default.text(s)), i && a.appendChild(h.default.make("div", this.CSS.inlineToolbarShortcut, {
                                        textContent: g.beautifyShortcut(i)
                                    })), this.tooltip.onHover(o, a, {
                                        placement: "top",
                                        hidingDelay: 100
                                    }), n.checkState(v.default.get());
                                } else g.log("Render method must return an instance of Node", "warn", t.name);
                            }
                        },
                        {
                            key: "getToolShortcut",
                            value: function(t) {
                                var e1 = this.Editor.Tools, n = e1.inlineTools.get(t), o = e1.internal.inlineTools;
                                return Array.from(o.keys()).includes(t) ? this.inlineTools[t][w.CommonInternalSettings.Shortcut] : n.shortcut;
                            }
                        },
                        {
                            key: "enableShortcuts",
                            value: function(t, e1) {
                                var n = this;
                                k.default.add({
                                    name: e1,
                                    handler: function(e1) {
                                        var o = n.Editor.BlockManager.currentBlock;
                                        o && o.tool.enabledInlineTools && (e1.preventDefault(), n.toolClicked(t));
                                    },
                                    on: this.Editor.UI.nodes.redactor
                                });
                            }
                        },
                        {
                            key: "toolClicked",
                            value: function(t) {
                                var e1 = v.default.range;
                                t.surround(e1), this.checkToolsState();
                            }
                        },
                        {
                            key: "checkToolsState",
                            value: function() {
                                this.toolsInstances.forEach(function(t) {
                                    t.checkState(v.default.get());
                                });
                            }
                        },
                        {
                            key: "enableFlipper",
                            value: function() {
                                this.flipper = new y.default({
                                    focusedItemClass: this.CSS.focusedButton,
                                    allowedKeys: [
                                        g.keyCodes.ENTER,
                                        g.keyCodes.TAB
                                    ]
                                });
                            }
                        },
                        {
                            key: "inlineTools",
                            get: function() {
                                var t = {};
                                return Array.from(this.Editor.Tools.inlineTools.entries()).forEach(function(e1) {
                                    var n = (0, s.default)(e1, 2), o = n[0], r = n[1];
                                    t[o] = r.create();
                                }), t;
                            }
                        }
                    ]), p;
                }(p.default);
                o.default = B, B.displayName = "InlineToolbar", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(42),
                n(30),
                n(20),
                n(21),
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(59),
                n(389),
                n(9),
                n(7),
                n(390),
                n(391),
                n(392),
                n(393),
                n(394),
                n(398),
                n(399),
                n(400),
                n(185)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c, u, f, d, p, h, v, g, y, b, m, k, x, w, S, T, E) {
                "use strict";
                var B = n(8), C = n(1);
                function _() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = C(r), i = C(i), a = C(a), s = C(s), l = C(l), c = C(c), u = C(u), f = C(f), d = C(d), p = C(p), h = C(h), v = C(v), g = B(g), y = C(y), b = C(b), m = C(m), k = C(k), x = C(x), w = C(w), S = C(S), T = C(T), E = C(E);
                var I = function(t, e1, n, o) {
                    var r, i = arguments.length, a = i < 3 ? e1 : null === o ? o = Object.getOwnPropertyDescriptor(e1, n) : o;
                    if ("object" === ("undefined" == typeof Reflect ? "undefined" : (0, p.default)(Reflect)) && "function" == typeof Reflect.decorate) a = Reflect.decorate(t, e1, n, o);
                    else for(var s = t.length - 1; s >= 0; s--)(r = t[s]) && (a = (i < 3 ? r(a) : i > 3 ? r(e1, n, a) : r(e1, n)) || a);
                    return i > 3 && a && Object.defineProperty(e1, n, a), a;
                }, O = function(t) {
                    (0, u.default)(p, t);
                    var e1, n, o = (e1 = p, function() {
                        var t, n = (0, d.default)(e1);
                        if (_()) {
                            var o = (0, d.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, f.default)(this, t);
                    });
                    function p() {
                        var t;
                        return (0, l.default)(this, p), (t = o.apply(this, arguments)).stubTool = "stub", t.toolsAvailable = new E.default, t.toolsUnavailable = new E.default, t;
                    }
                    return (0, c.default)(p, [
                        {
                            key: "prepare",
                            value: (n = (0, s.default)(a.default.mark(function t() {
                                var e1, n, o = this;
                                return a.default.wrap(function(t) {
                                    for(;;)switch(t.prev = t.next){
                                        case 0:
                                            if (this.validateTools(), this.config.tools = g.deepMerge({}, this.internalTools, this.config.tools), Object.prototype.hasOwnProperty.call(this.config, "tools") && 0 !== Object.keys(this.config.tools).length) {
                                                t.next = 4;
                                                break;
                                            }
                                            throw Error("Can't start without tools");
                                        case 4:
                                            if (e1 = this.prepareConfig(), this.factory = new x.default(e1, this.config, this.Editor.API), 0 !== (n = this.getListOfPrepareFunctions(e1)).length) {
                                                t.next = 9;
                                                break;
                                            }
                                            return t.abrupt("return", Promise.resolve());
                                        case 9:
                                            return t.next = 11, g.sequence(n, function(t) {
                                                o.toolPrepareMethodSuccess(t);
                                            }, function(t) {
                                                o.toolPrepareMethodFallback(t);
                                            });
                                        case 11:
                                            this.prepareBlockTools();
                                        case 12:
                                        case "end":
                                            return t.stop();
                                    }
                                }, t, this);
                            })), function() {
                                return n.apply(this, arguments);
                            })
                        },
                        {
                            key: "getAllInlineToolsSanitizeConfig",
                            value: function() {
                                var t = {};
                                return Array.from(this.inlineTools.values()).forEach(function(e1) {
                                    Object.assign(t, e1.sanitizeConfig);
                                }), t;
                            }
                        },
                        {
                            key: "destroy",
                            value: function() {
                                Object.values(this.available).forEach(function() {
                                    var t = (0, s.default)(a.default.mark(function t(e1) {
                                        return a.default.wrap(function(t) {
                                            for(;;)switch(t.prev = t.next){
                                                case 0:
                                                    if (!g.isFunction(e1.reset)) {
                                                        t.next = 3;
                                                        break;
                                                    }
                                                    return t.next = 3, e1.reset();
                                                case 3:
                                                case "end":
                                                    return t.stop();
                                            }
                                        }, t);
                                    }));
                                    return function(e1) {
                                        return t.apply(this, arguments);
                                    };
                                }());
                            }
                        },
                        {
                            key: "toolPrepareMethodSuccess",
                            value: function(t) {
                                var e1 = this.factory.get(t.toolName);
                                if (e1.isInline()) {
                                    var n = [
                                        "render",
                                        "surround",
                                        "checkState"
                                    ].filter(function(t) {
                                        return !e1.create()[t];
                                    });
                                    if (n.length) return g.log("Incorrect Inline Tool: ".concat(e1.name, ". Some of required methods is not implemented %o"), "warn", n), void this.toolsUnavailable.set(e1.name, e1);
                                }
                                this.toolsAvailable.set(e1.name, e1);
                            }
                        },
                        {
                            key: "toolPrepareMethodFallback",
                            value: function(t) {
                                this.toolsUnavailable.set(t.toolName, this.factory.get(t.toolName));
                            }
                        },
                        {
                            key: "getListOfPrepareFunctions",
                            value: function(t) {
                                var e1 = [];
                                return Object.entries(t).forEach(function(t) {
                                    var n = (0, i.default)(t, 2), o = n[0], r = n[1];
                                    e1.push({
                                        function: g.isFunction(r.class.prepare) ? r.class.prepare : function() {},
                                        data: {
                                            toolName: o,
                                            config: r.config
                                        }
                                    });
                                }), e1;
                            }
                        },
                        {
                            key: "prepareBlockTools",
                            value: function() {
                                var t = this;
                                Array.from(this.blockTools.values()).forEach(function(e1) {
                                    t.assignInlineToolsToBlockTool(e1), t.assignBlockTunesToBlockTool(e1);
                                });
                            }
                        },
                        {
                            key: "assignInlineToolsToBlockTool",
                            value: function(t) {
                                var e1 = this;
                                !1 !== this.config.inlineToolbar && (!0 !== t.enabledInlineTools ? Array.isArray(t.enabledInlineTools) && (t.inlineTools = new E.default(t.enabledInlineTools.map(function(t) {
                                    return [
                                        t,
                                        e1.inlineTools.get(t)
                                    ];
                                }))) : t.inlineTools = new E.default(Array.isArray(this.config.inlineToolbar) ? this.config.inlineToolbar.map(function(t) {
                                    return [
                                        t,
                                        e1.inlineTools.get(t)
                                    ];
                                }) : Array.from(this.inlineTools.entries())));
                            }
                        },
                        {
                            key: "assignBlockTunesToBlockTool",
                            value: function(t) {
                                var e1 = this;
                                if (!1 !== t.enabledBlockTunes) {
                                    if (Array.isArray(t.enabledBlockTunes)) {
                                        var n = new E.default(t.enabledBlockTunes.map(function(t) {
                                            return [
                                                t,
                                                e1.blockTunes.get(t)
                                            ];
                                        }));
                                        t.tunes = new E.default([].concat((0, r.default)(n), (0, r.default)(this.blockTunes.internalTools)));
                                    } else if (Array.isArray(this.config.tunes)) {
                                        var o = new E.default(this.config.tunes.map(function(t) {
                                            return [
                                                t,
                                                e1.blockTunes.get(t)
                                            ];
                                        }));
                                        t.tunes = new E.default([].concat((0, r.default)(o), (0, r.default)(this.blockTunes.internalTools)));
                                    } else t.tunes = this.blockTunes.internalTools;
                                }
                            }
                        },
                        {
                            key: "validateTools",
                            value: function() {
                                for(var t in this.config.tools)if (Object.prototype.hasOwnProperty.call(this.config.tools, t)) {
                                    if (t in this.internalTools) return;
                                    var e1 = this.config.tools[t];
                                    if (!g.isFunction(e1) && !g.isFunction(e1.class)) throw Error("Tool \xab".concat(t, "\xbb must be a constructor function or an object with function in the \xabclass\xbb property"));
                                }
                            }
                        },
                        {
                            key: "prepareConfig",
                            value: function() {
                                var t = {};
                                for(var e1 in this.config.tools)g.isObject(this.config.tools[e1]) ? t[e1] = this.config.tools[e1] : t[e1] = {
                                    class: this.config.tools[e1]
                                };
                                return t;
                            }
                        },
                        {
                            key: "available",
                            get: function() {
                                return this.toolsAvailable;
                            }
                        },
                        {
                            key: "unavailable",
                            get: function() {
                                return this.toolsUnavailable;
                            }
                        },
                        {
                            key: "inlineTools",
                            get: function() {
                                return this.available.inlineTools;
                            }
                        },
                        {
                            key: "blockTools",
                            get: function() {
                                return this.available.blockTools;
                            }
                        },
                        {
                            key: "blockTunes",
                            get: function() {
                                return this.available.blockTunes;
                            }
                        },
                        {
                            key: "defaultTool",
                            get: function() {
                                return this.blockTools.get(this.config.defaultBlock);
                            }
                        },
                        {
                            key: "internal",
                            get: function() {
                                return this.available.internalTools;
                            }
                        },
                        {
                            key: "internalTools",
                            get: function() {
                                return {
                                    bold: {
                                        class: y.default,
                                        isInternal: !0
                                    },
                                    italic: {
                                        class: b.default,
                                        isInternal: !0
                                    },
                                    link: {
                                        class: m.default,
                                        isInternal: !0
                                    },
                                    paragraph: {
                                        class: h.default,
                                        inlineToolbar: !0,
                                        isInternal: !0
                                    },
                                    stub: {
                                        class: k.default,
                                        isInternal: !0
                                    },
                                    moveUp: {
                                        class: T.default,
                                        isInternal: !0
                                    },
                                    delete: {
                                        class: S.default,
                                        isInternal: !0
                                    },
                                    moveDown: {
                                        class: w.default,
                                        isInternal: !0
                                    }
                                };
                            }
                        }
                    ]), p;
                }(v.default);
                o.default = O, O.displayName = "Tools", I([
                    g.cacheable
                ], O.prototype, "getAllInlineToolsSanitizeConfig", null), t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(30),
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(153)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c, u) {
                "use strict";
                var f = n(1);
                function d() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = f(r), i = f(i), a = f(a), s = f(s), l = f(l), c = f(c);
                var p = function(t) {
                    (0, s.default)(o, t);
                    var e1, n = (e1 = o, function() {
                        var t, n = (0, c.default)(e1);
                        if (d()) {
                            var o = (0, c.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, l.default)(this, t);
                    });
                    function o() {
                        return (0, i.default)(this, o), n.apply(this, arguments);
                    }
                    return (0, a.default)(o, [
                        {
                            key: "blockTools",
                            get: function() {
                                return new o(Array.from(this.entries()).filter(function(t) {
                                    return (0, r.default)(t, 2)[1].isBlock();
                                }));
                            }
                        },
                        {
                            key: "inlineTools",
                            get: function() {
                                return new o(Array.from(this.entries()).filter(function(t) {
                                    return (0, r.default)(t, 2)[1].isInline();
                                }));
                            }
                        },
                        {
                            key: "blockTunes",
                            get: function() {
                                return new o(Array.from(this.entries()).filter(function(t) {
                                    return (0, r.default)(t, 2)[1].isTune();
                                }));
                            }
                        },
                        {
                            key: "internalTools",
                            get: function() {
                                return new o(Array.from(this.entries()).filter(function(t) {
                                    return (0, r.default)(t, 2)[1].isInternal;
                                }));
                            }
                        },
                        {
                            key: "externalTools",
                            get: function() {
                                return new o(Array.from(this.entries()).filter(function(t) {
                                    return !(0, r.default)(t, 2)[1].isInternal;
                                }));
                            }
                        }
                    ]), o;
                }((0, (u = f(u)).default)(Map));
                o.default = p, p.displayName = "ToolsCollection", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(30),
                n(42),
                n(20),
                n(21),
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(401),
                n(9),
                n(14),
                n(7),
                n(25),
                n(61),
                n(62)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c, u, f, d, p, h, v, g, y, b, m) {
                "use strict";
                var k = n(8), x = n(1);
                function w() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = x(r), i = x(i), a = x(a), s = x(s), l = x(l), c = x(c), u = x(u), f = x(f), d = x(d), p = x(p), h = x(h), v = x(v), g = k(g), y = x(y), b = x(b), m = x(m);
                var S = function(t) {
                    (0, u.default)(k, t);
                    var e1, o, h = (e1 = k, function() {
                        var t, n = (0, d.default)(e1);
                        if (w()) {
                            var o = (0, d.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, f.default)(this, t);
                    });
                    function k() {
                        var t;
                        return (0, l.default)(this, k), (t = h.apply(this, arguments)).isMobile = !1, t.contentRectCache = void 0, t.resizeDebouncer = g.debounce(function() {
                            t.windowResize();
                        }, 200), t;
                    }
                    return (0, c.default)(k, [
                        {
                            key: "addLoader",
                            value: function() {
                                this.nodes.loader = v.default.make("div", this.CSS.editorLoader), this.nodes.wrapper.prepend(this.nodes.loader), this.nodes.redactor.classList.add(this.CSS.editorZoneHidden);
                            }
                        },
                        {
                            key: "removeLoader",
                            value: function() {
                                this.nodes.loader.remove(), this.nodes.redactor.classList.remove(this.CSS.editorZoneHidden);
                            }
                        },
                        {
                            key: "prepare",
                            value: (o = (0, s.default)(a.default.mark(function t() {
                                return a.default.wrap(function(t) {
                                    for(;;)switch(t.prev = t.next){
                                        case 0:
                                            this.checkIsMobile(), this.make(), this.addLoader(), this.appendSVGSprite(), this.loadStyles();
                                        case 5:
                                        case "end":
                                            return t.stop();
                                    }
                                }, t, this);
                            })), function() {
                                return o.apply(this, arguments);
                            })
                        },
                        {
                            key: "toggleReadOnly",
                            value: function(t) {
                                t ? this.disableModuleBindings() : this.enableModuleBindings();
                            }
                        },
                        {
                            key: "checkEmptiness",
                            value: function() {
                                var t = this.Editor.BlockManager;
                                this.nodes.wrapper.classList.toggle(this.CSS.editorEmpty, t.isEditorEmpty);
                            }
                        },
                        {
                            key: "destroy",
                            value: function() {
                                this.nodes.holder.innerHTML = "";
                            }
                        },
                        {
                            key: "closeAllToolbars",
                            value: function() {
                                var t = this.Editor, e1 = t.Toolbar, n = t.BlockSettings, o = t.InlineToolbar, r = t.ConversionToolbar;
                                n.close(), o.close(), r.close(), e1.toolbox.close();
                            }
                        },
                        {
                            key: "checkIsMobile",
                            value: function() {
                                this.isMobile = window.innerWidth < 650;
                            }
                        },
                        {
                            key: "make",
                            value: function() {
                                this.nodes.holder = v.default.getHolder(this.config.holder), this.nodes.wrapper = v.default.make("div", [
                                    this.CSS.editorWrapper
                                ].concat((0, i.default)(this.isRtl ? [
                                    this.CSS.editorRtlFix
                                ] : []))), this.nodes.redactor = v.default.make("div", this.CSS.editorZone), this.nodes.holder.offsetWidth < this.contentRect.width && this.nodes.wrapper.classList.add(this.CSS.editorWrapperNarrow), this.nodes.redactor.style.paddingBottom = this.config.minHeight + "px", this.nodes.wrapper.appendChild(this.nodes.redactor), this.nodes.holder.appendChild(this.nodes.wrapper);
                            }
                        },
                        {
                            key: "loadStyles",
                            value: function() {
                                var t = n(402);
                                if (!v.default.get("editor-js-styles")) {
                                    var e1 = v.default.make("style", null, {
                                        id: "editor-js-styles",
                                        textContent: t.toString()
                                    });
                                    v.default.prepend(document.head, e1);
                                }
                            }
                        },
                        {
                            key: "enableModuleBindings",
                            value: function() {
                                var t = this;
                                this.readOnlyMutableListeners.on(this.nodes.redactor, "click", function(e1) {
                                    t.redactorClicked(e1);
                                }, !1), this.readOnlyMutableListeners.on(this.nodes.redactor, "mousedown", function(e1) {
                                    t.documentTouched(e1);
                                }, !0), this.readOnlyMutableListeners.on(this.nodes.redactor, "touchstart", function(e1) {
                                    t.documentTouched(e1);
                                }, !0), this.readOnlyMutableListeners.on(document, "keydown", function(e1) {
                                    t.documentKeydown(e1);
                                }, !0), this.readOnlyMutableListeners.on(document, "mousedown", function(e1) {
                                    t.documentClicked(e1);
                                }, !0), this.readOnlyMutableListeners.on(document, "selectionchange", function(e1) {
                                    t.selectionChanged(e1);
                                }, !0), this.readOnlyMutableListeners.on(window, "resize", function() {
                                    t.resizeDebouncer();
                                }, {
                                    passive: !0
                                }), this.watchBlockHoveredEvents();
                            }
                        },
                        {
                            key: "watchBlockHoveredEvents",
                            value: function() {
                                var t, e1 = this;
                                this.readOnlyMutableListeners.on(this.nodes.redactor, "mousemove", g.throttle(function(n) {
                                    var o = n.target.closest(".ce-block");
                                    e1.Editor.BlockSelection.anyBlockSelected || o && t !== o && (t = o, e1.eventsDispatcher.emit(e1.events.blockHovered, {
                                        block: e1.Editor.BlockManager.getBlockByChildNode(o)
                                    }));
                                }, 20), {
                                    passive: !0
                                });
                            }
                        },
                        {
                            key: "disableModuleBindings",
                            value: function() {
                                this.readOnlyMutableListeners.clearAll();
                            }
                        },
                        {
                            key: "windowResize",
                            value: function() {
                                this.contentRectCache = null, this.checkIsMobile();
                            }
                        },
                        {
                            key: "documentKeydown",
                            value: function(t) {
                                switch(t.keyCode){
                                    case g.keyCodes.ENTER:
                                        this.enterPressed(t);
                                        break;
                                    case g.keyCodes.BACKSPACE:
                                        this.backspacePressed(t);
                                        break;
                                    case g.keyCodes.ESC:
                                        this.escapePressed(t);
                                        break;
                                    default:
                                        this.defaultBehaviour(t);
                                }
                            }
                        },
                        {
                            key: "defaultBehaviour",
                            value: function(t) {
                                var e1 = this.Editor.BlockManager.currentBlock, n = t.target.closest(".".concat(this.CSS.editorWrapper)), o = t.altKey || t.ctrlKey || t.metaKey || t.shiftKey;
                                void 0 === e1 || null !== n ? n || e1 && o || (this.Editor.BlockManager.dropPointer(), this.Editor.Toolbar.close()) : this.Editor.BlockEvents.keydown(t);
                            }
                        },
                        {
                            key: "backspacePressed",
                            value: function(t) {
                                var e1 = this.Editor, n = e1.BlockManager, o = e1.BlockSelection, r = e1.Caret;
                                if (o.anyBlockSelected && !y.default.isSelectionExists) {
                                    var i = n.removeSelectedBlocks();
                                    r.setToBlock(n.insertDefaultBlockAtIndex(i, !0), r.positions.START), o.clearSelection(t), t.preventDefault(), t.stopPropagation(), t.stopImmediatePropagation();
                                }
                            }
                        },
                        {
                            key: "escapePressed",
                            value: function(t) {
                                this.Editor.BlockSelection.clearSelection(t), this.Editor.Toolbar.toolbox.opened ? (this.Editor.Toolbar.toolbox.close(), this.Editor.Caret.setToBlock(this.Editor.BlockManager.currentBlock)) : this.Editor.BlockSettings.opened ? this.Editor.BlockSettings.close() : this.Editor.ConversionToolbar.opened ? this.Editor.ConversionToolbar.close() : this.Editor.InlineToolbar.opened ? this.Editor.InlineToolbar.close() : this.Editor.Toolbar.close();
                            }
                        },
                        {
                            key: "enterPressed",
                            value: function(t) {
                                var e1 = this.Editor, n = e1.BlockManager, o = e1.BlockSelection, r = n.currentBlockIndex >= 0;
                                if (o.anyBlockSelected && !y.default.isSelectionExists) return o.clearSelection(t), t.preventDefault(), t.stopImmediatePropagation(), void t.stopPropagation();
                                if (!this.someToolbarOpened && r && "BODY" === t.target.tagName) {
                                    var i = this.Editor.BlockManager.insert();
                                    this.Editor.Caret.setToBlock(i), this.Editor.BlockManager.highlightCurrentNode(), this.Editor.Toolbar.moveAndOpen(i);
                                }
                                this.Editor.BlockSelection.clearSelection(t);
                            }
                        },
                        {
                            key: "documentClicked",
                            value: function(t) {
                                if (t.isTrusted) {
                                    var e1 = t.target;
                                    this.nodes.holder.contains(e1) || y.default.isAtEditor || (this.Editor.BlockManager.dropPointer(), this.Editor.Toolbar.close());
                                    var n = this.Editor.BlockSettings.nodes.wrapper.contains(e1), o = this.Editor.Toolbar.nodes.settingsToggler.contains(e1), r = n || o;
                                    if (this.Editor.BlockSettings.opened && !r) {
                                        this.Editor.BlockSettings.close();
                                        var i = this.Editor.BlockManager.getBlockByChildNode(e1);
                                        this.Editor.Toolbar.moveAndOpen(i);
                                    }
                                    this.Editor.BlockSelection.clearSelection(t);
                                }
                            }
                        },
                        {
                            key: "documentTouched",
                            value: function(t) {
                                var e1 = t.target;
                                if (e1 === this.nodes.redactor) {
                                    var n = t instanceof MouseEvent ? t.clientX : t.touches[0].clientX, o = t instanceof MouseEvent ? t.clientY : t.touches[0].clientY;
                                    e1 = document.elementFromPoint(n, o);
                                }
                                try {
                                    this.Editor.BlockManager.setCurrentBlockByChildNode(e1), this.Editor.BlockManager.highlightCurrentNode();
                                } catch (t1) {
                                    this.Editor.RectangleSelection.isRectActivated() || this.Editor.Caret.setToTheLastBlock();
                                }
                                this.Editor.Toolbar.moveAndOpen();
                            }
                        },
                        {
                            key: "redactorClicked",
                            value: function(t) {
                                var e1 = this.Editor.BlockSelection;
                                if (y.default.isCollapsed) {
                                    var n = function() {
                                        t.stopImmediatePropagation(), t.stopPropagation();
                                    }, o = t.target, r = t.metaKey || t.ctrlKey;
                                    if (v.default.isAnchor(o) && r) {
                                        n();
                                        var i = o.getAttribute("href"), a = g.getValidUrl(i);
                                        g.openTab(a);
                                    } else {
                                        var s = this.Editor.BlockManager.getBlockByIndex(-1), l = v.default.offset(s.holder).bottom, c = t.pageY;
                                        if (t.target instanceof Element && t.target.isEqualNode(this.nodes.redactor) && !e1.anyBlockSelected && l < c) {
                                            n();
                                            var u = this.Editor, f = u.BlockManager, d = u.Caret, p = u.Toolbar;
                                            f.lastBlock.tool.isDefault && f.lastBlock.isEmpty || f.insertAtEnd(), d.setToTheLastBlock(), p.moveAndOpen(f.lastBlock);
                                        }
                                    }
                                }
                            }
                        },
                        {
                            key: "selectionChanged",
                            value: function(t) {
                                var e1 = this.Editor, n = e1.CrossBlockSelection, o = e1.BlockSelection, r = y.default.anchorElement;
                                if (n.isCrossBlockSelectionStarted && o.anyBlockSelected && y.default.get().removeAllRanges(), r) {
                                    var i = null === r.closest(".".concat(b.default.CSS.content));
                                    if (i && (this.Editor.InlineToolbar.containsNode(r) || this.Editor.InlineToolbar.close(), "true" !== r.dataset.inlineToolbar)) return;
                                    this.Editor.BlockManager.currentBlock || this.Editor.BlockManager.setCurrentBlockByChildNode(r);
                                    var a = !0 !== i;
                                    this.Editor.InlineToolbar.tryToShow(!0, a);
                                } else y.default.range || this.Editor.InlineToolbar.close();
                            }
                        },
                        {
                            key: "appendSVGSprite",
                            value: function() {
                                var t = v.default.make("div");
                                t.hidden = !0, t.style.display = "none", t.innerHTML = p.default, v.default.append(this.nodes.wrapper, t);
                            }
                        },
                        {
                            key: "events",
                            get: function() {
                                return {
                                    blockHovered: "block-hovered"
                                };
                            }
                        },
                        {
                            key: "CSS",
                            get: function() {
                                return {
                                    editorWrapper: "codex-editor",
                                    editorWrapperNarrow: "codex-editor--narrow",
                                    editorZone: "codex-editor__redactor",
                                    editorZoneHidden: "codex-editor__redactor--hidden",
                                    editorLoader: "codex-editor__loader",
                                    editorEmpty: "codex-editor--empty",
                                    editorRtlFix: "codex-editor--rtl"
                                };
                            }
                        },
                        {
                            key: "contentRect",
                            get: function() {
                                if (this.contentRectCache) return this.contentRectCache;
                                var t = this.nodes.wrapper.querySelector(".".concat(b.default.CSS.content));
                                return t ? (this.contentRectCache = t.getBoundingClientRect(), this.contentRectCache) : {
                                    width: 650,
                                    left: 0,
                                    right: 0
                                };
                            }
                        },
                        {
                            key: "someToolbarOpened",
                            get: function() {
                                var t = this.Editor, e1 = t.Toolbar, n = t.BlockSettings, o = t.InlineToolbar, r = t.ConversionToolbar;
                                return n.opened || o.opened || r.opened || e1.toolbox.opened;
                            }
                        },
                        {
                            key: "someFlipperButtonFocused",
                            get: function() {
                                return !!this.Editor.Toolbar.toolbox.hasFocus() || Object.entries(this.Editor).filter(function(t) {
                                    var e1 = (0, r.default)(t, 2);
                                    return e1[0], e1[1].flipper instanceof m.default;
                                }).some(function(t) {
                                    var e1 = (0, r.default)(t, 2);
                                    return e1[0], e1[1].flipper.hasFocus();
                                });
                            }
                        }
                    ]), k;
                }(h.default);
                o.default = S, S.displayName = "UI", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            n(188), t.exports = n(360);
        },
        function(t, e1, n) {
            n(189);
        },
        function(t, e1, n) {
            "use strict";
            n(190), n(333), n(335), n(338), n(340), n(342), n(344), n(346), n(348), n(350), n(352), n(354), n(356), n(147);
        },
        function(t, e1, n) {
            n(191), n(194), n(195), n(196), n(197), n(198), n(199), n(200), n(201), n(202), n(203), n(204), n(205), n(206), n(207), n(208), n(209), n(210), n(211), n(212), n(213), n(214), n(215), n(216), n(217), n(218), n(219), n(220), n(221), n(222), n(223), n(224), n(225), n(226), n(227), n(228), n(229), n(230), n(231), n(232), n(233), n(234), n(235), n(237), n(238), n(239), n(240), n(241), n(242), n(243), n(244), n(245), n(246), n(247), n(248), n(249), n(250), n(251), n(252), n(253), n(254), n(255), n(256), n(257), n(258), n(259), n(260), n(261), n(262), n(263), n(264), n(265), n(266), n(267), n(268), n(269), n(270), n(272), n(273), n(275), n(276), n(277), n(278), n(279), n(280), n(281), n(283), n(284), n(285), n(286), n(287), n(288), n(289), n(290), n(291), n(292), n(293), n(294), n(295), n(105), n(296), n(136), n(297), n(137), n(298), n(299), n(300), n(301), n(138), n(304), n(305), n(306), n(307), n(308), n(309), n(310), n(311), n(312), n(313), n(314), n(315), n(316), n(317), n(318), n(319), n(320), n(321), n(322), n(323), n(324), n(325), n(326), n(327), n(328), n(329), n(330), n(331), n(332), t.exports = n(17);
        },
        function(t, e1, n) {
            "use strict";
            var o = n(10), r = n(26), i = n(18), a = n(0), s = n(23), l = n(41).KEY, c = n(11), u = n(69), f = n(53), d = n(44), p = n(15), h = n(86), v = n(117), g = n(193), y = n(72), b = n(12), m = n(13), k = n(22), x = n(28), w = n(40), S = n(43), T = n(48), E = n(120), B = n(34), C = n(71), _ = n(19), I = n(46), O = B.f, M = _.f, R = E.f, A = o.Symbol, N = o.JSON, L = N && N.stringify, P = p("_hidden"), D = p("toPrimitive"), j = {}.propertyIsEnumerable, F = u("symbol-registry"), H = u("symbols"), U = u("op-symbols"), z = Object.prototype, W = "function" == typeof A && !!C.f, Y = o.QObject, V = !Y || !Y.prototype || !Y.prototype.findChild, X = i && c(function() {
                return 7 != T(M({}, "a", {
                    get: function() {
                        return M(this, "a", {
                            value: 7
                        }).a;
                    }
                })).a;
            }) ? function(t, e1, n) {
                var o = O(z, e1);
                o && delete z[e1], M(t, e1, n), o && t !== z && M(z, e1, o);
            } : M, K = function(t) {
                var e1 = H[t] = T(A.prototype);
                return e1._k = t, e1;
            }, G = W && "symbol" == typeof A.iterator ? function(t) {
                return "symbol" == typeof t;
            } : function(t) {
                return t instanceof A;
            }, Z = function(t, e1, n) {
                return t === z && Z(U, e1, n), b(t), e1 = w(e1, !0), b(n), r(H, e1) ? (n.enumerable ? (r(t, P) && t[P][e1] && (t[P][e1] = !1), n = T(n, {
                    enumerable: S(0, !1)
                })) : (r(t, P) || M(t, P, S(1, {})), t[P][e1] = !0), X(t, e1, n)) : M(t, e1, n);
            }, q = function(t, e1) {
                b(t);
                for(var n, o = g(e1 = x(e1)), r = 0, i = o.length; i > r;)Z(t, n = o[r++], e1[n]);
                return t;
            }, J = function(t) {
                var e1 = j.call(this, t = w(t, !0));
                return !(this === z && r(H, t) && !r(U, t)) && (!(e1 || !r(this, t) || !r(H, t) || r(this, P) && this[P][t]) || e1);
            }, $ = function(t, e1) {
                if (t = x(t), e1 = w(e1, !0), t !== z || !r(H, e1) || r(U, e1)) {
                    var n = O(t, e1);
                    return !n || !r(H, e1) || r(t, P) && t[P][e1] || (n.enumerable = !0), n;
                }
            }, Q = function(t) {
                for(var e1, n = R(x(t)), o = [], i = 0; n.length > i;)r(H, e1 = n[i++]) || e1 == P || e1 == l || o.push(e1);
                return o;
            }, tt = function(t) {
                for(var e1, n = t === z, o = R(n ? U : x(t)), i = [], a = 0; o.length > a;)!r(H, e1 = o[a++]) || n && !r(z, e1) || i.push(H[e1]);
                return i;
            };
            W || (s((A = function() {
                if (this instanceof A) throw TypeError("Symbol is not a constructor!");
                var t = d(arguments.length > 0 ? arguments[0] : void 0), e1 = function(n) {
                    this === z && e1.call(U, n), r(this, P) && r(this[P], t) && (this[P][t] = !1), X(this, t, S(1, n));
                };
                return i && V && X(z, t, {
                    configurable: !0,
                    set: e1
                }), K(t);
            }).prototype, "toString", function() {
                return this._k;
            }), B.f = $, _.f = Z, n(49).f = E.f = Q, n(64).f = J, C.f = tt, i && !n(45) && s(z, "propertyIsEnumerable", J, !0), h.f = function(t) {
                return K(p(t));
            }), a(a.G + a.W + a.F * !W, {
                Symbol: A
            });
            for(var et = "hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","), nt = 0; et.length > nt;)p(et[nt++]);
            for(var ot = I(p.store), rt = 0; ot.length > rt;)v(ot[rt++]);
            a(a.S + a.F * !W, "Symbol", {
                for: function(t) {
                    return r(F, t += "") ? F[t] : F[t] = A(t);
                },
                keyFor: function(t) {
                    if (!G(t)) throw TypeError(t + " is not a symbol!");
                    for(var e1 in F)if (F[e1] === t) return e1;
                },
                useSetter: function() {
                    V = !0;
                },
                useSimple: function() {
                    V = !1;
                }
            }), a(a.S + a.F * !W, "Object", {
                create: function(t, e1) {
                    return void 0 === e1 ? T(t) : q(T(t), e1);
                },
                defineProperty: Z,
                defineProperties: q,
                getOwnPropertyDescriptor: $,
                getOwnPropertyNames: Q,
                getOwnPropertySymbols: tt
            });
            var it = c(function() {
                C.f(1);
            });
            a(a.S + a.F * it, "Object", {
                getOwnPropertySymbols: function(t) {
                    return C.f(k(t));
                }
            }), N && a(a.S + a.F * (!W || c(function() {
                var t = A();
                return "[null]" != L([
                    t
                ]) || "{}" != L({
                    a: t
                }) || "{}" != L(Object(t));
            })), "JSON", {
                stringify: function(t) {
                    for(var e1, n, o = [
                        t
                    ], r = 1; arguments.length > r;)o.push(arguments[r++]);
                    if (n = e1 = o[1], (m(e1) || void 0 !== t) && !G(t)) return y(e1) || (e1 = function(t, e1) {
                        if ("function" == typeof n && (e1 = n.call(this, t, e1)), !G(e1)) return e1;
                    }), o[1] = e1, L.apply(N, o);
                }
            }), A.prototype[D] || n(27)(A.prototype, D, A.prototype.valueOf), f(A, "Symbol"), f(Math, "Math", !0), f(o.JSON, "JSON", !0);
        },
        function(t, e1, n) {
            t.exports = n(69)("native-function-to-string", Function.toString);
        },
        function(t, e1, n) {
            var o = n(46), r = n(71), i = n(64);
            t.exports = function(t) {
                var e1 = o(t), n = r.f;
                if (n) for(var a, s = n(t), l = i.f, c = 0; s.length > c;)l.call(t, a = s[c++]) && e1.push(a);
                return e1;
            };
        },
        function(t, e1, n) {
            var o = n(0);
            o(o.S, "Object", {
                create: n(48)
            });
        },
        function(t, e1, n) {
            var o = n(0);
            o(o.S + o.F * !n(18), "Object", {
                defineProperty: n(19).f
            });
        },
        function(t, e1, n) {
            var o = n(0);
            o(o.S + o.F * !n(18), "Object", {
                defineProperties: n(119)
            });
        },
        function(t, e1, n) {
            var o = n(28), r = n(34).f;
            n(35)("getOwnPropertyDescriptor", function() {
                return function(t, e1) {
                    return r(o(t), e1);
                };
            });
        },
        function(t, e1, n) {
            var o = n(22), r = n(50);
            n(35)("getPrototypeOf", function() {
                return function(t) {
                    return r(o(t));
                };
            });
        },
        function(t, e1, n) {
            var o = n(22), r = n(46);
            n(35)("keys", function() {
                return function(t) {
                    return r(o(t));
                };
            });
        },
        function(t, e1, n) {
            n(35)("getOwnPropertyNames", function() {
                return n(120).f;
            });
        },
        function(t, e1, n) {
            var o = n(13), r = n(41).onFreeze;
            n(35)("freeze", function(t) {
                return function(e1) {
                    return t && o(e1) ? t(r(e1)) : e1;
                };
            });
        },
        function(t, e1, n) {
            var o = n(13), r = n(41).onFreeze;
            n(35)("seal", function(t) {
                return function(e1) {
                    return t && o(e1) ? t(r(e1)) : e1;
                };
            });
        },
        function(t, e1, n) {
            var o = n(13), r = n(41).onFreeze;
            n(35)("preventExtensions", function(t) {
                return function(e1) {
                    return t && o(e1) ? t(r(e1)) : e1;
                };
            });
        },
        function(t, e1, n) {
            var o = n(13);
            n(35)("isFrozen", function(t) {
                return function(e1) {
                    return !o(e1) || !!t && t(e1);
                };
            });
        },
        function(t, e1, n) {
            var o = n(13);
            n(35)("isSealed", function(t) {
                return function(e1) {
                    return !o(e1) || !!t && t(e1);
                };
            });
        },
        function(t, e1, n) {
            var o = n(13);
            n(35)("isExtensible", function(t) {
                return function(e1) {
                    return !!o(e1) && (!t || t(e1));
                };
            });
        },
        function(t, e1, n) {
            var o = n(0);
            o(o.S + o.F, "Object", {
                assign: n(121)
            });
        },
        function(t, e1, n) {
            var o = n(0);
            o(o.S, "Object", {
                is: n(122)
            });
        },
        function(t, e1, n) {
            var o = n(0);
            o(o.S, "Object", {
                setPrototypeOf: n(90).set
            });
        },
        function(t, e1, n) {
            "use strict";
            var o = n(65), r = {};
            r[n(15)("toStringTag")] = "z", r + "" != "[object z]" && n(23)(Object.prototype, "toString", function() {
                return "[object " + o(this) + "]";
            }, !0);
        },
        function(t, e1, n) {
            var o = n(0);
            o(o.P, "Function", {
                bind: n(123)
            });
        },
        function(t, e1, n) {
            var o = n(19).f, r = Function.prototype, i = /^\s*function ([^ (]*)/;
            "name" in r || n(18) && o(r, "name", {
                configurable: !0,
                get: function() {
                    try {
                        return ("" + this).match(i)[1];
                    } catch (t) {
                        return "";
                    }
                }
            });
        },
        function(t, e1, n) {
            "use strict";
            var o = n(13), r = n(50), i = n(15)("hasInstance"), a = Function.prototype;
            i in a || n(19).f(a, i, {
                value: function(t) {
                    if ("function" != typeof this || !o(t)) return !1;
                    if (!o(this.prototype)) return t instanceof this;
                    for(; t = r(t);)if (this.prototype === t) return !0;
                    return !1;
                }
            });
        },
        function(t, e1, n) {
            var o = n(0), r = n(125);
            o(o.G + o.F * (parseInt != r), {
                parseInt: r
            });
        },
        function(t, e1, n) {
            var o = n(0), r = n(126);
            o(o.G + o.F * (parseFloat != r), {
                parseFloat: r
            });
        },
        function(t, e1, n) {
            "use strict";
            var o = n(10), r = n(26), i = n(37), a = n(92), s = n(40), l = n(11), c = n(49).f, u = n(34).f, f = n(19).f, d = n(54).trim, p = o.Number, h = p, v = p.prototype, g = "Number" == i(n(48)(v)), y = "trim" in String.prototype, b = function(t) {
                var e1 = s(t, !1);
                if ("string" == typeof e1 && e1.length > 2) {
                    var n, o, r, i = (e1 = y ? e1.trim() : d(e1, 3)).charCodeAt(0);
                    if (43 === i || 45 === i) {
                        if (88 === (n = e1.charCodeAt(2)) || 120 === n) return NaN;
                    } else if (48 === i) {
                        switch(e1.charCodeAt(1)){
                            case 66:
                            case 98:
                                o = 2, r = 49;
                                break;
                            case 79:
                            case 111:
                                o = 8, r = 55;
                                break;
                            default:
                                return +e1;
                        }
                        for(var a, l = e1.slice(2), c = 0, u = l.length; c < u; c++)if ((a = l.charCodeAt(c)) < 48 || a > r) return NaN;
                        return parseInt(l, o);
                    }
                }
                return +e1;
            };
            if (!p(" 0o1") || !p("0b1") || p("+0x1")) {
                p = function(t) {
                    var e1 = arguments.length < 1 ? 0 : t, n = this;
                    return n instanceof p && (g ? l(function() {
                        v.valueOf.call(n);
                    }) : "Number" != i(n)) ? a(new h(b(e1)), n, p) : b(e1);
                };
                for(var m, k = n(18) ? c(h) : "MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","), x = 0; k.length > x; x++)r(h, m = k[x]) && !r(p, m) && f(p, m, u(h, m));
                p.prototype = v, v.constructor = p, n(23)(o, "Number", p);
            }
        },
        function(t, e1, n) {
            "use strict";
            var o = n(0), r = n(33), i = n(127), a = n(93), s = 1..toFixed, l = Math.floor, c = [
                0,
                0,
                0,
                0,
                0,
                0
            ], u = "Number.toFixed: incorrect invocation!", f = function(t, e1) {
                for(var n = -1, o = e1; ++n < 6;)o += t * c[n], c[n] = o % 1e7, o = l(o / 1e7);
            }, d = function(t) {
                for(var e1 = 6, n = 0; --e1 >= 0;)n += c[e1], c[e1] = l(n / t), n = n % t * 1e7;
            }, p = function() {
                for(var t = 6, e1 = ""; --t >= 0;)if ("" !== e1 || 0 === t || 0 !== c[t]) {
                    var n = String(c[t]);
                    e1 = "" === e1 ? n : e1 + a.call("0", 7 - n.length) + n;
                }
                return e1;
            }, h = function(t, e1, n) {
                return 0 === e1 ? n : e1 % 2 == 1 ? h(t, e1 - 1, n * t) : h(t * t, e1 / 2, n);
            };
            o(o.P + o.F * (!!s && ("0.000" !== 8e-5.toFixed(3) || "1" !== .9.toFixed(0) || "1.25" !== 1.255.toFixed(2) || "1000000000000000128" !== 0xde0b6b3a7640080.toFixed(0)) || !n(11)(function() {
                s.call({});
            })), "Number", {
                toFixed: function(t) {
                    var e1, n, o, s, l = i(this, u), c = r(t), v = "", g = "0";
                    if (c < 0 || c > 20) throw RangeError(u);
                    if (l != l) return "NaN";
                    if (l <= -1000000000000000000000 || l >= 1e21) return String(l);
                    if (l < 0 && (v = "-", l = -l), l > 1e-21) {
                        if (n = (e1 = function(t) {
                            for(var e1 = 0, n = t; n >= 4096;)e1 += 12, n /= 4096;
                            for(; n >= 2;)e1 += 1, n /= 2;
                            return e1;
                        }(l * h(2, 69, 1)) - 69) < 0 ? l * h(2, -e1, 1) : l / h(2, e1, 1), n *= 4503599627370496, (e1 = 52 - e1) > 0) {
                            for(f(0, n), o = c; o >= 7;)f(1e7, 0), o -= 7;
                            for(f(h(10, o, 1), 0), o = e1 - 1; o >= 23;)d(8388608), o -= 23;
                            d(1 << o), f(1, 1), d(2), g = p();
                        } else f(0, n), f(1 << -e1, 0), g = p() + a.call("0", c);
                    }
                    return g = c > 0 ? v + ((s = g.length) <= c ? "0." + a.call("0", c - s) + g : g.slice(0, s - c) + "." + g.slice(s - c)) : v + g;
                }
            });
        },
        function(t, e1, n) {
            "use strict";
            var o = n(0), r = n(11), i = n(127), a = 1..toPrecision;
            o(o.P + o.F * (r(function() {
                return "1" !== a.call(1, void 0);
            }) || !r(function() {
                a.call({});
            })), "Number", {
                toPrecision: function(t) {
                    var e1 = i(this, "Number#toPrecision: incorrect invocation!");
                    return void 0 === t ? a.call(e1) : a.call(e1, t);
                }
            });
        },
        function(t, e1, n) {
            var o = n(0);
            o(o.S, "Number", {
                EPSILON: Math.pow(2, -52)
            });
        },
        function(t, e1, n) {
            var o = n(0), r = n(10).isFinite;
            o(o.S, "Number", {
                isFinite: function(t) {
                    return "number" == typeof t && r(t);
                }
            });
        },
        function(t, e1, n) {
            var o = n(0);
            o(o.S, "Number", {
                isInteger: n(128)
            });
        },
        function(t, e1, n) {
            var o = n(0);
            o(o.S, "Number", {
                isNaN: function(t) {
                    return t != t;
                }
            });
        },
        function(t, e1, n) {
            var o = n(0), r = n(128), i = Math.abs;
            o(o.S, "Number", {
                isSafeInteger: function(t) {
                    return r(t) && i(t) <= 9007199254740991;
                }
            });
        },
        function(t, e1, n) {
            var o = n(0);
            o(o.S, "Number", {
                MAX_SAFE_INTEGER: 9007199254740991
            });
        },
        function(t, e1, n) {
            var o = n(0);
            o(o.S, "Number", {
                MIN_SAFE_INTEGER: -9007199254740991
            });
        },
        function(t, e1, n) {
            var o = n(0), r = n(126);
            o(o.S + o.F * (Number.parseFloat != r), "Number", {
                parseFloat: r
            });
        },
        function(t, e1, n) {
            var o = n(0), r = n(125);
            o(o.S + o.F * (Number.parseInt != r), "Number", {
                parseInt: r
            });
        },
        function(t, e1, n) {
            var o = n(0), r = n(129), i = Math.sqrt, a = Math.acosh;
            o(o.S + o.F * !(a && 710 == Math.floor(a(Number.MAX_VALUE)) && a(1 / 0) == 1 / 0), "Math", {
                acosh: function(t) {
                    return (t = +t) < 1 ? NaN : t > 94906265.62425156 ? Math.log(t) + Math.LN2 : r(t - 1 + i(t - 1) * i(t + 1));
                }
            });
        },
        function(t, e1, n) {
            var o = n(0), r = Math.asinh;
            o(o.S + o.F * !(r && 1 / r(0) > 0), "Math", {
                asinh: function t(e1) {
                    return isFinite(e1 = +e1) && 0 != e1 ? e1 < 0 ? -t(-e1) : Math.log(e1 + Math.sqrt(e1 * e1 + 1)) : e1;
                }
            });
        },
        function(t, e1, n) {
            var o = n(0), r = Math.atanh;
            o(o.S + o.F * !(r && 1 / r(-0) < 0), "Math", {
                atanh: function(t) {
                    return 0 == (t = +t) ? t : Math.log((1 + t) / (1 - t)) / 2;
                }
            });
        },
        function(t, e1, n) {
            var o = n(0), r = n(94);
            o(o.S, "Math", {
                cbrt: function(t) {
                    return r(t = +t) * Math.pow(Math.abs(t), 1 / 3);
                }
            });
        },
        function(t, e1, n) {
            var o = n(0);
            o(o.S, "Math", {
                clz32: function(t) {
                    return (t >>>= 0) ? 31 - Math.floor(Math.log(t + .5) * Math.LOG2E) : 32;
                }
            });
        },
        function(t, e1, n) {
            var o = n(0), r = Math.exp;
            o(o.S, "Math", {
                cosh: function(t) {
                    return (r(t = +t) + r(-t)) / 2;
                }
            });
        },
        function(t, e1, n) {
            var o = n(0), r = n(95);
            o(o.S + o.F * (r != Math.expm1), "Math", {
                expm1: r
            });
        },
        function(t, e1, n) {
            var o = n(0);
            o(o.S, "Math", {
                fround: n(236)
            });
        },
        function(t, e1, n) {
            var o = n(94), r = Math.pow, i = r(2, -52), a = r(2, -23), s = r(2, 127) * (2 - a), l = r(2, -126);
            t.exports = Math.fround || function(t) {
                var e1, n, r = Math.abs(t), c = o(t);
                return r < l ? c * (r / l / a + 1 / i - 1 / i) * l * a : (n = (e1 = (1 + a / i) * r) - (e1 - r)) > s || n != n ? c * (1 / 0) : c * n;
            };
        },
        function(t, e1, n) {
            var o = n(0), r = Math.abs;
            o(o.S, "Math", {
                hypot: function(t, e1) {
                    for(var n, o, i = 0, a = 0, s = arguments.length, l = 0; a < s;)l < (n = r(arguments[a++])) ? (i = i * (o = l / n) * o + 1, l = n) : i += n > 0 ? (o = n / l) * o : n;
                    return l === 1 / 0 ? 1 / 0 : l * Math.sqrt(i);
                }
            });
        },
        function(t, e1, n) {
            var o = n(0), r = Math.imul;
            o(o.S + o.F * n(11)(function() {
                return -5 != r(4294967295, 5) || 2 != r.length;
            }), "Math", {
                imul: function(t, e1) {
                    var n = +t, o = +e1, r = 65535 & n, i = 65535 & o;
                    return 0 | r * i + ((65535 & n >>> 16) * i + r * (65535 & o >>> 16) << 16 >>> 0);
                }
            });
        },
        function(t, e1, n) {
            var o = n(0);
            o(o.S, "Math", {
                log10: function(t) {
                    return Math.log(t) * Math.LOG10E;
                }
            });
        },
        function(t, e1, n) {
            var o = n(0);
            o(o.S, "Math", {
                log1p: n(129)
            });
        },
        function(t, e1, n) {
            var o = n(0);
            o(o.S, "Math", {
                log2: function(t) {
                    return Math.log(t) / Math.LN2;
                }
            });
        },
        function(t, e1, n) {
            var o = n(0);
            o(o.S, "Math", {
                sign: n(94)
            });
        },
        function(t, e1, n) {
            var o = n(0), r = n(95), i = Math.exp;
            o(o.S + o.F * n(11)(function() {
                return -0.00000000000000002 != !Math.sinh(-0.00000000000000002);
            }), "Math", {
                sinh: function(t) {
                    return Math.abs(t = +t) < 1 ? (r(t) - r(-t)) / 2 : (i(t - 1) - i(-t - 1)) * (Math.E / 2);
                }
            });
        },
        function(t, e1, n) {
            var o = n(0), r = n(95), i = Math.exp;
            o(o.S, "Math", {
                tanh: function(t) {
                    var e1 = r(t = +t), n = r(-t);
                    return e1 == 1 / 0 ? 1 : n == 1 / 0 ? -1 : (e1 - n) / (i(t) + i(-t));
                }
            });
        },
        function(t, e1, n) {
            var o = n(0);
            o(o.S, "Math", {
                trunc: function(t) {
                    return (t > 0 ? Math.floor : Math.ceil)(t);
                }
            });
        },
        function(t, e1, n) {
            var o = n(0), r = n(47), i = String.fromCharCode, a = String.fromCodePoint;
            o(o.S + o.F * (!!a && 1 != a.length), "String", {
                fromCodePoint: function(t) {
                    for(var e1, n = [], o = arguments.length, a = 0; o > a;){
                        if (e1 = +arguments[a++], r(e1, 1114111) !== e1) throw RangeError(e1 + " is not a valid code point");
                        n.push(e1 < 65536 ? i(e1) : i(55296 + ((e1 -= 65536) >> 10), e1 % 1024 + 56320));
                    }
                    return n.join("");
                }
            });
        },
        function(t, e1, n) {
            var o = n(0), r = n(28), i = n(16);
            o(o.S, "String", {
                raw: function(t) {
                    for(var e1 = r(t.raw), n = i(e1.length), o = arguments.length, a = [], s = 0; n > s;)a.push(String(e1[s++])), s < o && a.push(String(arguments[s]));
                    return a.join("");
                }
            });
        },
        function(t, e1, n) {
            "use strict";
            n(54)("trim", function(t) {
                return function() {
                    return t(this, 3);
                };
            });
        },
        function(t, e1, n) {
            "use strict";
            var o = n(96)(!0);
            n(97)(String, "String", function(t) {
                this._t = String(t), this._i = 0;
            }, function() {
                var t, e1 = this._t, n = this._i;
                return n >= e1.length ? {
                    value: void 0,
                    done: !0
                } : (t = o(e1, n), this._i += t.length, {
                    value: t,
                    done: !1
                });
            });
        },
        function(t, e1, n) {
            "use strict";
            var o = n(0), r = n(96)(!1);
            o(o.P, "String", {
                codePointAt: function(t) {
                    return r(this, t);
                }
            });
        },
        function(t, e1, n) {
            "use strict";
            var o = n(0), r = n(16), i = n(98), a = "".endsWith;
            o(o.P + o.F * n(100)("endsWith"), "String", {
                endsWith: function(t) {
                    var e1 = i(this, t, "endsWith"), n = arguments.length > 1 ? arguments[1] : void 0, o = r(e1.length), s = void 0 === n ? o : Math.min(r(n), o), l = String(t);
                    return a ? a.call(e1, l, s) : e1.slice(s - l.length, s) === l;
                }
            });
        },
        function(t, e1, n) {
            "use strict";
            var o = n(0), r = n(98);
            o(o.P + o.F * n(100)("includes"), "String", {
                includes: function(t) {
                    return !!~r(this, t, "includes").indexOf(t, arguments.length > 1 ? arguments[1] : void 0);
                }
            });
        },
        function(t, e1, n) {
            var o = n(0);
            o(o.P, "String", {
                repeat: n(93)
            });
        },
        function(t, e1, n) {
            "use strict";
            var o = n(0), r = n(16), i = n(98), a = "".startsWith;
            o(o.P + o.F * n(100)("startsWith"), "String", {
                startsWith: function(t) {
                    var e1 = i(this, t, "startsWith"), n = r(Math.min(arguments.length > 1 ? arguments[1] : void 0, e1.length)), o = String(t);
                    return a ? a.call(e1, o, n) : e1.slice(n, n + o.length) === o;
                }
            });
        },
        function(t, e1, n) {
            "use strict";
            n(24)("anchor", function(t) {
                return function(e1) {
                    return t(this, "a", "name", e1);
                };
            });
        },
        function(t, e1, n) {
            "use strict";
            n(24)("big", function(t) {
                return function() {
                    return t(this, "big", "", "");
                };
            });
        },
        function(t, e1, n) {
            "use strict";
            n(24)("blink", function(t) {
                return function() {
                    return t(this, "blink", "", "");
                };
            });
        },
        function(t, e1, n) {
            "use strict";
            n(24)("bold", function(t) {
                return function() {
                    return t(this, "b", "", "");
                };
            });
        },
        function(t, e1, n) {
            "use strict";
            n(24)("fixed", function(t) {
                return function() {
                    return t(this, "tt", "", "");
                };
            });
        },
        function(t, e1, n) {
            "use strict";
            n(24)("fontcolor", function(t) {
                return function(e1) {
                    return t(this, "font", "color", e1);
                };
            });
        },
        function(t, e1, n) {
            "use strict";
            n(24)("fontsize", function(t) {
                return function(e1) {
                    return t(this, "font", "size", e1);
                };
            });
        },
        function(t, e1, n) {
            "use strict";
            n(24)("italics", function(t) {
                return function() {
                    return t(this, "i", "", "");
                };
            });
        },
        function(t, e1, n) {
            "use strict";
            n(24)("link", function(t) {
                return function(e1) {
                    return t(this, "a", "href", e1);
                };
            });
        },
        function(t, e1, n) {
            "use strict";
            n(24)("small", function(t) {
                return function() {
                    return t(this, "small", "", "");
                };
            });
        },
        function(t, e1, n) {
            "use strict";
            n(24)("strike", function(t) {
                return function() {
                    return t(this, "strike", "", "");
                };
            });
        },
        function(t, e1, n) {
            "use strict";
            n(24)("sub", function(t) {
                return function() {
                    return t(this, "sub", "", "");
                };
            });
        },
        function(t, e1, n) {
            "use strict";
            n(24)("sup", function(t) {
                return function() {
                    return t(this, "sup", "", "");
                };
            });
        },
        function(t, e1, n) {
            var o = n(0);
            o(o.S, "Date", {
                now: function() {
                    return (new Date).getTime();
                }
            });
        },
        function(t, e1, n) {
            "use strict";
            var o = n(0), r = n(22), i = n(40);
            o(o.P + o.F * n(11)(function() {
                return null !== new Date(NaN).toJSON() || 1 !== Date.prototype.toJSON.call({
                    toISOString: function() {
                        return 1;
                    }
                });
            }), "Date", {
                toJSON: function(t) {
                    var e1 = r(this), n = i(e1);
                    return "number" != typeof n || isFinite(n) ? e1.toISOString() : null;
                }
            });
        },
        function(t, e1, n) {
            var o = n(0), r = n(271);
            o(o.P + o.F * (Date.prototype.toISOString !== r), "Date", {
                toISOString: r
            });
        },
        function(t, e1, n) {
            "use strict";
            var o = n(11), r = Date.prototype.getTime, i = Date.prototype.toISOString, a = function(t) {
                return t > 9 ? t : "0" + t;
            };
            t.exports = o(function() {
                return "0385-07-25T07:06:39.999Z" != i.call(new Date(-50000000000001));
            }) || !o(function() {
                i.call(new Date(NaN));
            }) ? function() {
                if (!isFinite(r.call(this))) throw RangeError("Invalid time value");
                var t = this, e1 = t.getUTCFullYear(), n = t.getUTCMilliseconds(), o = e1 < 0 ? "-" : e1 > 9999 ? "+" : "";
                return o + ("00000" + Math.abs(e1)).slice(o ? -6 : -4) + "-" + a(t.getUTCMonth() + 1) + "-" + a(t.getUTCDate()) + "T" + a(t.getUTCHours()) + ":" + a(t.getUTCMinutes()) + ":" + a(t.getUTCSeconds()) + "." + (n > 99 ? n : "0" + a(n)) + "Z";
            } : i;
        },
        function(t, e1, n) {
            var o = Date.prototype, r = o.toString, i = o.getTime;
            new Date(NaN) + "" != "Invalid Date" && n(23)(o, "toString", function() {
                var t = i.call(this);
                return t == t ? r.call(this) : "Invalid Date";
            });
        },
        function(t, e1, n) {
            var o = n(15)("toPrimitive"), r = Date.prototype;
            o in r || n(27)(r, o, n(274));
        },
        function(t, e1, n) {
            "use strict";
            var o = n(12), r = n(40);
            t.exports = function(t) {
                if ("string" !== t && "number" !== t && "default" !== t) throw TypeError("Incorrect hint");
                return r(o(this), "number" != t);
            };
        },
        function(t, e1, n) {
            var o = n(0);
            o(o.S, "Array", {
                isArray: n(72)
            });
        },
        function(t, e1, n) {
            "use strict";
            var o = n(31), r = n(0), i = n(22), a = n(131), s = n(101), l = n(16), c = n(102), u = n(103);
            r(r.S + r.F * !n(73)(function(t) {
                Array.from(t);
            }), "Array", {
                from: function(t) {
                    var e1, n, r, f, d = i(t), p = "function" == typeof this ? this : Array, h = arguments.length, v = h > 1 ? arguments[1] : void 0, g = void 0 !== v, y = 0, b = u(d);
                    if (g && (v = o(v, h > 2 ? arguments[2] : void 0, 2)), null == b || p == Array && s(b)) for(n = new p(e1 = l(d.length)); e1 > y; y++)c(n, y, g ? v(d[y], y) : d[y]);
                    else for(f = b.call(d), n = new p; !(r = f.next()).done; y++)c(n, y, g ? a(f, v, [
                        r.value,
                        y
                    ], !0) : r.value);
                    return n.length = y, n;
                }
            });
        },
        function(t, e1, n) {
            "use strict";
            var o = n(0), r = n(102);
            o(o.S + o.F * n(11)(function() {
                function t() {}
                return !(Array.of.call(t) instanceof t);
            }), "Array", {
                of: function() {
                    for(var t = 0, e1 = arguments.length, n = new ("function" == typeof this ? this : Array)(e1); e1 > t;)r(n, t, arguments[t++]);
                    return n.length = e1, n;
                }
            });
        },
        function(t, e1, n) {
            "use strict";
            var o = n(0), r = n(28), i = [].join;
            o(o.P + o.F * (n(63) != Object || !n(29)(i)), "Array", {
                join: function(t) {
                    return i.call(r(this), void 0 === t ? "," : t);
                }
            });
        },
        function(t, e1, n) {
            "use strict";
            var o = n(0), r = n(89), i = n(37), a = n(47), s = n(16), l = [].slice;
            o(o.P + o.F * n(11)(function() {
                r && l.call(r);
            }), "Array", {
                slice: function(t, e1) {
                    var n = s(this.length), o = i(this);
                    if (e1 = void 0 === e1 ? n : e1, "Array" == o) return l.call(this, t, e1);
                    for(var r = a(t, n), c = a(e1, n), u = s(c - r), f = new Array(u), d = 0; d < u; d++)f[d] = "String" == o ? this.charAt(r + d) : this[r + d];
                    return f;
                }
            });
        },
        function(t, e1, n) {
            "use strict";
            var o = n(0), r = n(32), i = n(22), a = n(11), s = [].sort, l = [
                1,
                2,
                3
            ];
            o(o.P + o.F * (a(function() {
                l.sort(void 0);
            }) || !a(function() {
                l.sort(null);
            }) || !n(29)(s)), "Array", {
                sort: function(t) {
                    return void 0 === t ? s.call(i(this)) : s.call(i(this), r(t));
                }
            });
        },
        function(t, e1, n) {
            "use strict";
            var o = n(0), r = n(36)(0), i = n(29)([].forEach, !0);
            o(o.P + o.F * !i, "Array", {
                forEach: function(t) {
                    return r(this, t, arguments[1]);
                }
            });
        },
        function(t, e1, n) {
            var o = n(13), r = n(72), i = n(15)("species");
            t.exports = function(t) {
                var e1;
                return r(t) && ("function" != typeof (e1 = t.constructor) || e1 !== Array && !r(e1.prototype) || (e1 = void 0), o(e1) && null === (e1 = e1[i]) && (e1 = void 0)), void 0 === e1 ? Array : e1;
            };
        },
        function(t, e1, n) {
            "use strict";
            var o = n(0), r = n(36)(1);
            o(o.P + o.F * !n(29)([].map, !0), "Array", {
                map: function(t) {
                    return r(this, t, arguments[1]);
                }
            });
        },
        function(t, e1, n) {
            "use strict";
            var o = n(0), r = n(36)(2);
            o(o.P + o.F * !n(29)([].filter, !0), "Array", {
                filter: function(t) {
                    return r(this, t, arguments[1]);
                }
            });
        },
        function(t, e1, n) {
            "use strict";
            var o = n(0), r = n(36)(3);
            o(o.P + o.F * !n(29)([].some, !0), "Array", {
                some: function(t) {
                    return r(this, t, arguments[1]);
                }
            });
        },
        function(t, e1, n) {
            "use strict";
            var o = n(0), r = n(36)(4);
            o(o.P + o.F * !n(29)([].every, !0), "Array", {
                every: function(t) {
                    return r(this, t, arguments[1]);
                }
            });
        },
        function(t, e1, n) {
            "use strict";
            var o = n(0), r = n(133);
            o(o.P + o.F * !n(29)([].reduce, !0), "Array", {
                reduce: function(t) {
                    return r(this, t, arguments.length, arguments[1], !1);
                }
            });
        },
        function(t, e1, n) {
            "use strict";
            var o = n(0), r = n(133);
            o(o.P + o.F * !n(29)([].reduceRight, !0), "Array", {
                reduceRight: function(t) {
                    return r(this, t, arguments.length, arguments[1], !0);
                }
            });
        },
        function(t, e1, n) {
            "use strict";
            var o = n(0), r = n(70)(!1), i = [].indexOf, a = !!i && 1 / [
                1
            ].indexOf(1, -0) < 0;
            o(o.P + o.F * (a || !n(29)(i)), "Array", {
                indexOf: function(t) {
                    return a ? i.apply(this, arguments) || 0 : r(this, t, arguments[1]);
                }
            });
        },
        function(t, e1, n) {
            "use strict";
            var o = n(0), r = n(28), i = n(33), a = n(16), s = [].lastIndexOf, l = !!s && 1 / [
                1
            ].lastIndexOf(1, -0) < 0;
            o(o.P + o.F * (l || !n(29)(s)), "Array", {
                lastIndexOf: function(t) {
                    if (l) return s.apply(this, arguments) || 0;
                    var e1 = r(this), n = a(e1.length), o = n - 1;
                    for(arguments.length > 1 && (o = Math.min(o, i(arguments[1]))), o < 0 && (o = n + o); o >= 0; o--)if (o in e1 && e1[o] === t) return o || 0;
                    return -1;
                }
            });
        },
        function(t, e1, n) {
            var o = n(0);
            o(o.P, "Array", {
                copyWithin: n(134)
            }), n(51)("copyWithin");
        },
        function(t, e1, n) {
            var o = n(0);
            o(o.P, "Array", {
                fill: n(104)
            }), n(51)("fill");
        },
        function(t, e1, n) {
            "use strict";
            var o = n(0), r = n(36)(5), i = !0;
            "find" in [] && Array(1).find(function() {
                i = !1;
            }), o(o.P + o.F * i, "Array", {
                find: function(t) {
                    return r(this, t, arguments.length > 1 ? arguments[1] : void 0);
                }
            }), n(51)("find");
        },
        function(t, e1, n) {
            "use strict";
            var o = n(0), r = n(36)(6), i = "findIndex", a = !0;
            i in [] && Array(1)[i](function() {
                a = !1;
            }), o(o.P + o.F * a, "Array", {
                findIndex: function(t) {
                    return r(this, t, arguments.length > 1 ? arguments[1] : void 0);
                }
            }), n(51)(i);
        },
        function(t, e1, n) {
            n(56)("Array");
        },
        function(t, e1, n) {
            var o = n(10), r = n(92), i = n(19).f, a = n(49).f, s = n(99), l = n(74), c = o.RegExp, u = c, f = c.prototype, d = /a/g, p = /a/g, h = new c(d) !== d;
            if (n(18) && (!h || n(11)(function() {
                return p[n(15)("match")] = !1, c(d) != d || c(p) == p || "/a/i" != c(d, "i");
            }))) {
                c = function(t, e1) {
                    var n = this instanceof c, o = s(t), i = void 0 === e1;
                    return !n && o && t.constructor === c && i ? t : r(h ? new u(o && !i ? t.source : t, e1) : u((o = t instanceof c) ? t.source : t, o && i ? l.call(t) : e1), n ? this : f, c);
                };
                for(var v = function(t) {
                    (t in c) || i(c, t, {
                        configurable: !0,
                        get: function() {
                            return u[t];
                        },
                        set: function(e1) {
                            u[t] = e1;
                        }
                    });
                }, g = a(u), y = 0; g.length > y;)v(g[y++]);
                f.constructor = c, c.prototype = f, n(23)(o, "RegExp", c);
            }
            n(56)("RegExp");
        },
        function(t, e1, n) {
            "use strict";
            n(137);
            var o = n(12), r = n(74), i = n(18), a = /./.toString, s = function(t) {
                n(23)(RegExp.prototype, "toString", t, !0);
            };
            n(11)(function() {
                return "/a/b" != a.call({
                    source: "a",
                    flags: "b"
                });
            }) ? s(function() {
                var t = o(this);
                return "/".concat(t.source, "/", "flags" in t ? t.flags : !i && t instanceof RegExp ? r.call(t) : void 0);
            }) : "toString" != a.name && s(function() {
                return a.call(this);
            });
        },
        function(t, e1, n) {
            "use strict";
            var o = n(12), r = n(16), i = n(107), a = n(75);
            n(76)("match", 1, function(t, e1, n, s) {
                return [
                    function(n) {
                        var o = t(this), r = null == n ? void 0 : n[e1];
                        return void 0 !== r ? r.call(n, o) : new RegExp(n)[e1](String(o));
                    },
                    function(t) {
                        var e1 = s(n, t, this);
                        if (e1.done) return e1.value;
                        var l = o(t), c = String(this);
                        if (!l.global) return a(l, c);
                        var u = l.unicode;
                        l.lastIndex = 0;
                        for(var f, d = [], p = 0; null !== (f = a(l, c));){
                            var h = String(f[0]);
                            d[p] = h, "" === h && (l.lastIndex = i(c, r(l.lastIndex), u)), p++;
                        }
                        return 0 === p ? null : d;
                    }
                ];
            });
        },
        function(t, e1, n) {
            "use strict";
            var o = n(12), r = n(22), i = n(16), a = n(33), s = n(107), l = n(75), c = Math.max, u = Math.min, f = Math.floor, d = /\$([$&`']|\d\d?|<[^>]*>)/g, p = /\$([$&`']|\d\d?)/g;
            n(76)("replace", 2, function(t, e1, n, h) {
                return [
                    function(o, r) {
                        var i = t(this), a = null == o ? void 0 : o[e1];
                        return void 0 !== a ? a.call(o, i, r) : n.call(String(i), o, r);
                    },
                    function(t, e1) {
                        var r = h(n, t, this, e1);
                        if (r.done) return r.value;
                        var f = o(t), d = String(this), p = "function" == typeof e1;
                        p || (e1 = String(e1));
                        var g = f.global;
                        if (g) {
                            var y = f.unicode;
                            f.lastIndex = 0;
                        }
                        for(var b = [];;){
                            var m = l(f, d);
                            if (null === m) break;
                            if (b.push(m), !g) break;
                            "" === String(m[0]) && (f.lastIndex = s(d, i(f.lastIndex), y));
                        }
                        for(var k, x = "", w = 0, S = 0; S < b.length; S++){
                            m = b[S];
                            for(var T = String(m[0]), E = c(u(a(m.index), d.length), 0), B = [], C = 1; C < m.length; C++)B.push(void 0 === (k = m[C]) ? k : String(k));
                            var _ = m.groups;
                            if (p) {
                                var I = [
                                    T
                                ].concat(B, E, d);
                                void 0 !== _ && I.push(_);
                                var O = String(e1.apply(void 0, I));
                            } else O = v(T, d, E, B, _, e1);
                            E >= w && (x += d.slice(w, E) + O, w = E + T.length);
                        }
                        return x + d.slice(w);
                    }
                ];
                function v(t, e1, o, i, a, s) {
                    var l = o + t.length, c = i.length, u = p;
                    return void 0 !== a && (a = r(a), u = d), n.call(s, u, function(n, r) {
                        var s;
                        switch(r.charAt(0)){
                            case "$":
                                return "$";
                            case "&":
                                return t;
                            case "`":
                                return e1.slice(0, o);
                            case "'":
                                return e1.slice(l);
                            case "<":
                                s = a[r.slice(1, -1)];
                                break;
                            default:
                                var u = +r;
                                if (0 === u) return n;
                                if (u > c) {
                                    var d = f(u / 10);
                                    return 0 === d ? n : d <= c ? void 0 === i[d - 1] ? r.charAt(1) : i[d - 1] + r.charAt(1) : n;
                                }
                                s = i[u - 1];
                        }
                        return void 0 === s ? "" : s;
                    });
                }
            });
        },
        function(t, e1, n) {
            "use strict";
            var o = n(12), r = n(122), i = n(75);
            n(76)("search", 1, function(t, e1, n, a) {
                return [
                    function(n) {
                        var o = t(this), r = null == n ? void 0 : n[e1];
                        return void 0 !== r ? r.call(n, o) : new RegExp(n)[e1](String(o));
                    },
                    function(t) {
                        var e1 = a(n, t, this);
                        if (e1.done) return e1.value;
                        var s = o(t), l = String(this), c = s.lastIndex;
                        r(c, 0) || (s.lastIndex = 0);
                        var u = i(s, l);
                        return r(s.lastIndex, c) || (s.lastIndex = c), null === u ? -1 : u.index;
                    }
                ];
            });
        },
        function(t, e1, n) {
            "use strict";
            var o = n(99), r = n(12), i = n(66), a = n(107), s = n(16), l = n(75), c = n(106), u = n(11), f = Math.min, d = [].push, p = "length", h = !u(function() {
                RegExp(4294967295, "y");
            });
            n(76)("split", 2, function(t, e1, n, u) {
                var v;
                return v = "c" == "abbc".split(/(b)*/)[1] || 4 != "test".split(/(?:)/, -1)[p] || 2 != "ab".split(/(?:ab)*/)[p] || 4 != ".".split(/(.?)(.?)/)[p] || ".".split(/()()/)[p] > 1 || "".split(/.?/)[p] ? function(t, e1) {
                    var r = String(this);
                    if (void 0 === t && 0 === e1) return [];
                    if (!o(t)) return n.call(r, t, e1);
                    for(var i, a, s, l = [], u = (t.ignoreCase ? "i" : "") + (t.multiline ? "m" : "") + (t.unicode ? "u" : "") + (t.sticky ? "y" : ""), f = 0, h = void 0 === e1 ? 4294967295 : e1 >>> 0, v = new RegExp(t.source, u + "g"); (i = c.call(v, r)) && !((a = v.lastIndex) > f && (l.push(r.slice(f, i.index)), i[p] > 1 && i.index < r[p] && d.apply(l, i.slice(1)), s = i[0][p], f = a, l[p] >= h));)v.lastIndex === i.index && v.lastIndex++;
                    return f === r[p] ? !s && v.test("") || l.push("") : l.push(r.slice(f)), l[p] > h ? l.slice(0, h) : l;
                } : "0".split(void 0, 0)[p] ? function(t, e1) {
                    return void 0 === t && 0 === e1 ? [] : n.call(this, t, e1);
                } : n, [
                    function(n, o) {
                        var r = t(this), i = null == n ? void 0 : n[e1];
                        return void 0 !== i ? i.call(n, r, o) : v.call(String(r), n, o);
                    },
                    function(t, e1) {
                        var o = u(v, t, this, e1, v !== n);
                        if (o.done) return o.value;
                        var c = r(t), d = String(this), p = i(c, RegExp), g = c.unicode, y = (c.ignoreCase ? "i" : "") + (c.multiline ? "m" : "") + (c.unicode ? "u" : "") + (h ? "y" : "g"), b = new p(h ? c : "^(?:" + c.source + ")", y), m = void 0 === e1 ? 4294967295 : e1 >>> 0;
                        if (0 === m) return [];
                        if (0 === d.length) return null === l(b, d) ? [
                            d
                        ] : [];
                        for(var k = 0, x = 0, w = []; x < d.length;){
                            b.lastIndex = h ? x : 0;
                            var S, T = l(b, h ? d : d.slice(x));
                            if (null === T || (S = f(s(b.lastIndex + (h ? 0 : x)), d.length)) === k) x = a(d, x, g);
                            else {
                                if (w.push(d.slice(k, x)), w.length === m) return w;
                                for(var E = 1; E <= T.length - 1; E++)if (w.push(T[E]), w.length === m) return w;
                                x = k = S;
                            }
                        }
                        return w.push(d.slice(k)), w;
                    }
                ];
            });
        },
        function(t, e1, n) {
            var o = n(10), r = n(108).set, i = o.MutationObserver || o.WebKitMutationObserver, a = o.process, s = o.Promise, l = "process" == n(37)(a);
            t.exports = function() {
                var t, e1, n, c = function() {
                    var o, r;
                    for(l && (o = a.domain) && o.exit(); t;){
                        r = t.fn, t = t.next;
                        try {
                            r();
                        } catch (o1) {
                            throw t ? n() : e1 = void 0, o1;
                        }
                    }
                    e1 = void 0, o && o.enter();
                };
                if (l) n = function() {
                    a.nextTick(c);
                };
                else if (!i || o.navigator && o.navigator.standalone) {
                    if (s && s.resolve) {
                        var u = s.resolve(void 0);
                        n = function() {
                            u.then(c);
                        };
                    } else n = function() {
                        r.call(o, c);
                    };
                } else {
                    var f = !0, d = document.createTextNode("");
                    new i(c).observe(d, {
                        characterData: !0
                    }), n = function() {
                        d.data = f = !f;
                    };
                }
                return function(o) {
                    var r = {
                        fn: o,
                        next: void 0
                    };
                    e1 && (e1.next = r), t || (t = r, n()), e1 = r;
                };
            };
        },
        function(t, e1) {
            t.exports = function(t) {
                try {
                    return {
                        e: !1,
                        v: t()
                    };
                } catch (t1) {
                    return {
                        e: !0,
                        v: t1
                    };
                }
            };
        },
        function(t, e1, n) {
            "use strict";
            var o = n(141), r = n(52);
            t.exports = n(79)("Map", function(t) {
                return function() {
                    return t(this, arguments.length > 0 ? arguments[0] : void 0);
                };
            }, {
                get: function(t) {
                    var e1 = o.getEntry(r(this, "Map"), t);
                    return e1 && e1.v;
                },
                set: function(t, e1) {
                    return o.def(r(this, "Map"), 0 === t ? 0 : t, e1);
                }
            }, o, !0);
        },
        function(t, e1, n) {
            "use strict";
            var o = n(141), r = n(52);
            t.exports = n(79)("Set", function(t) {
                return function() {
                    return t(this, arguments.length > 0 ? arguments[0] : void 0);
                };
            }, {
                add: function(t) {
                    return o.def(r(this, "Set"), t = 0 === t ? 0 : t, t);
                }
            }, o);
        },
        function(t, e1, n) {
            "use strict";
            var o, r = n(10), i = n(36)(0), a = n(23), s = n(41), l = n(121), c = n(142), u = n(13), f = n(52), d = n(52), p = !r.ActiveXObject && "ActiveXObject" in r, h = s.getWeak, v = Object.isExtensible, g = c.ufstore, y = function(t) {
                return function() {
                    return t(this, arguments.length > 0 ? arguments[0] : void 0);
                };
            }, b = {
                get: function(t) {
                    if (u(t)) {
                        var e1 = h(t);
                        return !0 === e1 ? g(f(this, "WeakMap")).get(t) : e1 ? e1[this._i] : void 0;
                    }
                },
                set: function(t, e1) {
                    return c.def(f(this, "WeakMap"), t, e1);
                }
            }, m = t.exports = n(79)("WeakMap", y, b, c, !0, !0);
            d && p && (l((o = c.getConstructor(y, "WeakMap")).prototype, b), s.NEED = !0, i([
                "delete",
                "has",
                "get",
                "set"
            ], function(t) {
                var e1 = m.prototype, n = e1[t];
                a(e1, t, function(e1, r) {
                    if (u(e1) && !v(e1)) {
                        this._f || (this._f = new o);
                        var i = this._f[t](e1, r);
                        return "set" == t ? this : i;
                    }
                    return n.call(this, e1, r);
                });
            }));
        },
        function(t, e1, n) {
            "use strict";
            var o = n(142), r = n(52);
            n(79)("WeakSet", function(t) {
                return function() {
                    return t(this, arguments.length > 0 ? arguments[0] : void 0);
                };
            }, {
                add: function(t) {
                    return o.def(r(this, "WeakSet"), t, !0);
                }
            }, o, !1, !0);
        },
        function(t, e1, n) {
            "use strict";
            var o = n(0), r = n(80), i = n(109), a = n(12), s = n(47), l = n(16), c = n(13), u = n(10).ArrayBuffer, f = n(66), d = i.ArrayBuffer, p = i.DataView, h = r.ABV && u.isView, v = d.prototype.slice, g = r.VIEW;
            o(o.G + o.W + o.F * (u !== d), {
                ArrayBuffer: d
            }), o(o.S + o.F * !r.CONSTR, "ArrayBuffer", {
                isView: function(t) {
                    return h && h(t) || c(t) && g in t;
                }
            }), o(o.P + o.U + o.F * n(11)(function() {
                return !new d(2).slice(1, void 0).byteLength;
            }), "ArrayBuffer", {
                slice: function(t, e1) {
                    if (void 0 !== v && void 0 === e1) return v.call(a(this), t);
                    for(var n = a(this).byteLength, o = s(t, n), r = s(void 0 === e1 ? n : e1, n), i = new (f(this, d))(l(r - o)), c = new p(this), u = new p(i), h = 0; o < r;)u.setUint8(h++, c.getUint8(o++));
                    return i;
                }
            }), n(56)("ArrayBuffer");
        },
        function(t, e1, n) {
            var o = n(0);
            o(o.G + o.W + o.F * !n(80).ABV, {
                DataView: n(109).DataView
            });
        },
        function(t, e1, n) {
            n(39)("Int8", 1, function(t) {
                return function(e1, n, o) {
                    return t(this, e1, n, o);
                };
            });
        },
        function(t, e1, n) {
            n(39)("Uint8", 1, function(t) {
                return function(e1, n, o) {
                    return t(this, e1, n, o);
                };
            });
        },
        function(t, e1, n) {
            n(39)("Uint8", 1, function(t) {
                return function(e1, n, o) {
                    return t(this, e1, n, o);
                };
            }, !0);
        },
        function(t, e1, n) {
            n(39)("Int16", 2, function(t) {
                return function(e1, n, o) {
                    return t(this, e1, n, o);
                };
            });
        },
        function(t, e1, n) {
            n(39)("Uint16", 2, function(t) {
                return function(e1, n, o) {
                    return t(this, e1, n, o);
                };
            });
        },
        function(t, e1, n) {
            n(39)("Int32", 4, function(t) {
                return function(e1, n, o) {
                    return t(this, e1, n, o);
                };
            });
        },
        function(t, e1, n) {
            n(39)("Uint32", 4, function(t) {
                return function(e1, n, o) {
                    return t(this, e1, n, o);
                };
            });
        },
        function(t, e1, n) {
            n(39)("Float32", 4, function(t) {
                return function(e1, n, o) {
                    return t(this, e1, n, o);
                };
            });
        },
        function(t, e1, n) {
            n(39)("Float64", 8, function(t) {
                return function(e1, n, o) {
                    return t(this, e1, n, o);
                };
            });
        },
        function(t, e1, n) {
            var o = n(0), r = n(32), i = n(12), a = (n(10).Reflect || {}).apply, s = Function.apply;
            o(o.S + o.F * !n(11)(function() {
                a(function() {});
            }), "Reflect", {
                apply: function(t, e1, n) {
                    var o = r(t), l = i(n);
                    return a ? a(o, e1, l) : s.call(o, e1, l);
                }
            });
        },
        function(t, e1, n) {
            var o = n(0), r = n(48), i = n(32), a = n(12), s = n(13), l = n(11), c = n(123), u = (n(10).Reflect || {}).construct, f = l(function() {
                function t() {}
                return !(u(function() {}, [], t) instanceof t);
            }), d = !l(function() {
                u(function() {});
            });
            o(o.S + o.F * (f || d), "Reflect", {
                construct: function(t, e1) {
                    i(t), a(e1);
                    var n = arguments.length < 3 ? t : i(arguments[2]);
                    if (d && !f) return u(t, e1, n);
                    if (t == n) {
                        switch(e1.length){
                            case 0:
                                return new t;
                            case 1:
                                return new t(e1[0]);
                            case 2:
                                return new t(e1[0], e1[1]);
                            case 3:
                                return new t(e1[0], e1[1], e1[2]);
                            case 4:
                                return new t(e1[0], e1[1], e1[2], e1[3]);
                        }
                        var o = [
                            null
                        ];
                        return o.push.apply(o, e1), new (c.apply(t, o));
                    }
                    var l = n.prototype, p = r(s(l) ? l : Object.prototype), h = Function.apply.call(t, p, e1);
                    return s(h) ? h : p;
                }
            });
        },
        function(t, e1, n) {
            var o = n(19), r = n(0), i = n(12), a = n(40);
            r(r.S + r.F * n(11)(function() {
                Reflect.defineProperty(o.f({}, 1, {
                    value: 1
                }), 1, {
                    value: 2
                });
            }), "Reflect", {
                defineProperty: function(t, e1, n) {
                    i(t), e1 = a(e1, !0), i(n);
                    try {
                        return o.f(t, e1, n), !0;
                    } catch (t1) {
                        return !1;
                    }
                }
            });
        },
        function(t, e1, n) {
            var o = n(0), r = n(34).f, i = n(12);
            o(o.S, "Reflect", {
                deleteProperty: function(t, e1) {
                    var n = r(i(t), e1);
                    return !(n && !n.configurable) && delete t[e1];
                }
            });
        },
        function(t, e1, n) {
            "use strict";
            var o = n(0), r = n(12), i = function(t) {
                this._t = r(t), this._i = 0;
                var e1, n = this._k = [];
                for(e1 in t)n.push(e1);
            };
            n(130)(i, "Object", function() {
                var t, e1 = this._k;
                do {
                    if (this._i >= e1.length) return {
                        value: void 0,
                        done: !0
                    };
                }while (!((t = e1[this._i++]) in this._t));
                return {
                    value: t,
                    done: !1
                };
            }), o(o.S, "Reflect", {
                enumerate: function(t) {
                    return new i(t);
                }
            });
        },
        function(t, e1, n) {
            var o = n(34), r = n(50), i = n(26), a = n(0), s = n(13), l = n(12);
            a(a.S, "Reflect", {
                get: function t(e1, n) {
                    var a, c, u = arguments.length < 3 ? e1 : arguments[2];
                    return l(e1) === u ? e1[n] : (a = o.f(e1, n)) ? i(a, "value") ? a.value : void 0 !== a.get ? a.get.call(u) : void 0 : s(c = r(e1)) ? t(c, n, u) : void 0;
                }
            });
        },
        function(t, e1, n) {
            var o = n(34), r = n(0), i = n(12);
            r(r.S, "Reflect", {
                getOwnPropertyDescriptor: function(t, e1) {
                    return o.f(i(t), e1);
                }
            });
        },
        function(t, e1, n) {
            var o = n(0), r = n(50), i = n(12);
            o(o.S, "Reflect", {
                getPrototypeOf: function(t) {
                    return r(i(t));
                }
            });
        },
        function(t, e1, n) {
            var o = n(0);
            o(o.S, "Reflect", {
                has: function(t, e1) {
                    return e1 in t;
                }
            });
        },
        function(t, e1, n) {
            var o = n(0), r = n(12), i = Object.isExtensible;
            o(o.S, "Reflect", {
                isExtensible: function(t) {
                    return r(t), !i || i(t);
                }
            });
        },
        function(t, e1, n) {
            var o = n(0);
            o(o.S, "Reflect", {
                ownKeys: n(144)
            });
        },
        function(t, e1, n) {
            var o = n(0), r = n(12), i = Object.preventExtensions;
            o(o.S, "Reflect", {
                preventExtensions: function(t) {
                    r(t);
                    try {
                        return i && i(t), !0;
                    } catch (t1) {
                        return !1;
                    }
                }
            });
        },
        function(t, e1, n) {
            var o = n(19), r = n(34), i = n(50), a = n(26), s = n(0), l = n(43), c = n(12), u = n(13);
            s(s.S, "Reflect", {
                set: function t(e1, n, s) {
                    var f, d, p = arguments.length < 4 ? e1 : arguments[3], h = r.f(c(e1), n);
                    if (!h) {
                        if (u(d = i(e1))) return t(d, n, s, p);
                        h = l(0);
                    }
                    if (a(h, "value")) {
                        if (!1 === h.writable || !u(p)) return !1;
                        if (f = r.f(p, n)) {
                            if (f.get || f.set || !1 === f.writable) return !1;
                            f.value = s, o.f(p, n, f);
                        } else o.f(p, n, l(0, s));
                        return !0;
                    }
                    return void 0 !== h.set && (h.set.call(p, s), !0);
                }
            });
        },
        function(t, e1, n) {
            var o = n(0), r = n(90);
            r && o(o.S, "Reflect", {
                setPrototypeOf: function(t, e1) {
                    r.check(t, e1);
                    try {
                        return r.set(t, e1), !0;
                    } catch (t1) {
                        return !1;
                    }
                }
            });
        },
        function(t, e1, n) {
            n(334), t.exports = n(17).Array.includes;
        },
        function(t, e1, n) {
            "use strict";
            var o = n(0), r = n(70)(!0);
            o(o.P, "Array", {
                includes: function(t) {
                    return r(this, t, arguments.length > 1 ? arguments[1] : void 0);
                }
            }), n(51)("includes");
        },
        function(t, e1, n) {
            n(336), t.exports = n(17).Array.flatMap;
        },
        function(t, e1, n) {
            "use strict";
            var o = n(0), r = n(337), i = n(22), a = n(16), s = n(32), l = n(132);
            o(o.P, "Array", {
                flatMap: function(t) {
                    var e1, n, o = i(this);
                    return s(t), e1 = a(o.length), n = l(o, 0), r(n, o, o, e1, 0, 1, t, arguments[1]), n;
                }
            }), n(51)("flatMap");
        },
        function(t, e1, n) {
            "use strict";
            var o = n(72), r = n(13), i = n(16), a = n(31), s = n(15)("isConcatSpreadable");
            t.exports = function t(e1, n, l, c, u, f, d, p) {
                for(var h, v, g = u, y = 0, b = !!d && a(d, p, 3); y < c;){
                    if (y in l) {
                        if (h = b ? b(l[y], y, n) : l[y], v = !1, r(h) && (v = void 0 !== (v = h[s]) ? !!v : o(h)), v && f > 0) g = t(e1, n, h, i(h.length), g, f - 1) - 1;
                        else {
                            if (g >= 9007199254740991) throw TypeError();
                            e1[g] = h;
                        }
                        g++;
                    }
                    y++;
                }
                return g;
            };
        },
        function(t, e1, n) {
            n(339), t.exports = n(17).String.padStart;
        },
        function(t, e1, n) {
            "use strict";
            var o = n(0), r = n(145), i = n(78), a = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(i);
            o(o.P + o.F * a, "String", {
                padStart: function(t) {
                    return r(this, t, arguments.length > 1 ? arguments[1] : void 0, !0);
                }
            });
        },
        function(t, e1, n) {
            n(341), t.exports = n(17).String.padEnd;
        },
        function(t, e1, n) {
            "use strict";
            var o = n(0), r = n(145), i = n(78), a = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(i);
            o(o.P + o.F * a, "String", {
                padEnd: function(t) {
                    return r(this, t, arguments.length > 1 ? arguments[1] : void 0, !1);
                }
            });
        },
        function(t, e1, n) {
            n(343), t.exports = n(17).String.trimLeft;
        },
        function(t, e1, n) {
            "use strict";
            n(54)("trimLeft", function(t) {
                return function() {
                    return t(this, 1);
                };
            }, "trimStart");
        },
        function(t, e1, n) {
            n(345), t.exports = n(17).String.trimRight;
        },
        function(t, e1, n) {
            "use strict";
            n(54)("trimRight", function(t) {
                return function() {
                    return t(this, 2);
                };
            }, "trimEnd");
        },
        function(t, e1, n) {
            n(347), t.exports = n(86).f("asyncIterator");
        },
        function(t, e1, n) {
            n(117)("asyncIterator");
        },
        function(t, e1, n) {
            n(349), t.exports = n(17).Object.getOwnPropertyDescriptors;
        },
        function(t, e1, n) {
            var o = n(0), r = n(144), i = n(28), a = n(34), s = n(102);
            o(o.S, "Object", {
                getOwnPropertyDescriptors: function(t) {
                    for(var e1, n, o = i(t), l = a.f, c = r(o), u = {}, f = 0; c.length > f;)void 0 !== (n = l(o, e1 = c[f++])) && s(u, e1, n);
                    return u;
                }
            });
        },
        function(t, e1, n) {
            n(351), t.exports = n(17).Object.values;
        },
        function(t, e1, n) {
            var o = n(0), r = n(146)(!1);
            o(o.S, "Object", {
                values: function(t) {
                    return r(t);
                }
            });
        },
        function(t, e1, n) {
            n(353), t.exports = n(17).Object.entries;
        },
        function(t, e1, n) {
            var o = n(0), r = n(146)(!0);
            o(o.S, "Object", {
                entries: function(t) {
                    return r(t);
                }
            });
        },
        function(t, e1, n) {
            "use strict";
            n(138), n(355), t.exports = n(17).Promise.finally;
        },
        function(t, e1, n) {
            "use strict";
            var o = n(0), r = n(17), i = n(10), a = n(66), s = n(140);
            o(o.P + o.R, "Promise", {
                finally: function(t) {
                    var e1 = a(this, r.Promise || i.Promise), n = "function" == typeof t;
                    return this.then(n ? function(n) {
                        return s(e1, t()).then(function() {
                            return n;
                        });
                    } : t, n ? function(n) {
                        return s(e1, t()).then(function() {
                            throw n;
                        });
                    } : t);
                }
            });
        },
        function(t, e1, n) {
            n(357), n(358), n(359), t.exports = n(17);
        },
        function(t, e1, n) {
            var o = n(10), r = n(0), i = n(78), a = [].slice, s = /MSIE .\./.test(i), l = function(t) {
                return function(e1, n) {
                    var o = arguments.length > 2, r = !!o && a.call(arguments, 2);
                    return t(o ? function() {
                        ("function" == typeof e1 ? e1 : Function(e1)).apply(this, r);
                    } : e1, n);
                };
            };
            r(r.G + r.B + r.F * s, {
                setTimeout: l(o.setTimeout),
                setInterval: l(o.setInterval)
            });
        },
        function(t, e1, n) {
            var o = n(0), r = n(108);
            o(o.G + o.B, {
                setImmediate: r.set,
                clearImmediate: r.clear
            });
        },
        function(t, e1, n) {
            for(var o = n(105), r = n(46), i = n(23), a = n(10), s = n(27), l = n(55), c = n(15), u = c("iterator"), f = c("toStringTag"), d = l.Array, p = {
                CSSRuleList: !0,
                CSSStyleDeclaration: !1,
                CSSValueList: !1,
                ClientRectList: !1,
                DOMRectList: !1,
                DOMStringList: !1,
                DOMTokenList: !0,
                DataTransferItemList: !1,
                FileList: !1,
                HTMLAllCollection: !1,
                HTMLCollection: !1,
                HTMLFormElement: !1,
                HTMLSelectElement: !1,
                MediaList: !0,
                MimeTypeArray: !1,
                NamedNodeMap: !1,
                NodeList: !0,
                PaintRequestList: !1,
                Plugin: !1,
                PluginArray: !1,
                SVGLengthList: !1,
                SVGNumberList: !1,
                SVGPathSegList: !1,
                SVGPointList: !1,
                SVGStringList: !1,
                SVGTransformList: !1,
                SourceBufferList: !1,
                StyleSheetList: !0,
                TextTrackCueList: !1,
                TextTrackList: !1,
                TouchList: !1
            }, h = r(p), v = 0; v < h.length; v++){
                var g, y = h[v], b = p[y], m = a[y], k = m && m.prototype;
                if (k && (k[u] || s(k, u, d), k[f] || s(k, f, y), l[y] = d, b)) for(g in o)k[g] || i(k, g, o[g], !0);
            }
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(30),
                n(2),
                n(3),
                n(364),
                n(366),
                n(367),
                n(7)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c, u) {
                "use strict";
                var f = n(8), d = n(1);
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = d(r), i = d(i), a = d(a), c = d(c), u = f(u);
                var p = function() {
                    function t(e1) {
                        var n = this;
                        (0, i.default)(this, t);
                        var o = function() {};
                        u.isObject(e1) && u.isFunction(e1.onReady) && (o = e1.onReady);
                        var r = new c.default(e1);
                        this.isReady = r.isReady.then(function() {
                            n.exportAPI(r), o();
                        });
                    }
                    return (0, a.default)(t, [
                        {
                            key: "exportAPI",
                            value: function(t) {
                                var e1 = this;
                                [
                                    "configuration"
                                ].forEach(function(n) {
                                    e1[n] = t[n];
                                }), this.destroy = function() {
                                    for(var n in Object.values(t.moduleInstances).forEach(function(t) {
                                        u.isFunction(t.destroy) && t.destroy(), t.listeners.removeAll();
                                    }), t = null, e1)Object.prototype.hasOwnProperty.call(e1, n) && delete e1[n];
                                    Object.setPrototypeOf(e1, null);
                                }, Object.setPrototypeOf(this, t.moduleInstances.API.methods), delete this.exportAPI, Object.entries({
                                    blocks: {
                                        clear: "clear",
                                        render: "render"
                                    },
                                    caret: {
                                        focus: "focus"
                                    },
                                    events: {
                                        on: "on",
                                        off: "off",
                                        emit: "emit"
                                    },
                                    saver: {
                                        save: "save"
                                    }
                                }).forEach(function(n) {
                                    var o = (0, r.default)(n, 2), i = o[0], a = o[1];
                                    Object.entries(a).forEach(function(n) {
                                        var o = (0, r.default)(n, 2), a = o[0], s = o[1];
                                        e1[s] = t.moduleInstances.API.methods[i][a];
                                    });
                                });
                            }
                        }
                    ], [
                        {
                            key: "version",
                            get: function() {
                                return "2.25.0";
                            }
                        }
                    ]), t;
                }();
                o.default = p, p.displayName = "EditorJS", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1) {
            t.exports = function(t) {
                if (Array.isArray(t)) return t;
            };
        },
        function(t, e1) {
            t.exports = function(t, e1) {
                if ("undefined" != typeof Symbol && Symbol.iterator in Object(t)) {
                    var n = [], o = !0, r = !1, i = void 0;
                    try {
                        for(var a, s = t[Symbol.iterator](); !(o = (a = s.next()).done) && (n.push(a.value), !e1 || n.length !== e1); o = !0);
                    } catch (t1) {
                        r = !0, i = t1;
                    } finally{
                        try {
                            o || null == s.return || s.return();
                        } finally{
                            if (r) throw i;
                        }
                    }
                    return n;
                }
            };
        },
        function(t, e1) {
            t.exports = function() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            };
        },
        function(t, e1, n) {
            (e1 = t.exports = function(...t) {
                return r(...t);
            }).__esModule = !0;
            const o = n(365), r = o.default;
            Object.assign(e1, o);
        },
        function(t, e1, n) {
            "use strict";
            Object.defineProperty(e1, "__esModule", {
                value: !0
            }), e1.default = function() {}, e1.revert = function() {};
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [], void 0 === (i = "function" == typeof (o = function() {
                "use strict";
                Element.prototype.matches || (Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function(t) {
                    for(var e1 = (this.document || this.ownerDocument).querySelectorAll(t), n = e1.length; --n >= 0 && e1.item(n) !== this;);
                    return n > -1;
                }), Element.prototype.closest || (Element.prototype.closest = function(t) {
                    var e1 = this;
                    if (!document.documentElement.contains(e1)) return null;
                    do {
                        if (e1.matches(t)) return e1;
                        e1 = e1.parentElement || e1.parentNode;
                    }while (null !== e1);
                    return null;
                }), Element.prototype.prepend || (Element.prototype.prepend = function(t) {
                    var e1 = document.createDocumentFragment();
                    Array.isArray(t) || (t = [
                        t
                    ]), t.forEach(function(t) {
                        var n = t instanceof Node;
                        e1.appendChild(n ? t : document.createTextNode(t));
                    }), this.insertBefore(e1, this.firstChild);
                }), Element.prototype.scrollIntoViewIfNeeded || (Element.prototype.scrollIntoViewIfNeeded = function(t) {
                    t = 0 === arguments.length || !!t;
                    var e1 = this.parentNode, n = window.getComputedStyle(e1, null), o = parseInt(n.getPropertyValue("border-top-width")), r = parseInt(n.getPropertyValue("border-left-width")), i = this.offsetTop - e1.offsetTop < e1.scrollTop, a = this.offsetTop - e1.offsetTop + this.clientHeight - o > e1.scrollTop + e1.clientHeight, s = this.offsetLeft - e1.offsetLeft < e1.scrollLeft, l = this.offsetLeft - e1.offsetLeft + this.clientWidth - r > e1.scrollLeft + e1.clientWidth, c = i && !a;
                    (i || a) && t && (e1.scrollTop = this.offsetTop - e1.offsetTop - e1.clientHeight / 2 - o + this.clientHeight / 2), (s || l) && t && (e1.scrollLeft = this.offsetLeft - e1.offsetLeft - e1.clientWidth / 2 - r + this.clientWidth / 2), (i || a || s || l) && !t && this.scrollIntoView(c);
                });
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(20),
                n(21),
                n(2),
                n(3),
                n(14),
                n(7),
                n(60),
                n(151),
                n(81)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c, u, f, d) {
                "use strict";
                var p = n(8), h = n(1);
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = h(r), i = h(i), a = h(a), s = h(s), l = h(l), c = p(c), u = h(u), d = h(d);
                var v = n(375), g = [];
                v.keys().forEach(function(t) {
                    t.match(/^\.\/[^_][\w/]*\.([tj])s$/) && g.push(v(t));
                });
                var y = function() {
                    function t(e1) {
                        var n, o, s = this;
                        (0, a.default)(this, t), this.moduleInstances = {}, this.eventsDispatcher = new d.default, this.isReady = new Promise(function(t, e1) {
                            n = t, o = e1;
                        }), Promise.resolve().then((0, i.default)(r.default.mark(function t() {
                            return r.default.wrap(function(t) {
                                for(;;)switch(t.prev = t.next){
                                    case 0:
                                        return s.configuration = e1, t.next = 3, s.validate();
                                    case 3:
                                        return t.next = 5, s.init();
                                    case 5:
                                        return t.next = 7, s.start();
                                    case 7:
                                        c.logLabeled("I'm ready! (ﾉ◕ヮ◕)ﾉ*:･ﾟ✧", "log", "", "color: #E24A75"), setTimeout((0, i.default)(r.default.mark(function t() {
                                            var e1, o, i;
                                            return r.default.wrap(function(t) {
                                                for(;;)switch(t.prev = t.next){
                                                    case 0:
                                                        return t.next = 2, s.render();
                                                    case 2:
                                                        s.configuration.autofocus && (e1 = s.moduleInstances, o = e1.BlockManager, (i = e1.Caret).setToBlock(o.blocks[0], i.positions.START), o.highlightCurrentNode()), s.moduleInstances.UI.removeLoader(), n();
                                                    case 5:
                                                    case "end":
                                                        return t.stop();
                                                }
                                            }, t);
                                        })), 500);
                                    case 9:
                                    case "end":
                                        return t.stop();
                                }
                            }, t);
                        }))).catch(function(t) {
                            c.log("Editor.js is not ready because of ".concat(t), "error"), o(t);
                        });
                    }
                    var e1, n;
                    return (0, s.default)(t, [
                        {
                            key: "validate",
                            value: (n = (0, i.default)(r.default.mark(function t() {
                                var e1, n, o;
                                return r.default.wrap(function(t) {
                                    for(;;)switch(t.prev = t.next){
                                        case 0:
                                            if (e1 = this.config, n = e1.holderId, o = e1.holder, !n || !o) {
                                                t.next = 3;
                                                break;
                                            }
                                            throw Error("\xabholderId\xbb and \xabholder\xbb param can't assign at the same time.");
                                        case 3:
                                            if (!c.isString(o) || l.default.get(o)) {
                                                t.next = 5;
                                                break;
                                            }
                                            throw Error("element with ID \xab".concat(o, "\xbb is missing. Pass correct holder's ID."));
                                        case 5:
                                            if (!o || !c.isObject(o) || l.default.isElement(o)) {
                                                t.next = 7;
                                                break;
                                            }
                                            throw Error("\xabholder\xbb value must be an Element node");
                                        case 7:
                                        case "end":
                                            return t.stop();
                                    }
                                }, t, this);
                            })), function() {
                                return n.apply(this, arguments);
                            })
                        },
                        {
                            key: "init",
                            value: function() {
                                this.constructModules(), this.configureModules();
                            }
                        },
                        {
                            key: "start",
                            value: (e1 = (0, i.default)(r.default.mark(function t() {
                                var e1, n = this;
                                return r.default.wrap(function(t) {
                                    for(;;)switch(t.prev = t.next){
                                        case 0:
                                            return e1 = [
                                                "Tools",
                                                "UI",
                                                "BlockManager",
                                                "Paste",
                                                "BlockSelection",
                                                "RectangleSelection",
                                                "CrossBlockSelection",
                                                "ReadOnly"
                                            ], t.next = 3, e1.reduce(function(t, e1) {
                                                return t.then((0, i.default)(r.default.mark(function t() {
                                                    return r.default.wrap(function(t) {
                                                        for(;;)switch(t.prev = t.next){
                                                            case 0:
                                                                return t.prev = 0, t.next = 3, n.moduleInstances[e1].prepare();
                                                            case 3:
                                                                t.next = 10;
                                                                break;
                                                            case 5:
                                                                if (t.prev = 5, t.t0 = t.catch(0), !(t.t0 instanceof f.CriticalError)) {
                                                                    t.next = 9;
                                                                    break;
                                                                }
                                                                throw new Error(t.t0.message);
                                                            case 9:
                                                                c.log("Module ".concat(e1, " was skipped because of %o"), "warn", t.t0);
                                                            case 10:
                                                            case "end":
                                                                return t.stop();
                                                        }
                                                    }, t, null, [
                                                        [
                                                            0,
                                                            5
                                                        ]
                                                    ]);
                                                })));
                                            }, Promise.resolve());
                                        case 3:
                                        case "end":
                                            return t.stop();
                                    }
                                }, t);
                            })), function() {
                                return e1.apply(this, arguments);
                            })
                        },
                        {
                            key: "render",
                            value: function() {
                                return this.moduleInstances.Renderer.render(this.config.data.blocks);
                            }
                        },
                        {
                            key: "constructModules",
                            value: function() {
                                var t = this;
                                g.forEach(function(e1) {
                                    var n = c.isFunction(e1) ? e1 : e1.default;
                                    try {
                                        t.moduleInstances[n.displayName] = new n({
                                            config: t.configuration,
                                            eventsDispatcher: t.eventsDispatcher
                                        });
                                    } catch (t1) {
                                        c.log("Module ".concat(n.displayName, " skipped because"), "error", t1);
                                    }
                                });
                            }
                        },
                        {
                            key: "configureModules",
                            value: function() {
                                for(var t in this.moduleInstances)Object.prototype.hasOwnProperty.call(this.moduleInstances, t) && (this.moduleInstances[t].state = this.getModulesDiff(t));
                            }
                        },
                        {
                            key: "getModulesDiff",
                            value: function(t) {
                                var e1 = {};
                                for(var n in this.moduleInstances)n !== t && (e1[n] = this.moduleInstances[n]);
                                return e1;
                            }
                        },
                        {
                            key: "configuration",
                            set: function(t) {
                                var e1, n;
                                c.isObject(t) ? this.config = Object.assign({}, t) : this.config = {
                                    holder: t
                                }, c.deprecationAssert(!!this.config.holderId, "config.holderId", "config.holder"), this.config.holderId && !this.config.holder && (this.config.holder = this.config.holderId, this.config.holderId = null), null == this.config.holder && (this.config.holder = "editorjs"), this.config.logLevel || (this.config.logLevel = c.LogLevels.VERBOSE), c.setLogLevel(this.config.logLevel), c.deprecationAssert(Boolean(this.config.initialBlock), "config.initialBlock", "config.defaultBlock"), this.config.defaultBlock = this.config.defaultBlock || this.config.initialBlock || "paragraph", this.config.minHeight = void 0 !== this.config.minHeight ? this.config.minHeight : 300;
                                var o = {
                                    type: this.config.defaultBlock,
                                    data: {}
                                };
                                this.config.placeholder = this.config.placeholder || !1, this.config.sanitizer = this.config.sanitizer || {
                                    p: !0,
                                    b: !0,
                                    a: !0
                                }, this.config.hideToolbar = !!this.config.hideToolbar && this.config.hideToolbar, this.config.tools = this.config.tools || {}, this.config.i18n = this.config.i18n || {}, this.config.data = this.config.data || {
                                    blocks: []
                                }, this.config.onReady = this.config.onReady || function() {}, this.config.onChange = this.config.onChange || function() {}, this.config.inlineToolbar = void 0 === this.config.inlineToolbar || this.config.inlineToolbar, !c.isEmpty(this.config.data) && this.config.data.blocks && 0 !== this.config.data.blocks.length || (this.config.data = {
                                    blocks: [
                                        o
                                    ]
                                }), this.config.readOnly = this.config.readOnly || !1, (null === (e1 = this.config.i18n) || void 0 === e1 ? void 0 : e1.messages) && u.default.setDictionary(this.config.i18n.messages), this.config.i18n.direction = (null === (n = this.config.i18n) || void 0 === n ? void 0 : n.direction) || "ltr";
                            },
                            get: function() {
                                return this.config;
                            }
                        }
                    ]), t;
                }();
                o.default = y, y.displayName = "Core", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o = n(149);
            t.exports = function(t) {
                if (Array.isArray(t)) return o(t);
            };
        },
        function(t, e1) {
            t.exports = function(t) {
                if ("undefined" != typeof Symbol && Symbol.iterator in Object(t)) return Array.from(t);
            };
        },
        function(t, e1) {
            t.exports = function() {
                throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            };
        },
        function(t, e1) {
            t.exports = function(t, e1, n) {
                return e1 in t ? Object.defineProperty(t, e1, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e1] = n, t;
            };
        },
        function(t, e1) {
            t.exports = function(t) {
                return -1 !== Function.toString.call(t).indexOf("[native code]");
            };
        },
        function(t, e1, n) {
            var o = n(110), r = n(374);
            function i(e1, n, a) {
                return r() ? t.exports = i = Reflect.construct : t.exports = i = function(t, e1, n) {
                    var r = [
                        null
                    ];
                    r.push.apply(r, e1);
                    var i = new (Function.bind.apply(t, r));
                    return n && o(i, n.prototype), i;
                }, i.apply(null, arguments);
            }
            t.exports = i;
        },
        function(t, e1) {
            t.exports = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                } catch (t) {
                    return !1;
                }
            };
        },
        function(t, e1, n) {
            var o = {
                "./api": 82,
                "./api/": 82,
                "./api/blocks": 154,
                "./api/blocks.ts": 154,
                "./api/caret": 155,
                "./api/caret.ts": 155,
                "./api/events": 156,
                "./api/events.ts": 156,
                "./api/i18n": 157,
                "./api/i18n.ts": 157,
                "./api/index": 82,
                "./api/index.ts": 82,
                "./api/inlineToolbar": 158,
                "./api/inlineToolbar.ts": 158,
                "./api/listeners": 159,
                "./api/listeners.ts": 159,
                "./api/notifier": 160,
                "./api/notifier.ts": 160,
                "./api/readonly": 161,
                "./api/readonly.ts": 161,
                "./api/sanitizer": 162,
                "./api/sanitizer.ts": 162,
                "./api/saver": 163,
                "./api/saver.ts": 163,
                "./api/selection": 164,
                "./api/selection.ts": 164,
                "./api/styles": 165,
                "./api/styles.ts": 165,
                "./api/toolbar": 166,
                "./api/toolbar.ts": 166,
                "./api/tooltip": 167,
                "./api/tooltip.ts": 167,
                "./api/ui": 168,
                "./api/ui.ts": 168,
                "./blockEvents": 169,
                "./blockEvents.ts": 169,
                "./blockManager": 170,
                "./blockManager.ts": 170,
                "./blockSelection": 171,
                "./blockSelection.ts": 171,
                "./caret": 172,
                "./caret.ts": 172,
                "./crossBlockSelection": 173,
                "./crossBlockSelection.ts": 173,
                "./dragNDrop": 174,
                "./dragNDrop.ts": 174,
                "./modificationsObserver": 175,
                "./modificationsObserver.ts": 175,
                "./paste": 176,
                "./paste.ts": 176,
                "./readonly": 177,
                "./readonly.ts": 177,
                "./rectangleSelection": 178,
                "./rectangleSelection.ts": 178,
                "./renderer": 179,
                "./renderer.ts": 179,
                "./saver": 180,
                "./saver.ts": 180,
                "./toolbar": 83,
                "./toolbar/": 83,
                "./toolbar/blockSettings": 181,
                "./toolbar/blockSettings.ts": 181,
                "./toolbar/conversion": 182,
                "./toolbar/conversion.ts": 182,
                "./toolbar/index": 83,
                "./toolbar/index.ts": 83,
                "./toolbar/inline": 183,
                "./toolbar/inline.ts": 183,
                "./tools": 184,
                "./tools.ts": 184,
                "./ui": 186,
                "./ui.ts": 186
            };
            function r(t) {
                var e1 = i(t);
                return n(e1);
            }
            function i(t) {
                if (!n.o(o, t)) {
                    var e1 = new Error("Cannot find module '" + t + "'");
                    throw e1.code = "MODULE_NOT_FOUND", e1;
                }
                return o[t];
            }
            r.keys = function() {
                return Object.keys(o);
            }, r.resolve = i, t.exports = r, r.id = 375;
        },
        function(t, e1, n) {
            var o = n(4);
            t.exports = function(t, e1) {
                for(; !Object.prototype.hasOwnProperty.call(t, e1) && null !== (t = o(t)););
                return t;
            };
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(378)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a) {
                "use strict";
                var s = n(1);
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = s(r), i = s(i), a = s(a);
                var l = function() {
                    function t() {
                        (0, r.default)(this, t);
                    }
                    return (0, i.default)(t, [
                        {
                            key: "show",
                            value: function(t) {
                                a.default.show(t);
                            }
                        }
                    ]), t;
                }();
                o.default = l, l.displayName = "Notifier", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            window, t.exports = function(t) {
                var e1 = {};
                function n(o) {
                    if (e1[o]) return e1[o].exports;
                    var r = e1[o] = {
                        i: o,
                        l: !1,
                        exports: {}
                    };
                    return t[o].call(r.exports, r, r.exports, n), r.l = !0, r.exports;
                }
                return n.m = t, n.c = e1, n.d = function(t, e1, o) {
                    n.o(t, e1) || Object.defineProperty(t, e1, {
                        enumerable: !0,
                        get: o
                    });
                }, n.r = function(t) {
                    "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
                        value: "Module"
                    }), Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                }, n.t = function(t, e1) {
                    if (1 & e1 && (t = n(t)), 8 & e1) return t;
                    if (4 & e1 && "object" == typeof t && t && t.__esModule) return t;
                    var o = Object.create(null);
                    if (n.r(o), Object.defineProperty(o, "default", {
                        enumerable: !0,
                        value: t
                    }), 2 & e1 && "string" != typeof t) for(var r in t)n.d(o, r, (function(e1) {
                        return t[e1];
                    }).bind(null, r));
                    return o;
                }, n.n = function(t) {
                    var e1 = t && t.__esModule ? function() {
                        return t.default;
                    } : function() {
                        return t;
                    };
                    return n.d(e1, "a", e1), e1;
                }, n.o = function(t, e1) {
                    return Object.prototype.hasOwnProperty.call(t, e1);
                }, n.p = "/", n(n.s = 0);
            }([
                function(t, e1, n) {
                    "use strict";
                    n(1), t.exports = function() {
                        var t = n(6), e1 = null;
                        return {
                            show: function(n) {
                                if (n.message) {
                                    !function() {
                                        if (e1) return !0;
                                        e1 = t.getWrapper(), document.body.appendChild(e1);
                                    }();
                                    var o = null, r = n.time || 8e3;
                                    switch(n.type){
                                        case "confirm":
                                            o = t.confirm(n);
                                            break;
                                        case "prompt":
                                            o = t.prompt(n);
                                            break;
                                        default:
                                            o = t.alert(n), window.setTimeout(function() {
                                                o.remove();
                                            }, r);
                                    }
                                    e1.appendChild(o), o.classList.add("cdx-notify--bounce-in");
                                }
                            }
                        };
                    }();
                },
                function(t, e1, n) {
                    var o = n(2);
                    "string" == typeof o && (o = [
                        [
                            t.i,
                            o,
                            ""
                        ]
                    ]), n(4)(o, {
                        hmr: !0,
                        transform: void 0,
                        insertInto: void 0
                    }), o.locals && (t.exports = o.locals);
                },
                function(t, e1, n) {
                    (t.exports = n(3)(!1)).push([
                        t.i,
                        '.cdx-notify--error{background:#fffbfb!important}.cdx-notify--error::before{background:#fb5d5d!important}.cdx-notify__input{max-width:130px;padding:5px 10px;background:#f7f7f7;border:0;border-radius:3px;font-size:13px;color:#656b7c;outline:0}.cdx-notify__input:-ms-input-placeholder{color:#656b7c}.cdx-notify__input::placeholder{color:#656b7c}.cdx-notify__input:focus:-ms-input-placeholder{color:rgba(101,107,124,.3)}.cdx-notify__input:focus::placeholder{color:rgba(101,107,124,.3)}.cdx-notify__button{border:none;border-radius:3px;font-size:13px;padding:5px 10px;cursor:pointer}.cdx-notify__button:last-child{margin-left:10px}.cdx-notify__button--cancel{background:#f2f5f7;box-shadow:0 2px 1px 0 rgba(16,19,29,0);color:#656b7c}.cdx-notify__button--cancel:hover{background:#eee}.cdx-notify__button--confirm{background:#34c992;box-shadow:0 1px 1px 0 rgba(18,49,35,.05);color:#fff}.cdx-notify__button--confirm:hover{background:#33b082}.cdx-notify__btns-wrapper{display:-ms-flexbox;display:flex;-ms-flex-flow:row nowrap;flex-flow:row nowrap;margin-top:5px}.cdx-notify__cross{position:absolute;top:5px;right:5px;width:10px;height:10px;padding:5px;opacity:.54;cursor:pointer}.cdx-notify__cross::after,.cdx-notify__cross::before{content:\'\';position:absolute;left:9px;top:5px;height:12px;width:2px;background:#575d67}.cdx-notify__cross::before{transform:rotate(-45deg)}.cdx-notify__cross::after{transform:rotate(45deg)}.cdx-notify__cross:hover{opacity:1}.cdx-notifies{position:fixed;z-index:2;bottom:20px;left:20px;font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Fira Sans","Droid Sans","Helvetica Neue",sans-serif}.cdx-notify{position:relative;width:220px;margin-top:15px;padding:13px 16px;background:#fff;box-shadow:0 11px 17px 0 rgba(23,32,61,.13);border-radius:5px;font-size:14px;line-height:1.4em;word-wrap:break-word}.cdx-notify::before{content:\'\';position:absolute;display:block;top:0;left:0;width:3px;height:calc(100% - 6px);margin:3px;border-radius:5px;background:0 0}@keyframes bounceIn{0%{opacity:0;transform:scale(.3)}50%{opacity:1;transform:scale(1.05)}70%{transform:scale(.9)}100%{transform:scale(1)}}.cdx-notify--bounce-in{animation-name:bounceIn;animation-duration:.6s;animation-iteration-count:1}.cdx-notify--success{background:#fafffe!important}.cdx-notify--success::before{background:#41ffb1!important}',
                        ""
                    ]);
                },
                function(t, e1) {
                    t.exports = function(t) {
                        var e1 = [];
                        return e1.toString = function() {
                            return this.map(function(e1) {
                                var n = function(t, e1) {
                                    var n, o = t[1] || "", r = t[3];
                                    if (!r) return o;
                                    if (e1 && "function" == typeof btoa) {
                                        var i = (n = r, "/*# sourceMappingURL=data:application/json;charset=utf-8;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(n)))) + " */"), a = r.sources.map(function(t) {
                                            return "/*# sourceURL=" + r.sourceRoot + t + " */";
                                        });
                                        return [
                                            o
                                        ].concat(a).concat([
                                            i
                                        ]).join("\n");
                                    }
                                    return [
                                        o
                                    ].join("\n");
                                }(e1, t);
                                return e1[2] ? "@media " + e1[2] + "{" + n + "}" : n;
                            }).join("");
                        }, e1.i = function(t, n) {
                            "string" == typeof t && (t = [
                                [
                                    null,
                                    t,
                                    ""
                                ]
                            ]);
                            for(var o = {}, r = 0; r < this.length; r++){
                                var i = this[r][0];
                                "number" == typeof i && (o[i] = !0);
                            }
                            for(r = 0; r < t.length; r++){
                                var a = t[r];
                                "number" == typeof a[0] && o[a[0]] || (n && !a[2] ? a[2] = n : n && (a[2] = "(" + a[2] + ") and (" + n + ")"), e1.push(a));
                            }
                        }, e1;
                    };
                },
                function(t, e1, n) {
                    var o, r, i = {}, a = (o = function() {
                        return window && document && document.all && !window.atob;
                    }, function() {
                        return void 0 === r && (r = o.apply(this, arguments)), r;
                    }), s = function(t) {
                        var e1 = {};
                        return function(t) {
                            if ("function" == typeof t) return t();
                            if (void 0 === e1[t]) {
                                var n = (function(t) {
                                    return document.querySelector(t);
                                }).call(this, t);
                                if (window.HTMLIFrameElement && n instanceof window.HTMLIFrameElement) try {
                                    n = n.contentDocument.head;
                                } catch (t1) {
                                    n = null;
                                }
                                e1[t] = n;
                            }
                            return e1[t];
                        };
                    }(), l = null, c = 0, u = [], f = n(5);
                    function d(t, e1) {
                        for(var n = 0; n < t.length; n++){
                            var o = t[n], r = i[o.id];
                            if (r) {
                                r.refs++;
                                for(var a = 0; a < r.parts.length; a++)r.parts[a](o.parts[a]);
                                for(; a < o.parts.length; a++)r.parts.push(b(o.parts[a], e1));
                            } else {
                                var s = [];
                                for(a = 0; a < o.parts.length; a++)s.push(b(o.parts[a], e1));
                                i[o.id] = {
                                    id: o.id,
                                    refs: 1,
                                    parts: s
                                };
                            }
                        }
                    }
                    function p(t, e1) {
                        for(var n = [], o = {}, r = 0; r < t.length; r++){
                            var i = t[r], a = e1.base ? i[0] + e1.base : i[0], s = {
                                css: i[1],
                                media: i[2],
                                sourceMap: i[3]
                            };
                            o[a] ? o[a].parts.push(s) : n.push(o[a] = {
                                id: a,
                                parts: [
                                    s
                                ]
                            });
                        }
                        return n;
                    }
                    function h(t, e1) {
                        var n = s(t.insertInto);
                        if (!n) throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
                        var o = u[u.length - 1];
                        if ("top" === t.insertAt) o ? o.nextSibling ? n.insertBefore(e1, o.nextSibling) : n.appendChild(e1) : n.insertBefore(e1, n.firstChild), u.push(e1);
                        else if ("bottom" === t.insertAt) n.appendChild(e1);
                        else {
                            if ("object" != typeof t.insertAt || !t.insertAt.before) throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");
                            var r = s(t.insertInto + " " + t.insertAt.before);
                            n.insertBefore(e1, r);
                        }
                    }
                    function v(t) {
                        if (null === t.parentNode) return !1;
                        t.parentNode.removeChild(t);
                        var e1 = u.indexOf(t);
                        e1 >= 0 && u.splice(e1, 1);
                    }
                    function g(t) {
                        var e1 = document.createElement("style");
                        return void 0 === t.attrs.type && (t.attrs.type = "text/css"), y(e1, t.attrs), h(t, e1), e1;
                    }
                    function y(t, e1) {
                        Object.keys(e1).forEach(function(n) {
                            t.setAttribute(n, e1[n]);
                        });
                    }
                    function b(t, e1) {
                        var n, o, r, i;
                        if (e1.transform && t.css) {
                            if (!(i = e1.transform(t.css))) return function() {};
                            t.css = i;
                        }
                        if (e1.singleton) {
                            var a = c++;
                            n = l || (l = g(e1)), o = x.bind(null, n, a, !1), r = x.bind(null, n, a, !0);
                        } else t.sourceMap && "function" == typeof URL && "function" == typeof URL.createObjectURL && "function" == typeof URL.revokeObjectURL && "function" == typeof Blob && "function" == typeof btoa ? (n = function(t) {
                            var e1 = document.createElement("link");
                            return void 0 === t.attrs.type && (t.attrs.type = "text/css"), t.attrs.rel = "stylesheet", y(e1, t.attrs), h(t, e1), e1;
                        }(e1), o = (function(t, e1, n) {
                            var o = n.css, r = n.sourceMap, i = void 0 === e1.convertToAbsoluteUrls && r;
                            (e1.convertToAbsoluteUrls || i) && (o = f(o)), r && (o += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(r)))) + " */");
                            var a = new Blob([
                                o
                            ], {
                                type: "text/css"
                            }), s = t.href;
                            t.href = URL.createObjectURL(a), s && URL.revokeObjectURL(s);
                        }).bind(null, n, e1), r = function() {
                            v(n), n.href && URL.revokeObjectURL(n.href);
                        }) : (n = g(e1), o = (function(t, e1) {
                            var n = e1.css, o = e1.media;
                            if (o && t.setAttribute("media", o), t.styleSheet) t.styleSheet.cssText = n;
                            else {
                                for(; t.firstChild;)t.removeChild(t.firstChild);
                                t.appendChild(document.createTextNode(n));
                            }
                        }).bind(null, n), r = function() {
                            v(n);
                        });
                        return o(t), function(e1) {
                            if (e1) {
                                if (e1.css === t.css && e1.media === t.media && e1.sourceMap === t.sourceMap) return;
                                o(t = e1);
                            } else r();
                        };
                    }
                    t.exports = function(t, e1) {
                        if ("undefined" != typeof DEBUG && DEBUG && "object" != typeof document) throw new Error("The style-loader cannot be used in a non-browser environment");
                        (e1 = e1 || {}).attrs = "object" == typeof e1.attrs ? e1.attrs : {}, e1.singleton || "boolean" == typeof e1.singleton || (e1.singleton = a()), e1.insertInto || (e1.insertInto = "head"), e1.insertAt || (e1.insertAt = "bottom");
                        var n = p(t, e1);
                        return d(n, e1), function(t) {
                            for(var o = [], r = 0; r < n.length; r++){
                                var a = n[r];
                                (s = i[a.id]).refs--, o.push(s);
                            }
                            for(t && d(p(t, e1), e1), r = 0; r < o.length; r++){
                                var s;
                                if (0 === (s = o[r]).refs) {
                                    for(var l = 0; l < s.parts.length; l++)s.parts[l]();
                                    delete i[s.id];
                                }
                            }
                        };
                    };
                    var m, k = (m = [], function(t, e1) {
                        return m[t] = e1, m.filter(Boolean).join("\n");
                    });
                    function x(t, e1, n, o) {
                        var r = n ? "" : o.css;
                        if (t.styleSheet) t.styleSheet.cssText = k(e1, r);
                        else {
                            var i = document.createTextNode(r), a = t.childNodes;
                            a[e1] && t.removeChild(a[e1]), a.length ? t.insertBefore(i, a[e1]) : t.appendChild(i);
                        }
                    }
                },
                function(t, e1) {
                    t.exports = function(t) {
                        var e1 = "undefined" != typeof window && window.location;
                        if (!e1) throw new Error("fixUrls requires window.location");
                        if (!t || "string" != typeof t) return t;
                        var n = e1.protocol + "//" + e1.host, o = n + e1.pathname.replace(/\/[^\/]*$/, "/");
                        return t.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(t, e1) {
                            var r, i = e1.trim().replace(/^"(.*)"$/, function(t, e1) {
                                return e1;
                            }).replace(/^'(.*)'$/, function(t, e1) {
                                return e1;
                            });
                            return /^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(i) ? t : (r = 0 === i.indexOf("//") ? i : 0 === i.indexOf("/") ? n + i : o + i.replace(/^\.\//, ""), "url(" + JSON.stringify(r) + ")");
                        });
                    };
                },
                function(t, e1, n) {
                    "use strict";
                    var o, r, i, a, s, l;
                    t.exports = (o = "cdx-notify", r = "cdx-notify__cross", i = "cdx-notify__button--confirm", a = "cdx-notify__button", s = "cdx-notify__btns-wrapper", {
                        alert: l = function(t) {
                            var e1 = document.createElement("DIV"), n = document.createElement("DIV"), i = t.message, a = t.style;
                            return e1.classList.add(o), a && e1.classList.add(o + "--" + a), e1.innerHTML = i, n.classList.add(r), n.addEventListener("click", e1.remove.bind(e1)), e1.appendChild(n), e1;
                        },
                        confirm: function(t) {
                            var e1 = l(t), n = document.createElement("div"), o = document.createElement("button"), c = document.createElement("button"), u = e1.querySelector("." + r), f = t.cancelHandler, d = t.okHandler;
                            return n.classList.add(s), o.innerHTML = t.okText || "Confirm", c.innerHTML = t.cancelText || "Cancel", o.classList.add(a), c.classList.add(a), o.classList.add(i), c.classList.add("cdx-notify__button--cancel"), f && "function" == typeof f && (c.addEventListener("click", f), u.addEventListener("click", f)), d && "function" == typeof d && o.addEventListener("click", d), o.addEventListener("click", e1.remove.bind(e1)), c.addEventListener("click", e1.remove.bind(e1)), n.appendChild(o), n.appendChild(c), e1.appendChild(n), e1;
                        },
                        prompt: function(t) {
                            var e1 = l(t), n = document.createElement("div"), o = document.createElement("button"), c = document.createElement("input"), u = e1.querySelector("." + r), f = t.cancelHandler, d = t.okHandler;
                            return n.classList.add(s), o.innerHTML = t.okText || "Ok", o.classList.add(a), o.classList.add(i), c.classList.add("cdx-notify__input"), t.placeholder && c.setAttribute("placeholder", t.placeholder), t.default && (c.value = t.default), t.inputType && (c.type = t.inputType), f && "function" == typeof f && u.addEventListener("click", f), d && "function" == typeof d && o.addEventListener("click", function() {
                                d(c.value);
                            }), o.addEventListener("click", e1.remove.bind(e1)), n.appendChild(c), n.appendChild(o), e1.appendChild(n), e1;
                        },
                        getWrapper: function() {
                            var t = document.createElement("DIV");
                            return t.classList.add("cdx-notifies"), t;
                        }
                    });
                }
            ]);
        },
        function(t, e1, n) {
            var o, r;
            void 0 === (r = "function" == typeof (o = function() {
                function t(t) {
                    var e1 = t.tags;
                    if (!Object.keys(e1).map(function(t) {
                        return typeof e1[t];
                    }).every(function(t) {
                        return "object" === t || "boolean" === t || "function" === t;
                    })) throw new Error("The configuration was invalid");
                    this.config = t;
                }
                var e1 = [
                    "P",
                    "LI",
                    "TD",
                    "TH",
                    "DIV",
                    "H1",
                    "H2",
                    "H3",
                    "H4",
                    "H5",
                    "H6",
                    "PRE"
                ];
                function n(t) {
                    return -1 !== e1.indexOf(t.nodeName);
                }
                var o = [
                    "A",
                    "B",
                    "STRONG",
                    "I",
                    "EM",
                    "SUB",
                    "SUP",
                    "U",
                    "STRIKE"
                ];
                function r(t) {
                    return -1 !== o.indexOf(t.nodeName);
                }
                function i(t, e1, n) {
                    return "function" == typeof t.tags[e1] ? t.tags[e1](n) : t.tags[e1];
                }
                function a(t, e1) {
                    return void 0 === e1 || "boolean" == typeof e1 && !e1;
                }
                function s(t, e1, n) {
                    var o = t.name.toLowerCase();
                    return !0 !== e1 && ("function" == typeof e1[o] ? !e1[o](t.value, n) : void 0 === e1[o] || !1 === e1[o] || "string" == typeof e1[o] && e1[o] !== t.value);
                }
                return t.prototype.clean = function(t) {
                    const e1 = document.implementation.createHTMLDocument(), n = e1.createElement("div");
                    return n.innerHTML = t, this._sanitize(e1, n), n.innerHTML;
                }, t.prototype._sanitize = function(t, e1) {
                    var o = function(t, e1) {
                        return t.createTreeWalker(e1, NodeFilter.SHOW_TEXT | NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT, null, !1);
                    }(t, e1), l = o.firstChild();
                    if (l) do {
                        if (l.nodeType !== Node.TEXT_NODE) {
                            if (l.nodeType === Node.COMMENT_NODE) {
                                e1.removeChild(l), this._sanitize(t, e1);
                                break;
                            }
                            var c, u = r(l);
                            u && (c = Array.prototype.some.call(l.childNodes, n));
                            var f = !!e1.parentNode, d = n(e1) && n(l) && f, p = l.nodeName.toLowerCase(), h = i(this.config, p, l);
                            if (u && c || a(0, h) || !this.config.keepNestedBlockElements && d) {
                                if ("SCRIPT" !== l.nodeName && "STYLE" !== l.nodeName) for(; l.childNodes.length > 0;)e1.insertBefore(l.childNodes[0], l);
                                e1.removeChild(l), this._sanitize(t, e1);
                                break;
                            }
                            for(var v = 0; v < l.attributes.length; v += 1){
                                var g = l.attributes[v];
                                s(g, h, l) && (l.removeAttribute(g.name), v -= 1);
                            }
                            this._sanitize(t, l);
                        } else if ("" === l.data.trim() && (l.previousElementSibling && n(l.previousElementSibling) || l.nextElementSibling && n(l.nextElementSibling))) {
                            e1.removeChild(l), this._sanitize(t, e1);
                            break;
                        }
                    }while (l = o.nextSibling());
                }, t;
            }) ? o.call(e1, n, e1, t) : o) || (t.exports = r);
        },
        function(t, e1, n) {
            window, t.exports = function(t) {
                var e1 = {};
                function n(o) {
                    if (e1[o]) return e1[o].exports;
                    var r = e1[o] = {
                        i: o,
                        l: !1,
                        exports: {}
                    };
                    return t[o].call(r.exports, r, r.exports, n), r.l = !0, r.exports;
                }
                return n.m = t, n.c = e1, n.d = function(t, e1, o) {
                    n.o(t, e1) || Object.defineProperty(t, e1, {
                        enumerable: !0,
                        get: o
                    });
                }, n.r = function(t) {
                    "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
                        value: "Module"
                    }), Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                }, n.t = function(t, e1) {
                    if (1 & e1 && (t = n(t)), 8 & e1) return t;
                    if (4 & e1 && "object" == typeof t && t && t.__esModule) return t;
                    var o = Object.create(null);
                    if (n.r(o), Object.defineProperty(o, "default", {
                        enumerable: !0,
                        value: t
                    }), 2 & e1 && "string" != typeof t) for(var r in t)n.d(o, r, (function(e1) {
                        return t[e1];
                    }).bind(null, r));
                    return o;
                }, n.n = function(t) {
                    var e1 = t && t.__esModule ? function() {
                        return t.default;
                    } : function() {
                        return t;
                    };
                    return n.d(e1, "a", e1), e1;
                }, n.o = function(t, e1) {
                    return Object.prototype.hasOwnProperty.call(t, e1);
                }, n.p = "", n(n.s = 0);
            }([
                function(t, e1, n) {
                    t.exports = n(1);
                },
                function(t, e1, n) {
                    "use strict";
                    n.r(e1), n.d(e1, "default", function() {
                        return o;
                    });
                    class o {
                        get CSS() {
                            return {
                                tooltip: "ct",
                                tooltipContent: "ct__content",
                                tooltipShown: "ct--shown",
                                placement: {
                                    left: "ct--left",
                                    bottom: "ct--bottom",
                                    right: "ct--right",
                                    top: "ct--top"
                                }
                            };
                        }
                        show(t, e1, n) {
                            this.nodes.wrapper || this.prepare(), this.hidingTimeout && clearTimeout(this.hidingTimeout);
                            const o = Object.assign({
                                placement: "bottom",
                                marginTop: 0,
                                marginLeft: 0,
                                marginRight: 0,
                                marginBottom: 0,
                                delay: 70,
                                hidingDelay: 0
                            }, n);
                            if (o.hidingDelay && (this.hidingDelay = o.hidingDelay), this.nodes.content.innerHTML = "", "string" == typeof e1) this.nodes.content.appendChild(document.createTextNode(e1));
                            else {
                                if (!(e1 instanceof Node)) throw Error("[CodeX Tooltip] Wrong type of \xabcontent\xbb passed. It should be an instance of Node or String. But " + typeof e1 + " given.");
                                this.nodes.content.appendChild(e1);
                            }
                            switch(this.nodes.wrapper.classList.remove(...Object.values(this.CSS.placement)), o.placement){
                                case "top":
                                    this.placeTop(t, o);
                                    break;
                                case "left":
                                    this.placeLeft(t, o);
                                    break;
                                case "right":
                                    this.placeRight(t, o);
                                    break;
                                case "bottom":
                                default:
                                    this.placeBottom(t, o);
                            }
                            o && o.delay ? this.showingTimeout = setTimeout(()=>{
                                this.nodes.wrapper.classList.add(this.CSS.tooltipShown), this.showed = !0;
                            }, o.delay) : (this.nodes.wrapper.classList.add(this.CSS.tooltipShown), this.showed = !0);
                        }
                        hide(t = !1) {
                            if (this.hidingDelay && !t) return this.hidingTimeout && clearTimeout(this.hidingTimeout), void (this.hidingTimeout = setTimeout(()=>{
                                this.hide(!0);
                            }, this.hidingDelay));
                            this.nodes.wrapper.classList.remove(this.CSS.tooltipShown), this.showed = !1, this.showingTimeout && clearTimeout(this.showingTimeout);
                        }
                        onHover(t, e1, n) {
                            t.addEventListener("mouseenter", ()=>{
                                this.show(t, e1, n);
                            }), t.addEventListener("mouseleave", ()=>{
                                this.hide();
                            });
                        }
                        destroy() {
                            this.nodes.wrapper.remove(), window.removeEventListener("scroll", this.handleWindowScroll);
                        }
                        prepare() {
                            this.nodes.wrapper = this.make("div", this.CSS.tooltip), this.nodes.content = this.make("div", this.CSS.tooltipContent), this.append(this.nodes.wrapper, this.nodes.content), this.append(document.body, this.nodes.wrapper);
                        }
                        loadStyles() {
                            const t = "codex-tooltips-style";
                            if (document.getElementById(t)) return;
                            const e1 = n(2), o = this.make("style", null, {
                                textContent: e1.toString(),
                                id: t
                            });
                            this.prepend(document.head, o);
                        }
                        placeBottom(t, e1) {
                            const n = t.getBoundingClientRect(), o = n.left + t.clientWidth / 2 - this.nodes.wrapper.offsetWidth / 2, r = n.bottom + window.pageYOffset + this.offsetTop + e1.marginTop;
                            this.applyPlacement("bottom", o, r);
                        }
                        placeTop(t, e1) {
                            const n = t.getBoundingClientRect(), o = n.left + t.clientWidth / 2 - this.nodes.wrapper.offsetWidth / 2, r = n.top + window.pageYOffset - this.nodes.wrapper.clientHeight - this.offsetTop;
                            this.applyPlacement("top", o, r);
                        }
                        placeLeft(t, e1) {
                            const n = t.getBoundingClientRect(), o = n.left - this.nodes.wrapper.offsetWidth - this.offsetLeft - e1.marginLeft, r = n.top + window.pageYOffset + t.clientHeight / 2 - this.nodes.wrapper.offsetHeight / 2;
                            this.applyPlacement("left", o, r);
                        }
                        placeRight(t, e1) {
                            const n = t.getBoundingClientRect(), o = n.right + this.offsetRight + e1.marginRight, r = n.top + window.pageYOffset + t.clientHeight / 2 - this.nodes.wrapper.offsetHeight / 2;
                            this.applyPlacement("right", o, r);
                        }
                        applyPlacement(t, e1, n) {
                            this.nodes.wrapper.classList.add(this.CSS.placement[t]), this.nodes.wrapper.style.left = e1 + "px", this.nodes.wrapper.style.top = n + "px";
                        }
                        make(t, e1 = null, n = {}) {
                            const o = document.createElement(t);
                            Array.isArray(e1) ? o.classList.add(...e1) : e1 && o.classList.add(e1);
                            for(const t1 in n)n.hasOwnProperty(t1) && (o[t1] = n[t1]);
                            return o;
                        }
                        append(t, e1) {
                            Array.isArray(e1) ? e1.forEach((e1)=>t.appendChild(e1)) : t.appendChild(e1);
                        }
                        prepend(t, e1) {
                            Array.isArray(e1) ? (e1 = e1.reverse()).forEach((e1)=>t.prepend(e1)) : t.prepend(e1);
                        }
                        constructor(){
                            this.nodes = {
                                wrapper: null,
                                content: null
                            }, this.showed = !1, this.offsetTop = 10, this.offsetLeft = 10, this.offsetRight = 10, this.hidingDelay = 0, this.handleWindowScroll = ()=>{
                                this.showed && this.hide(!0);
                            }, this.loadStyles(), this.prepare(), window.addEventListener("scroll", this.handleWindowScroll, {
                                passive: !0
                            });
                        }
                    }
                },
                function(t, e1) {
                    t.exports = '.ct{z-index:999;opacity:0;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;pointer-events:none;-webkit-transition:opacity 50ms ease-in,-webkit-transform 70ms cubic-bezier(.215,.61,.355,1);transition:opacity 50ms ease-in,-webkit-transform 70ms cubic-bezier(.215,.61,.355,1);transition:opacity 50ms ease-in,transform 70ms cubic-bezier(.215,.61,.355,1);transition:opacity 50ms ease-in,transform 70ms cubic-bezier(.215,.61,.355,1),-webkit-transform 70ms cubic-bezier(.215,.61,.355,1);will-change:opacity,top,left;-webkit-box-shadow:0 8px 12px 0 rgba(29,32,43,.17),0 4px 5px -3px rgba(5,6,12,.49);box-shadow:0 8px 12px 0 rgba(29,32,43,.17),0 4px 5px -3px rgba(5,6,12,.49);border-radius:9px}.ct,.ct:before{position:absolute;top:0;left:0}.ct:before{content:"";bottom:0;right:0;background-color:#1d202b;z-index:-1;border-radius:4px}@supports(-webkit-mask-box-image:url("")){.ct:before{border-radius:0;-webkit-mask-box-image:url(\'data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"><path d="M10.71 0h2.58c3.02 0 4.64.42 6.1 1.2a8.18 8.18 0 013.4 3.4C23.6 6.07 24 7.7 24 10.71v2.58c0 3.02-.42 4.64-1.2 6.1a8.18 8.18 0 01-3.4 3.4c-1.47.8-3.1 1.21-6.11 1.21H10.7c-3.02 0-4.64-.42-6.1-1.2a8.18 8.18 0 01-3.4-3.4C.4 17.93 0 16.3 0 13.29V10.7c0-3.02.42-4.64 1.2-6.1a8.18 8.18 0 013.4-3.4C6.07.4 7.7 0 10.71 0z"/></svg>\') 48% 41% 37.9% 53.3%}}@media (--mobile){.ct{display:none}}.ct__content{padding:6px 10px;color:#cdd1e0;font-size:12px;text-align:center;letter-spacing:.02em;line-height:1em}.ct:after{content:"";width:8px;height:8px;position:absolute;background-color:#1d202b;z-index:-1}.ct--bottom{-webkit-transform:translateY(5px);transform:translateY(5px)}.ct--bottom:after{top:-3px;left:50%;-webkit-transform:translateX(-50%) rotate(-45deg);transform:translateX(-50%) rotate(-45deg)}.ct--top{-webkit-transform:translateY(-5px);transform:translateY(-5px)}.ct--top:after{top:auto;bottom:-3px;left:50%;-webkit-transform:translateX(-50%) rotate(-45deg);transform:translateX(-50%) rotate(-45deg)}.ct--left{-webkit-transform:translateX(-5px);transform:translateX(-5px)}.ct--left:after{top:50%;left:auto;right:0;-webkit-transform:translate(41.6%,-50%) rotate(-45deg);transform:translate(41.6%,-50%) rotate(-45deg)}.ct--right{-webkit-transform:translateX(5px);transform:translateX(5px)}.ct--right:after{top:50%;left:0;-webkit-transform:translate(-41.6%,-50%) rotate(-45deg);transform:translate(-41.6%,-50%) rotate(-45deg)}.ct--shown{opacity:1;-webkit-transform:none;transform:none}';
                }
            ]).default;
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(14),
                n(7),
                n(25)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l) {
                "use strict";
                var c = n(8), u = n(1);
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = u(r), i = u(i), a = u(a), s = c(s), l = u(l);
                var f = function() {
                    function t(e1, n) {
                        (0, r.default)(this, t), this.cursor = -1, this.items = [], this.items = e1 || [], this.focusedCssClass = n;
                    }
                    return (0, i.default)(t, [
                        {
                            key: "setItems",
                            value: function(t) {
                                this.items = t;
                            }
                        },
                        {
                            key: "next",
                            value: function() {
                                this.cursor = this.leafNodesAndReturnIndex(t.directions.RIGHT);
                            }
                        },
                        {
                            key: "previous",
                            value: function() {
                                this.cursor = this.leafNodesAndReturnIndex(t.directions.LEFT);
                            }
                        },
                        {
                            key: "dropCursor",
                            value: function() {
                                -1 !== this.cursor && (this.items[this.cursor].classList.remove(this.focusedCssClass), this.cursor = -1);
                            }
                        },
                        {
                            key: "leafNodesAndReturnIndex",
                            value: function(e1) {
                                var n = this;
                                if (0 === this.items.length) return this.cursor;
                                var o = this.cursor;
                                return -1 === o ? o = e1 === t.directions.RIGHT ? -1 : 0 : this.items[o].classList.remove(this.focusedCssClass), o = e1 === t.directions.RIGHT ? (o + 1) % this.items.length : (this.items.length + o - 1) % this.items.length, a.default.canSetCaret(this.items[o]) && s.delay(function() {
                                    return l.default.setCursor(n.items[o]);
                                }, 50)(), this.items[o].classList.add(this.focusedCssClass), o;
                            }
                        },
                        {
                            key: "currentItem",
                            get: function() {
                                return -1 === this.cursor ? null : this.items[this.cursor];
                            }
                        }
                    ]), t;
                }();
                o.default = f, f.displayName = "DomIterator", f.directions = {
                    RIGHT: "right",
                    LEFT: "left"
                }, t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(7),
                n(14),
                n(61)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l) {
                "use strict";
                var c = n(8), u = n(1);
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = u(r), i = u(i), a = c(a), s = u(s);
                var f = function() {
                    function t(e1) {
                        (0, r.default)(this, t), this.blocks = [], this.workingArea = e1;
                    }
                    return (0, i.default)(t, [
                        {
                            key: "push",
                            value: function(t) {
                                this.blocks.push(t), this.insertToDOM(t);
                            }
                        },
                        {
                            key: "swap",
                            value: function(t, e1) {
                                var n = this.blocks[e1];
                                s.default.swap(this.blocks[t].holder, n.holder), this.blocks[e1] = this.blocks[t], this.blocks[t] = n;
                            }
                        },
                        {
                            key: "move",
                            value: function(t, e1) {
                                var n = this.blocks.splice(e1, 1)[0], o = t - 1, r = Math.max(0, o), i = this.blocks[r];
                                t > 0 ? this.insertToDOM(n, "afterend", i) : this.insertToDOM(n, "beforebegin", i), this.blocks.splice(t, 0, n);
                                var a = this.composeBlockEvent("move", {
                                    fromIndex: e1,
                                    toIndex: t
                                });
                                n.call(l.BlockToolAPI.MOVED, a);
                            }
                        },
                        {
                            key: "insert",
                            value: function(t, e1) {
                                var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                                if (this.length) {
                                    t > this.length && (t = this.length), n && (this.blocks[t].holder.remove(), this.blocks[t].call(l.BlockToolAPI.REMOVED));
                                    var o = n ? 1 : 0;
                                    if (this.blocks.splice(t, o, e1), t > 0) {
                                        var r = this.blocks[t - 1];
                                        this.insertToDOM(e1, "afterend", r);
                                    } else {
                                        var i = this.blocks[t + 1];
                                        i ? this.insertToDOM(e1, "beforebegin", i) : this.insertToDOM(e1);
                                    }
                                } else this.push(e1);
                            }
                        },
                        {
                            key: "remove",
                            value: function(t) {
                                isNaN(t) && (t = this.length - 1), this.blocks[t].holder.remove(), this.blocks[t].call(l.BlockToolAPI.REMOVED), this.blocks.splice(t, 1);
                            }
                        },
                        {
                            key: "removeAll",
                            value: function() {
                                this.workingArea.innerHTML = "", this.blocks.forEach(function(t) {
                                    return t.call(l.BlockToolAPI.REMOVED);
                                }), this.blocks.length = 0;
                            }
                        },
                        {
                            key: "insertAfter",
                            value: function(t, e1) {
                                var n = this.blocks.indexOf(t);
                                this.insert(n + 1, e1);
                            }
                        },
                        {
                            key: "get",
                            value: function(t) {
                                return this.blocks[t];
                            }
                        },
                        {
                            key: "indexOf",
                            value: function(t) {
                                return this.blocks.indexOf(t);
                            }
                        },
                        {
                            key: "insertToDOM",
                            value: function(t, e1, n) {
                                e1 ? n.holder.insertAdjacentElement(e1, t.holder) : this.workingArea.appendChild(t.holder), t.call(l.BlockToolAPI.RENDERED);
                            }
                        },
                        {
                            key: "composeBlockEvent",
                            value: function(t, e1) {
                                return new CustomEvent(t, {
                                    detail: e1
                                });
                            }
                        },
                        {
                            key: "length",
                            get: function() {
                                return this.blocks.length;
                            }
                        },
                        {
                            key: "array",
                            get: function() {
                                return this.blocks;
                            }
                        },
                        {
                            key: "nodes",
                            get: function() {
                                return a.array(this.workingArea.children);
                            }
                        }
                    ], [
                        {
                            key: "set",
                            value: function(t, e1, n) {
                                return isNaN(Number(e1)) ? (Reflect.set(t, e1, n), !0) : (t.insert(+e1, n), !0);
                            }
                        },
                        {
                            key: "get",
                            value: function(t, e1) {
                                return isNaN(Number(e1)) ? Reflect.get(t, e1) : t.get(+e1);
                            }
                        }
                    ]), t;
                }();
                o.default = f, f.displayName = "Blocks", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1
            ], void 0 === (i = "function" == typeof (o = function(t) {
                "use strict";
                var e1;
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.BlockMutationType = void 0, t.BlockMutationType = e1, function(t) {
                    t.Added = "block-added", t.Removed = "block-removed", t.Moved = "block-moved", t.Changed = "block-changed";
                }(e1 || (t.BlockMutationType = e1 = {}));
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            window, t.exports = function(t) {
                var e1 = {};
                function n(o) {
                    if (e1[o]) return e1[o].exports;
                    var r = e1[o] = {
                        i: o,
                        l: !1,
                        exports: {}
                    };
                    return t[o].call(r.exports, r, r.exports, n), r.l = !0, r.exports;
                }
                return n.m = t, n.c = e1, n.d = function(t, e1, o) {
                    n.o(t, e1) || Object.defineProperty(t, e1, {
                        enumerable: !0,
                        get: o
                    });
                }, n.r = function(t) {
                    "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
                        value: "Module"
                    }), Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                }, n.t = function(t, e1) {
                    if (1 & e1 && (t = n(t)), 8 & e1) return t;
                    if (4 & e1 && "object" == typeof t && t && t.__esModule) return t;
                    var o = Object.create(null);
                    if (n.r(o), Object.defineProperty(o, "default", {
                        enumerable: !0,
                        value: t
                    }), 2 & e1 && "string" != typeof t) for(var r in t)n.d(o, r, (function(e1) {
                        return t[e1];
                    }).bind(null, r));
                    return o;
                }, n.n = function(t) {
                    var e1 = t && t.__esModule ? function() {
                        return t.default;
                    } : function() {
                        return t;
                    };
                    return n.d(e1, "a", e1), e1;
                }, n.o = function(t, e1) {
                    return Object.prototype.hasOwnProperty.call(t, e1);
                }, n.p = "", n(n.s = 0);
            }([
                function(t, e1, n) {
                    "use strict";
                    function o(t, e1) {
                        for(var n = 0; n < e1.length; n++){
                            var o = e1[n];
                            o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(t, o.key, o);
                        }
                    }
                    function r(t, e1, n) {
                        return e1 && o(t.prototype, e1), n && o(t, n), t;
                    }
                    n.r(e1);
                    var i = function() {
                        function t(e1) {
                            var n = this;
                            !function(t, e1) {
                                if (!(t instanceof e1)) throw new TypeError("Cannot call a class as a function");
                            }(this, t), this.commands = {}, this.keys = {}, this.name = e1.name, this.parseShortcutName(e1.name), this.element = e1.on, this.callback = e1.callback, this.executeShortcut = function(t) {
                                n.execute(t);
                            }, this.element.addEventListener("keydown", this.executeShortcut, !1);
                        }
                        return r(t, null, [
                            {
                                key: "supportedCommands",
                                get: function() {
                                    return {
                                        SHIFT: [
                                            "SHIFT"
                                        ],
                                        CMD: [
                                            "CMD",
                                            "CONTROL",
                                            "COMMAND",
                                            "WINDOWS",
                                            "CTRL"
                                        ],
                                        ALT: [
                                            "ALT",
                                            "OPTION"
                                        ]
                                    };
                                }
                            },
                            {
                                key: "keyCodes",
                                get: function() {
                                    return {
                                        0: 48,
                                        1: 49,
                                        2: 50,
                                        3: 51,
                                        4: 52,
                                        5: 53,
                                        6: 54,
                                        7: 55,
                                        8: 56,
                                        9: 57,
                                        A: 65,
                                        B: 66,
                                        C: 67,
                                        D: 68,
                                        E: 69,
                                        F: 70,
                                        G: 71,
                                        H: 72,
                                        I: 73,
                                        J: 74,
                                        K: 75,
                                        L: 76,
                                        M: 77,
                                        N: 78,
                                        O: 79,
                                        P: 80,
                                        Q: 81,
                                        R: 82,
                                        S: 83,
                                        T: 84,
                                        U: 85,
                                        V: 86,
                                        W: 87,
                                        X: 88,
                                        Y: 89,
                                        Z: 90,
                                        BACKSPACE: 8,
                                        ENTER: 13,
                                        ESCAPE: 27,
                                        LEFT: 37,
                                        UP: 38,
                                        RIGHT: 39,
                                        DOWN: 40,
                                        INSERT: 45,
                                        DELETE: 46
                                    };
                                }
                            }
                        ]), r(t, [
                            {
                                key: "parseShortcutName",
                                value: function(e1) {
                                    e1 = e1.split("+");
                                    for(var n = 0; n < e1.length; n++){
                                        e1[n] = e1[n].toUpperCase();
                                        var o = !1;
                                        for(var r in t.supportedCommands)if (t.supportedCommands[r].includes(e1[n])) {
                                            o = this.commands[r] = !0;
                                            break;
                                        }
                                        o || (this.keys[e1[n]] = !0);
                                    }
                                    for(var i in t.supportedCommands)this.commands[i] || (this.commands[i] = !1);
                                }
                            },
                            {
                                key: "execute",
                                value: function(e1) {
                                    var n, o = {
                                        CMD: e1.ctrlKey || e1.metaKey,
                                        SHIFT: e1.shiftKey,
                                        ALT: e1.altKey
                                    }, r = !0;
                                    for(n in this.commands)this.commands[n] !== o[n] && (r = !1);
                                    var i, a = !0;
                                    for(i in this.keys)a = a && e1.keyCode === t.keyCodes[i];
                                    r && a && this.callback(e1);
                                }
                            },
                            {
                                key: "remove",
                                value: function() {
                                    this.element.removeEventListener("keydown", this.executeShortcut);
                                }
                            }
                        ]), t;
                    }();
                    e1.default = i;
                }
            ]).default;
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(20),
                n(21),
                n(2),
                n(3),
                n(113),
                n(5),
                n(6),
                n(4),
                n(59),
                n(7),
                n(61),
                n(115),
                n(81),
                n(386),
                n(60),
                n(84)
            ], void 0 === (i = "function" == typeof (o = function(t, e1, o, r, i, a, s, l, c, u, f, d, p, h, v, g, y) {
                "use strict";
                var b = n(8), m = n(1);
                function k() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.default = t.ToolboxEvent = void 0, e1 = m(e1), o = m(o), r = m(r), i = m(i), a = m(a), s = m(s), l = m(l), c = m(c), u = m(u), f = b(f), p = m(p), h = m(h), v = b(v), g = m(g);
                var x, w = function(t, e1, n, o) {
                    var r, i = arguments.length, a = i < 3 ? e1 : null === o ? o = Object.getOwnPropertyDescriptor(e1, n) : o;
                    if ("object" === ("undefined" == typeof Reflect ? "undefined" : (0, u.default)(Reflect)) && "function" == typeof Reflect.decorate) a = Reflect.decorate(t, e1, n, o);
                    else for(var s = t.length - 1; s >= 0; s--)(r = t[s]) && (a = (i < 3 ? r(a) : i > 3 ? r(e1, n, a) : r(e1, n)) || a);
                    return i > 3 && a && Object.defineProperty(e1, n, a), a;
                };
                t.ToolboxEvent = x, function(t) {
                    t.Opened = "toolbox-opened", t.Closed = "toolbox-closed", t.BlockAdded = "toolbox-block-added";
                }(x || (t.ToolboxEvent = x = {}));
                var S = function(t) {
                    (0, s.default)(b, t);
                    var n, u, h = (n = b, function() {
                        var t, e1 = (0, c.default)(n);
                        if (k()) {
                            var o = (0, c.default)(this).constructor;
                            t = Reflect.construct(e1, arguments, o);
                        } else t = e1.apply(this, arguments);
                        return (0, l.default)(this, t);
                    });
                    function b(t) {
                        var e1, n = t.api, o = t.tools, i = t.i18nLabels;
                        return (0, r.default)(this, b), (e1 = h.call(this)).opened = !1, e1.nodes = {
                            toolbox: null
                        }, e1.clickListenerId = null, e1.onOverlayClicked = function() {
                            e1.close();
                        }, e1.api = n, e1.tools = o, e1.i18nLabels = i, e1;
                    }
                    return (0, i.default)(b, [
                        {
                            key: "make",
                            value: function() {
                                return this.popover = new v.default({
                                    className: b.CSS.toolbox,
                                    searchable: !0,
                                    filterLabel: this.i18nLabels.filter,
                                    nothingFoundLabel: this.i18nLabels.nothingFound,
                                    items: this.toolboxItemsToBeDisplayed
                                }), this.popover.on(v.PopoverEvent.OverlayClicked, this.onOverlayClicked), this.enableShortcuts(), this.nodes.toolbox = this.popover.getElement(), this.nodes.toolbox;
                            }
                        },
                        {
                            key: "hasFocus",
                            value: function() {
                                return this.popover.hasFocus();
                            }
                        },
                        {
                            key: "destroy",
                            value: function() {
                                (0, a.default)((0, c.default)(b.prototype), "destroy", this).call(this), this.nodes && this.nodes.toolbox && (this.nodes.toolbox.remove(), this.nodes.toolbox = null), this.api.listeners.offById(this.clickListenerId), this.removeAllShortcuts(), this.popover.off(v.PopoverEvent.OverlayClicked, this.onOverlayClicked);
                            }
                        },
                        {
                            key: "toolButtonActivated",
                            value: function(t, e1) {
                                this.insertNewBlock(t, e1);
                            }
                        },
                        {
                            key: "open",
                            value: function() {
                                this.isEmpty || (this.shouldOpenPopoverBottom || (this.nodes.toolbox.style.setProperty("--popover-height", this.popover.calculateHeight() + "px"), this.nodes.toolbox.classList.add(b.CSS.toolboxOpenedTop)), this.popover.show(), this.opened = !0, this.emit(x.Opened));
                            }
                        },
                        {
                            key: "close",
                            value: function() {
                                this.popover.hide(), this.opened = !1, this.nodes.toolbox.classList.remove(b.CSS.toolboxOpenedTop), this.emit(x.Closed);
                            }
                        },
                        {
                            key: "toggle",
                            value: function() {
                                this.opened ? this.close() : this.open();
                            }
                        },
                        {
                            key: "areToolboxSettingsValid",
                            value: function(t, e1) {
                                return !(!t || t && !t.icon && (f.log("Toolbar icon is missed. Tool %o skipped", "warn", e1), 1));
                            }
                        },
                        {
                            key: "enableShortcuts",
                            value: function() {
                                var t = this;
                                this.toolsToBeDisplayed.forEach(function(e1) {
                                    var n = e1.shortcut;
                                    n && t.enableShortcutForTool(e1.name, n);
                                });
                            }
                        },
                        {
                            key: "enableShortcutForTool",
                            value: function(t, e1) {
                                var n = this;
                                p.default.add({
                                    name: e1,
                                    on: this.api.ui.nodes.redactor,
                                    handler: function(e1) {
                                        e1.preventDefault(), n.insertNewBlock(t);
                                    }
                                });
                            }
                        },
                        {
                            key: "removeAllShortcuts",
                            value: function() {
                                var t = this;
                                this.toolsToBeDisplayed.forEach(function(e1) {
                                    var n = e1.shortcut;
                                    n && p.default.remove(t.api.ui.nodes.redactor, n);
                                });
                            }
                        },
                        {
                            key: "insertNewBlock",
                            value: (u = (0, o.default)(e1.default.mark(function t(n, o) {
                                var r, i, a, s, l, c;
                                return e1.default.wrap(function(t) {
                                    for(;;)switch(t.prev = t.next){
                                        case 0:
                                            if (r = this.api.blocks.getCurrentBlockIndex(), i = this.api.blocks.getBlockByIndex(r)) {
                                                t.next = 4;
                                                break;
                                            }
                                            return t.abrupt("return");
                                        case 4:
                                            if (a = i.isEmpty ? r : r + 1, !o) {
                                                t.next = 10;
                                                break;
                                            }
                                            return t.next = 8, this.api.blocks.composeBlockData(n);
                                        case 8:
                                            l = t.sent, s = Object.assign(l, o);
                                        case 10:
                                            (c = this.api.blocks.insert(n, s, void 0, a, void 0, i.isEmpty)).call(d.BlockToolAPI.APPEND_CALLBACK), this.api.caret.setToBlock(a), this.emit(x.BlockAdded, {
                                                block: c
                                            }), this.api.toolbar.close();
                                        case 15:
                                        case "end":
                                            return t.stop();
                                    }
                                }, t, this);
                            })), function(t, e1) {
                                return u.apply(this, arguments);
                            })
                        },
                        {
                            key: "isEmpty",
                            get: function() {
                                return 0 === this.toolsToBeDisplayed.length;
                            }
                        },
                        {
                            key: "shouldOpenPopoverBottom",
                            get: function() {
                                var t = this.nodes.toolbox.getBoundingClientRect(), e1 = this.api.ui.nodes.redactor.getBoundingClientRect(), n = this.popover.calculateHeight(), o = t.top + n, r = t.top - n, i = Math.min(window.innerHeight, e1.bottom);
                                return r < e1.top || o <= i;
                            }
                        },
                        {
                            key: "toolsToBeDisplayed",
                            get: function() {
                                var t = this;
                                return Array.from(this.tools.values()).reduce(function(e1, n) {
                                    var o = n.toolbox;
                                    if (o) {
                                        var r = o.filter(function(e1) {
                                            return t.areToolboxSettingsValid(e1, n.name);
                                        });
                                        e1.push(Object.assign(Object.assign({}, n), {
                                            toolbox: r
                                        }));
                                    }
                                    return e1;
                                }, []);
                            }
                        },
                        {
                            key: "toolboxItemsToBeDisplayed",
                            get: function() {
                                var t = this, e1 = function(e1, n) {
                                    return {
                                        icon: e1.icon,
                                        label: g.default.t(y.I18nInternalNS.toolNames, e1.title || f.capitalize(n.name)),
                                        name: n.name,
                                        onClick: function(o) {
                                            t.toolButtonActivated(n.name, e1.data);
                                        },
                                        secondaryLabel: n.shortcut ? f.beautifyShortcut(n.shortcut) : ""
                                    };
                                };
                                return this.toolsToBeDisplayed.reduce(function(t, n) {
                                    return Array.isArray(n.toolbox) ? n.toolbox.forEach(function(o) {
                                        t.push(e1(o, n));
                                    }) : t.push(e1(n.toolbox, n)), t;
                                }, []);
                            }
                        }
                    ], [
                        {
                            key: "CSS",
                            get: function() {
                                return {
                                    toolbox: "ce-toolbox",
                                    toolboxOpenedTop: "ce-toolbox--opened-top"
                                };
                            }
                        }
                    ]), b;
                }(h.default);
                t.default = S, S.displayName = "Toolbox", w([
                    f.cacheable
                ], S.prototype, "toolsToBeDisplayed", null), w([
                    f.cacheable
                ], S.prototype, "toolboxItemsToBeDisplayed", null);
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(59),
                n(14),
                n(111),
                n(62),
                n(387),
                n(81),
                n(7),
                n(388)
            ], void 0 === (i = "function" == typeof (o = function(t, e1, o, r, i, a, s, l, c, u, f, d, p, h) {
                "use strict";
                var v = n(1);
                function g() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.default = t.PopoverEvent = void 0, e1 = v(e1), o = v(o), r = v(r), i = v(i), a = v(a), s = v(s), l = v(l), c = v(c), u = v(u), f = v(f), d = v(d), h = v(h);
                var y, b = function(t, e1, n, o) {
                    var r, i = arguments.length, a = i < 3 ? e1 : null === o ? o = Object.getOwnPropertyDescriptor(e1, n) : o;
                    if ("object" === ("undefined" == typeof Reflect ? "undefined" : (0, s.default)(Reflect)) && "function" == typeof Reflect.decorate) a = Reflect.decorate(t, e1, n, o);
                    else for(var l = t.length - 1; l >= 0; l--)(r = t[l]) && (a = (i < 3 ? r(a) : i > 3 ? r(e1, n, a) : r(e1, n)) || a);
                    return i > 3 && a && Object.defineProperty(e1, n, a), a;
                };
                t.PopoverEvent = y, function(t) {
                    t.OverlayClicked = "overlay-clicked";
                }(y || (t.PopoverEvent = y = {}));
                var m = function(t) {
                    (0, r.default)(d, t);
                    var n, s = (n = d, function() {
                        var t, e1 = (0, a.default)(n);
                        if (g()) {
                            var o = (0, a.default)(this).constructor;
                            t = Reflect.construct(e1, arguments, o);
                        } else t = e1.apply(this, arguments);
                        return (0, i.default)(this, t);
                    });
                    function d(t) {
                        var n, o = t.items, r = t.className, i = t.searchable, a = t.filterLabel, l = t.nothingFoundLabel;
                        return (0, e1.default)(this, d), (n = s.call(this)).isShown = !1, n.nodes = {
                            wrapper: null,
                            popover: null,
                            items: null,
                            nothingFound: null,
                            overlay: null
                        }, n.scrollLocker = new h.default, n.items = o, n.className = r || "", n.searchable = i, n.listeners = new c.default, n.filterLabel = a, n.nothingFoundLabel = l, n.render(), n.enableFlipper(), n;
                    }
                    return (0, o.default)(d, [
                        {
                            key: "getElement",
                            value: function() {
                                return this.nodes.wrapper;
                            }
                        },
                        {
                            key: "show",
                            value: function() {
                                var t = this;
                                this.search.clear(), this.nodes.items.scrollTop = 0, this.nodes.popover.classList.add(d.CSS.popoverOpened), this.nodes.overlay.classList.remove(d.CSS.popoverOverlayHidden), this.flipper.activate(), this.searchable && window.requestAnimationFrame(function() {
                                    t.search.focus();
                                }), (0, p.isMobileScreen)() && this.scrollLocker.lock(), this.isShown = !0;
                            }
                        },
                        {
                            key: "hide",
                            value: function() {
                                this.isShown && (this.nodes.popover.classList.remove(d.CSS.popoverOpened), this.nodes.overlay.classList.add(d.CSS.popoverOverlayHidden), this.flipper.deactivate(), (0, p.isMobileScreen)() && this.scrollLocker.unlock(), this.isShown = !1);
                            }
                        },
                        {
                            key: "destroy",
                            value: function() {
                                this.listeners.removeAll();
                            }
                        },
                        {
                            key: "hasFocus",
                            value: function() {
                                return this.flipper.hasFocus();
                            }
                        },
                        {
                            key: "calculateHeight",
                            value: function() {
                                var t, e1 = this.nodes.popover.cloneNode(!0);
                                return e1.style.visibility = "hidden", e1.style.position = "absolute", e1.style.top = "-1000px", e1.classList.add(d.CSS.popoverOpened), document.body.appendChild(e1), t = e1.offsetHeight, e1.remove(), t;
                            }
                        },
                        {
                            key: "render",
                            value: function() {
                                var t = this;
                                this.nodes.wrapper = l.default.make("div", this.className), this.nodes.popover = l.default.make("div", d.CSS.popover), this.nodes.wrapper.appendChild(this.nodes.popover), this.nodes.overlay = l.default.make("div", [
                                    d.CSS.popoverOverlay,
                                    d.CSS.popoverOverlayHidden
                                ]), this.nodes.wrapper.appendChild(this.nodes.overlay), this.searchable && this.addSearch(this.nodes.popover), this.nodes.items = l.default.make("div", d.CSS.itemsWrapper), this.items.forEach(function(e1) {
                                    t.nodes.items.appendChild(t.createItem(e1));
                                }), this.nodes.popover.appendChild(this.nodes.items), this.nodes.nothingFound = l.default.make("div", [
                                    d.CSS.noFoundMessage
                                ], {
                                    textContent: this.nothingFoundLabel
                                }), this.nodes.popover.appendChild(this.nodes.nothingFound), this.listeners.on(this.nodes.popover, "click", function(e1) {
                                    var n = e1.target.closest(".".concat(d.CSS.item));
                                    n && t.itemClicked(n);
                                }), this.listeners.on(this.nodes.overlay, "click", function() {
                                    t.emit(y.OverlayClicked);
                                });
                            }
                        },
                        {
                            key: "addSearch",
                            value: function(t) {
                                var e1 = this;
                                this.search = new f.default({
                                    items: this.items,
                                    placeholder: this.filterLabel,
                                    onSearch: function(t) {
                                        var n = [];
                                        e1.items.forEach(function(o, r) {
                                            var i = e1.nodes.items.children[r];
                                            t.includes(o) ? (n.push(i), i.classList.remove(d.CSS.itemHidden)) : i.classList.add(d.CSS.itemHidden);
                                        }), e1.nodes.nothingFound.classList.toggle(d.CSS.noFoundMessageShown, 0 === n.length), e1.flipper.deactivate(), e1.flipper.activate(n), e1.flipper.focusFirst();
                                    }
                                });
                                var n = this.search.getElement();
                                t.appendChild(n);
                            }
                        },
                        {
                            key: "createItem",
                            value: function(t) {
                                var e1 = l.default.make("div", d.CSS.item);
                                e1.dataset.itemName = t.name;
                                var n = l.default.make("div", d.CSS.itemLabel, {
                                    innerHTML: t.label
                                });
                                return t.icon && e1.appendChild(l.default.make("div", d.CSS.itemIcon, {
                                    innerHTML: t.icon
                                })), e1.appendChild(n), t.secondaryLabel && e1.appendChild(l.default.make("div", d.CSS.itemSecondaryLabel, {
                                    textContent: t.secondaryLabel
                                })), e1;
                            }
                        },
                        {
                            key: "itemClicked",
                            value: function(t) {
                                var e1 = this.nodes.wrapper.querySelectorAll(".".concat(d.CSS.item)), n = Array.from(e1).indexOf(t), o = this.items[n];
                                o.onClick(o);
                            }
                        },
                        {
                            key: "enableFlipper",
                            value: function() {
                                var t = Array.from(this.nodes.wrapper.querySelectorAll(".".concat(d.CSS.item)));
                                this.flipper = new u.default({
                                    items: t,
                                    focusedItemClass: d.CSS.itemFocused,
                                    allowedKeys: [
                                        p.keyCodes.TAB,
                                        p.keyCodes.UP,
                                        p.keyCodes.DOWN,
                                        p.keyCodes.ENTER
                                    ]
                                });
                            }
                        }
                    ], [
                        {
                            key: "CSS",
                            get: function() {
                                return {
                                    popover: "ce-popover",
                                    popoverOpened: "ce-popover--opened",
                                    itemsWrapper: "ce-popover__items",
                                    item: "ce-popover__item",
                                    itemHidden: "ce-popover__item--hidden",
                                    itemFocused: "ce-popover__item--focused",
                                    itemLabel: "ce-popover__item-label",
                                    itemIcon: "ce-popover__item-icon",
                                    itemSecondaryLabel: "ce-popover__item-secondary-label",
                                    noFoundMessage: "ce-popover__no-found",
                                    noFoundMessageShown: "ce-popover__no-found--shown",
                                    popoverOverlay: "ce-popover__overlay",
                                    popoverOverlayHidden: "ce-popover__overlay--hidden"
                                };
                            }
                        }
                    ]), d;
                }(d.default);
                t.default = m, m.displayName = "Popover", b([
                    p.cacheable
                ], m.prototype, "calculateHeight", null);
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(14),
                n(111)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s) {
                "use strict";
                var l = n(1);
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = l(r), i = l(i), a = l(a), s = l(s);
                var c = function() {
                    function t(e1) {
                        var n = e1.items, o = e1.onSearch, i = e1.placeholder;
                        (0, r.default)(this, t), this.listeners = new s.default, this.items = n, this.onSearch = o, this.render(i);
                    }
                    return (0, i.default)(t, [
                        {
                            key: "getElement",
                            value: function() {
                                return this.wrapper;
                            }
                        },
                        {
                            key: "focus",
                            value: function() {
                                this.input.focus();
                            }
                        },
                        {
                            key: "clear",
                            value: function() {
                                this.input.value = "", this.searchQuery = "", this.onSearch(this.foundItems);
                            }
                        },
                        {
                            key: "destroy",
                            value: function() {
                                this.listeners.removeAll();
                            }
                        },
                        {
                            key: "render",
                            value: function(e1) {
                                var n = this;
                                this.wrapper = a.default.make("div", t.CSS.wrapper);
                                var o = a.default.make("div", t.CSS.icon), r = a.default.svg("search", 16, 16);
                                this.input = a.default.make("input", t.CSS.input, {
                                    placeholder: e1
                                }), o.appendChild(r), this.wrapper.appendChild(o), this.wrapper.appendChild(this.input), this.listeners.on(this.input, "input", function() {
                                    n.searchQuery = n.input.value, n.onSearch(n.foundItems);
                                });
                            }
                        },
                        {
                            key: "checkItem",
                            value: function(t) {
                                var e1 = t.label.toLowerCase(), n = this.searchQuery.toLowerCase();
                                return e1.includes(n);
                            }
                        },
                        {
                            key: "foundItems",
                            get: function() {
                                var t = this;
                                return this.items.filter(function(e1) {
                                    return t.checkItem(e1);
                                });
                            }
                        }
                    ], [
                        {
                            key: "CSS",
                            get: function() {
                                return {
                                    wrapper: "cdx-search-field",
                                    icon: "cdx-search-field__icon",
                                    input: "cdx-search-field__input"
                                };
                            }
                        }
                    ]), t;
                }();
                o.default = c, c.displayName = "SearchInput", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(7)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a) {
                "use strict";
                var s = n(1);
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = s(r), i = s(i);
                var l = function() {
                    function t() {
                        (0, r.default)(this, t);
                    }
                    return (0, i.default)(t, [
                        {
                            key: "lock",
                            value: function() {
                                a.isIosDevice ? this.lockHard() : document.body.classList.add(t.CSS.scrollLocked);
                            }
                        },
                        {
                            key: "unlock",
                            value: function() {
                                a.isIosDevice ? this.unlockHard() : document.body.classList.remove(t.CSS.scrollLocked);
                            }
                        },
                        {
                            key: "lockHard",
                            value: function() {
                                this.scrollPosition = window.pageYOffset, document.documentElement.style.setProperty("--window-scroll-offset", "".concat(this.scrollPosition, "px")), document.body.classList.add(t.CSS.scrollLockedHard);
                            }
                        },
                        {
                            key: "unlockHard",
                            value: function() {
                                document.body.classList.remove(t.CSS.scrollLockedHard), null !== this.scrollPosition && window.scrollTo(0, this.scrollPosition), this.scrollPosition = null;
                            }
                        }
                    ]), t;
                }();
                o.default = l, l.displayName = "ScrollLocker", l.CSS = {
                    scrollLocked: "ce-scroll-locked",
                    scrollLockedHard: "ce-scroll-locked--hard"
                }, t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            window, t.exports = function(t) {
                var e1 = {};
                function n(o) {
                    if (e1[o]) return e1[o].exports;
                    var r = e1[o] = {
                        i: o,
                        l: !1,
                        exports: {}
                    };
                    return t[o].call(r.exports, r, r.exports, n), r.l = !0, r.exports;
                }
                return n.m = t, n.c = e1, n.d = function(t, e1, o) {
                    n.o(t, e1) || Object.defineProperty(t, e1, {
                        enumerable: !0,
                        get: o
                    });
                }, n.r = function(t) {
                    "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
                        value: "Module"
                    }), Object.defineProperty(t, "__esModule", {
                        value: !0
                    });
                }, n.t = function(t, e1) {
                    if (1 & e1 && (t = n(t)), 8 & e1) return t;
                    if (4 & e1 && "object" == typeof t && t && t.__esModule) return t;
                    var o = Object.create(null);
                    if (n.r(o), Object.defineProperty(o, "default", {
                        enumerable: !0,
                        value: t
                    }), 2 & e1 && "string" != typeof t) for(var r in t)n.d(o, r, (function(e1) {
                        return t[e1];
                    }).bind(null, r));
                    return o;
                }, n.n = function(t) {
                    var e1 = t && t.__esModule ? function() {
                        return t.default;
                    } : function() {
                        return t;
                    };
                    return n.d(e1, "a", e1), e1;
                }, n.o = function(t, e1) {
                    return Object.prototype.hasOwnProperty.call(t, e1);
                }, n.p = "/", n(n.s = 0);
            }([
                function(t, e1, n) {
                    function o(t, e1) {
                        for(var n = 0; n < e1.length; n++){
                            var o = e1[n];
                            o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(t, o.key, o);
                        }
                    }
                    function r(t, e1, n) {
                        return e1 && o(t.prototype, e1), n && o(t, n), t;
                    }
                    n(1).toString();
                    var i = function() {
                        function t(e1) {
                            var n = e1.data, o = e1.config, r = e1.api, i = e1.readOnly;
                            !function(t, e1) {
                                if (!(t instanceof e1)) throw new TypeError("Cannot call a class as a function");
                            }(this, t), this.api = r, this.readOnly = i, this._CSS = {
                                block: this.api.styles.block,
                                wrapper: "ce-paragraph"
                            }, this.readOnly || (this.onKeyUp = this.onKeyUp.bind(this)), this._placeholder = o.placeholder ? o.placeholder : t.DEFAULT_PLACEHOLDER, this._data = {}, this._element = this.drawView(), this._preserveBlank = void 0 !== o.preserveBlank && o.preserveBlank, this.data = n;
                        }
                        return r(t, null, [
                            {
                                key: "DEFAULT_PLACEHOLDER",
                                get: function() {
                                    return "";
                                }
                            }
                        ]), r(t, [
                            {
                                key: "onKeyUp",
                                value: function(t) {
                                    "Backspace" !== t.code && "Delete" !== t.code || "" === this._element.textContent && (this._element.innerHTML = "");
                                }
                            },
                            {
                                key: "drawView",
                                value: function() {
                                    var t = document.createElement("DIV");
                                    return t.classList.add(this._CSS.wrapper, this._CSS.block), t.contentEditable = !1, t.dataset.placeholder = this.api.i18n.t(this._placeholder), this.readOnly || (t.contentEditable = !0, t.addEventListener("keyup", this.onKeyUp)), t;
                                }
                            },
                            {
                                key: "render",
                                value: function() {
                                    return this._element;
                                }
                            },
                            {
                                key: "merge",
                                value: function(t) {
                                    var e1 = {
                                        text: this.data.text + t.text
                                    };
                                    this.data = e1;
                                }
                            },
                            {
                                key: "validate",
                                value: function(t) {
                                    return !("" === t.text.trim() && !this._preserveBlank);
                                }
                            },
                            {
                                key: "save",
                                value: function(t) {
                                    return {
                                        text: t.innerHTML
                                    };
                                }
                            },
                            {
                                key: "onPaste",
                                value: function(t) {
                                    var e1 = {
                                        text: t.detail.data.innerHTML
                                    };
                                    this.data = e1;
                                }
                            },
                            {
                                key: "data",
                                get: function() {
                                    var t = this._element.innerHTML;
                                    return this._data.text = t, this._data;
                                },
                                set: function(t) {
                                    this._data = t || {}, this._element.innerHTML = this._data.text || "";
                                }
                            }
                        ], [
                            {
                                key: "conversionConfig",
                                get: function() {
                                    return {
                                        export: "text",
                                        import: "text"
                                    };
                                }
                            },
                            {
                                key: "sanitize",
                                get: function() {
                                    return {
                                        text: {
                                            br: !0
                                        }
                                    };
                                }
                            },
                            {
                                key: "isReadOnlySupported",
                                get: function() {
                                    return !0;
                                }
                            },
                            {
                                key: "pasteConfig",
                                get: function() {
                                    return {
                                        tags: [
                                            "P"
                                        ]
                                    };
                                }
                            },
                            {
                                key: "toolbox",
                                get: function() {
                                    return {
                                        icon: n(5).default,
                                        title: "Text"
                                    };
                                }
                            }
                        ]), t;
                    }();
                    t.exports = i;
                },
                function(t, e1, n) {
                    var o = n(2), r = n(3);
                    "string" == typeof (r = r.__esModule ? r.default : r) && (r = [
                        [
                            t.i,
                            r,
                            ""
                        ]
                    ]), o(r, {
                        insert: "head",
                        singleton: !1
                    }), t.exports = r.locals || {};
                },
                function(t, e1, n) {
                    "use strict";
                    var o, r = function() {
                        var t = {};
                        return function(e1) {
                            if (void 0 === t[e1]) {
                                var n = document.querySelector(e1);
                                if (window.HTMLIFrameElement && n instanceof window.HTMLIFrameElement) try {
                                    n = n.contentDocument.head;
                                } catch (t1) {
                                    n = null;
                                }
                                t[e1] = n;
                            }
                            return t[e1];
                        };
                    }(), i = [];
                    function a(t) {
                        for(var e1 = -1, n = 0; n < i.length; n++)if (i[n].identifier === t) {
                            e1 = n;
                            break;
                        }
                        return e1;
                    }
                    function s(t, e1) {
                        for(var n = {}, o = [], r = 0; r < t.length; r++){
                            var s = t[r], l = e1.base ? s[0] + e1.base : s[0], c = n[l] || 0, u = "".concat(l, " ").concat(c);
                            n[l] = c + 1;
                            var f = a(u), d = {
                                css: s[1],
                                media: s[2],
                                sourceMap: s[3]
                            };
                            -1 !== f ? (i[f].references++, i[f].updater(d)) : i.push({
                                identifier: u,
                                updater: v(d, e1),
                                references: 1
                            }), o.push(u);
                        }
                        return o;
                    }
                    function l(t) {
                        var e1 = document.createElement("style"), o = t.attributes || {};
                        if (void 0 === o.nonce) {
                            var i = n.nc;
                            i && (o.nonce = i);
                        }
                        if (Object.keys(o).forEach(function(t) {
                            e1.setAttribute(t, o[t]);
                        }), "function" == typeof t.insert) t.insert(e1);
                        else {
                            var a = r(t.insert || "head");
                            if (!a) throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
                            a.appendChild(e1);
                        }
                        return e1;
                    }
                    var c, u = (c = [], function(t, e1) {
                        return c[t] = e1, c.filter(Boolean).join("\n");
                    });
                    function f(t, e1, n, o) {
                        var r = n ? "" : o.media ? "@media ".concat(o.media, " {").concat(o.css, "}") : o.css;
                        if (t.styleSheet) t.styleSheet.cssText = u(e1, r);
                        else {
                            var i = document.createTextNode(r), a = t.childNodes;
                            a[e1] && t.removeChild(a[e1]), a.length ? t.insertBefore(i, a[e1]) : t.appendChild(i);
                        }
                    }
                    function d(t, e1, n) {
                        var o = n.css, r = n.media, i = n.sourceMap;
                        if (r ? t.setAttribute("media", r) : t.removeAttribute("media"), i && btoa && (o += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i)))), " */")), t.styleSheet) t.styleSheet.cssText = o;
                        else {
                            for(; t.firstChild;)t.removeChild(t.firstChild);
                            t.appendChild(document.createTextNode(o));
                        }
                    }
                    var p = null, h = 0;
                    function v(t, e1) {
                        var n, o, r;
                        if (e1.singleton) {
                            var i = h++;
                            n = p || (p = l(e1)), o = f.bind(null, n, i, !1), r = f.bind(null, n, i, !0);
                        } else n = l(e1), o = d.bind(null, n, e1), r = function() {
                            !function(t) {
                                if (null === t.parentNode) return !1;
                                t.parentNode.removeChild(t);
                            }(n);
                        };
                        return o(t), function(e1) {
                            if (e1) {
                                if (e1.css === t.css && e1.media === t.media && e1.sourceMap === t.sourceMap) return;
                                o(t = e1);
                            } else r();
                        };
                    }
                    t.exports = function(t, e1) {
                        (e1 = e1 || {}).singleton || "boolean" == typeof e1.singleton || (e1.singleton = (void 0 === o && (o = Boolean(window && document && document.all && !window.atob)), o));
                        var n = s(t = t || [], e1);
                        return function(t) {
                            if (t = t || [], "[object Array]" === Object.prototype.toString.call(t)) {
                                for(var o = 0; o < n.length; o++){
                                    var r = a(n[o]);
                                    i[r].references--;
                                }
                                for(var l = s(t, e1), c = 0; c < n.length; c++){
                                    var u = a(n[c]);
                                    0 === i[u].references && (i[u].updater(), i.splice(u, 1));
                                }
                                n = l;
                            }
                        };
                    };
                },
                function(t, e1, n) {
                    (e1 = n(4)(!1)).push([
                        t.i,
                        ".ce-paragraph {\n    line-height: 1.6em;\n    outline: none;\n}\n\n.ce-paragraph[data-placeholder]:empty::before{\n  content: attr(data-placeholder);\n  color: #707684;\n  font-weight: normal;\n  opacity: 0;\n}\n\n/** Show placeholder at the first paragraph if Editor is empty */\n.codex-editor--empty .ce-block:first-child .ce-paragraph[data-placeholder]:empty::before {\n  opacity: 1;\n}\n\n.codex-editor--toolbox-opened .ce-block:first-child .ce-paragraph[data-placeholder]:empty::before,\n.codex-editor--empty .ce-block:first-child .ce-paragraph[data-placeholder]:empty:focus::before {\n  opacity: 0;\n}\n\n.ce-paragraph p:first-of-type{\n    margin-top: 0;\n}\n\n.ce-paragraph p:last-of-type{\n    margin-bottom: 0;\n}\n",
                        ""
                    ]), t.exports = e1;
                },
                function(t, e1, n) {
                    "use strict";
                    t.exports = function(t) {
                        var e1 = [];
                        return e1.toString = function() {
                            return this.map(function(e1) {
                                var n = function(t, e1) {
                                    var n, o, r, i = t[1] || "", a = t[3];
                                    if (!a) return i;
                                    if (e1 && "function" == typeof btoa) {
                                        var s = (n = a, o = btoa(unescape(encodeURIComponent(JSON.stringify(n)))), r = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o), "/*# ".concat(r, " */")), l = a.sources.map(function(t) {
                                            return "/*# sourceURL=".concat(a.sourceRoot || "").concat(t, " */");
                                        });
                                        return [
                                            i
                                        ].concat(l).concat([
                                            s
                                        ]).join("\n");
                                    }
                                    return [
                                        i
                                    ].join("\n");
                                }(e1, t);
                                return e1[2] ? "@media ".concat(e1[2], " {").concat(n, "}") : n;
                            }).join("");
                        }, e1.i = function(t, n, o) {
                            "string" == typeof t && (t = [
                                [
                                    null,
                                    t,
                                    ""
                                ]
                            ]);
                            var r = {};
                            if (o) for(var i = 0; i < this.length; i++){
                                var a = this[i][0];
                                null != a && (r[a] = !0);
                            }
                            for(var s = 0; s < t.length; s++){
                                var l = [].concat(t[s]);
                                o && r[l[0]] || (n && (l[2] ? l[2] = "".concat(n, " and ").concat(l[2]) : l[2] = n), e1.push(l));
                            }
                        }, e1;
                    };
                },
                function(t, e1, n) {
                    "use strict";
                    n.r(e1), e1.default = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0.2 -0.3 9 11.4" width="12" height="14">\n  <path d="M0 2.77V.92A1 1 0 01.2.28C.35.1.56 0 .83 0h7.66c.28.01.48.1.63.28.14.17.21.38.21.64v1.85c0 .26-.08.48-.23.66-.15.17-.37.26-.66.26-.28 0-.5-.09-.64-.26a1 1 0 01-.21-.66V1.69H5.6v7.58h.5c.25 0 .45.08.6.23.17.16.25.35.25.6s-.08.45-.24.6a.87.87 0 01-.62.22H3.21a.87.87 0 01-.61-.22.78.78 0 01-.24-.6c0-.25.08-.44.24-.6a.85.85 0 01.61-.23h.5V1.7H1.73v1.08c0 .26-.08.48-.23.66-.15.17-.37.26-.66.26-.28 0-.5-.09-.64-.26A1 1 0 010 2.77z"/>\n</svg>\n';
                }
            ]);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(14)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a) {
                "use strict";
                var s = n(1);
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = s(r), i = s(i), a = s(a);
                var l = function() {
                    function t() {
                        (0, r.default)(this, t), this.commandName = "bold", this.CSS = {
                            button: "ce-inline-tool",
                            buttonActive: "ce-inline-tool--active",
                            buttonModifier: "ce-inline-tool--bold"
                        }, this.nodes = {
                            button: void 0
                        };
                    }
                    return (0, i.default)(t, [
                        {
                            key: "render",
                            value: function() {
                                return this.nodes.button = document.createElement("button"), this.nodes.button.type = "button", this.nodes.button.classList.add(this.CSS.button, this.CSS.buttonModifier), this.nodes.button.appendChild(a.default.svg("bold", 12, 14)), this.nodes.button;
                            }
                        },
                        {
                            key: "surround",
                            value: function(t) {
                                document.execCommand(this.commandName);
                            }
                        },
                        {
                            key: "checkState",
                            value: function(t) {
                                var e1 = document.queryCommandState(this.commandName);
                                return this.nodes.button.classList.toggle(this.CSS.buttonActive, e1), e1;
                            }
                        },
                        {
                            key: "shortcut",
                            get: function() {
                                return "CMD+B";
                            }
                        }
                    ], [
                        {
                            key: "sanitize",
                            get: function() {
                                return {
                                    b: {}
                                };
                            }
                        }
                    ]), t;
                }();
                o.default = l, l.displayName = "BoldInlineTool", l.isInline = !0, l.title = "Bold", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(14)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a) {
                "use strict";
                var s = n(1);
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = s(r), i = s(i), a = s(a);
                var l = function() {
                    function t() {
                        (0, r.default)(this, t), this.commandName = "italic", this.CSS = {
                            button: "ce-inline-tool",
                            buttonActive: "ce-inline-tool--active",
                            buttonModifier: "ce-inline-tool--italic"
                        }, this.nodes = {
                            button: null
                        };
                    }
                    return (0, i.default)(t, [
                        {
                            key: "render",
                            value: function() {
                                return this.nodes.button = document.createElement("button"), this.nodes.button.type = "button", this.nodes.button.classList.add(this.CSS.button, this.CSS.buttonModifier), this.nodes.button.appendChild(a.default.svg("italic", 4, 11)), this.nodes.button;
                            }
                        },
                        {
                            key: "surround",
                            value: function(t) {
                                document.execCommand(this.commandName);
                            }
                        },
                        {
                            key: "checkState",
                            value: function(t) {
                                var e1 = document.queryCommandState(this.commandName);
                                return this.nodes.button.classList.toggle(this.CSS.buttonActive, e1), e1;
                            }
                        },
                        {
                            key: "shortcut",
                            get: function() {
                                return "CMD+I";
                            }
                        }
                    ], [
                        {
                            key: "sanitize",
                            get: function() {
                                return {
                                    i: {}
                                };
                            }
                        }
                    ]), t;
                }();
                o.default = l, l.displayName = "ItalicInlineTool", l.isInline = !0, l.title = "Italic", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(25),
                n(14),
                n(7)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l) {
                "use strict";
                var c = n(8), u = n(1);
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = u(r), i = u(i), a = u(a), s = u(s), l = c(l);
                var f = function() {
                    function t(e1) {
                        var n = e1.api;
                        (0, r.default)(this, t), this.commandLink = "createLink", this.commandUnlink = "unlink", this.ENTER_KEY = 13, this.CSS = {
                            button: "ce-inline-tool",
                            buttonActive: "ce-inline-tool--active",
                            buttonModifier: "ce-inline-tool--link",
                            buttonUnlink: "ce-inline-tool--unlink",
                            input: "ce-inline-tool-input",
                            inputShowed: "ce-inline-tool-input--showed"
                        }, this.nodes = {
                            button: null,
                            input: null
                        }, this.inputOpened = !1, this.toolbar = n.toolbar, this.inlineToolbar = n.inlineToolbar, this.notifier = n.notifier, this.i18n = n.i18n, this.selection = new a.default;
                    }
                    return (0, i.default)(t, [
                        {
                            key: "render",
                            value: function() {
                                return this.nodes.button = document.createElement("button"), this.nodes.button.type = "button", this.nodes.button.classList.add(this.CSS.button, this.CSS.buttonModifier), this.nodes.button.appendChild(s.default.svg("link", 14, 10)), this.nodes.button.appendChild(s.default.svg("unlink", 15, 11)), this.nodes.button;
                            }
                        },
                        {
                            key: "renderActions",
                            value: function() {
                                var t = this;
                                return this.nodes.input = document.createElement("input"), this.nodes.input.placeholder = this.i18n.t("Add a link"), this.nodes.input.classList.add(this.CSS.input), this.nodes.input.addEventListener("keydown", function(e1) {
                                    e1.keyCode === t.ENTER_KEY && t.enterPressed(e1);
                                }), this.nodes.input;
                            }
                        },
                        {
                            key: "surround",
                            value: function(t) {
                                if (t) {
                                    this.inputOpened ? (this.selection.restore(), this.selection.removeFakeBackground()) : (this.selection.setFakeBackground(), this.selection.save());
                                    var e1 = this.selection.findParentTag("A");
                                    if (e1) return this.selection.expandToTag(e1), this.unlink(), this.closeActions(), this.checkState(), void this.toolbar.close();
                                }
                                this.toggleActions();
                            }
                        },
                        {
                            key: "checkState",
                            value: function(t) {
                                var e1 = this.selection.findParentTag("A");
                                if (e1) {
                                    this.nodes.button.classList.add(this.CSS.buttonUnlink), this.nodes.button.classList.add(this.CSS.buttonActive), this.openActions();
                                    var n = e1.getAttribute("href");
                                    this.nodes.input.value = "null" !== n ? n : "", this.selection.save();
                                } else this.nodes.button.classList.remove(this.CSS.buttonUnlink), this.nodes.button.classList.remove(this.CSS.buttonActive);
                                return !!e1;
                            }
                        },
                        {
                            key: "clear",
                            value: function() {
                                this.closeActions();
                            }
                        },
                        {
                            key: "toggleActions",
                            value: function() {
                                this.inputOpened ? this.closeActions(!1) : this.openActions(!0);
                            }
                        },
                        {
                            key: "openActions",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                                this.nodes.input.classList.add(this.CSS.inputShowed), t && this.nodes.input.focus(), this.inputOpened = !0;
                            }
                        },
                        {
                            key: "closeActions",
                            value: function() {
                                var t = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
                                if (this.selection.isFakeBackgroundEnabled) {
                                    var e1 = new a.default;
                                    e1.save(), this.selection.restore(), this.selection.removeFakeBackground(), e1.restore();
                                }
                                this.nodes.input.classList.remove(this.CSS.inputShowed), this.nodes.input.value = "", t && this.selection.clearSaved(), this.inputOpened = !1;
                            }
                        },
                        {
                            key: "enterPressed",
                            value: function(t) {
                                var e1 = this.nodes.input.value || "";
                                return e1.trim() ? this.validateURL(e1) ? (e1 = this.prepareLink(e1), this.selection.restore(), this.selection.removeFakeBackground(), this.insertLink(e1), t.preventDefault(), t.stopPropagation(), t.stopImmediatePropagation(), this.selection.collapseToEnd(), void this.inlineToolbar.close()) : (this.notifier.show({
                                    message: "Pasted link is not valid.",
                                    style: "error"
                                }), void l.log("Incorrect Link pasted", "warn", e1)) : (this.selection.restore(), this.unlink(), t.preventDefault(), void this.closeActions());
                            }
                        },
                        {
                            key: "validateURL",
                            value: function(t) {
                                return !/\s/.test(t);
                            }
                        },
                        {
                            key: "prepareLink",
                            value: function(t) {
                                return t = t.trim(), t = this.addProtocol(t);
                            }
                        },
                        {
                            key: "addProtocol",
                            value: function(t) {
                                if (/^(\w+):(\/\/)?/.test(t)) return t;
                                var e1 = /^\/[^/\s]/.test(t), n = "#" === t.substring(0, 1), o = /^\/\/[^/\s]/.test(t);
                                return e1 || n || o || (t = "http://" + t), t;
                            }
                        },
                        {
                            key: "insertLink",
                            value: function(t) {
                                var e1 = this.selection.findParentTag("A");
                                e1 && this.selection.expandToTag(e1), document.execCommand(this.commandLink, !1, t);
                            }
                        },
                        {
                            key: "unlink",
                            value: function() {
                                document.execCommand(this.commandUnlink);
                            }
                        },
                        {
                            key: "shortcut",
                            get: function() {
                                return "CMD+K";
                            }
                        }
                    ], [
                        {
                            key: "sanitize",
                            get: function() {
                                return {
                                    a: {
                                        href: !0,
                                        target: "_blank",
                                        rel: "nofollow"
                                    }
                                };
                            }
                        }
                    ]), t;
                }();
                o.default = f, f.displayName = "LinkInlineTool", f.isInline = !0, f.title = "Link", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(14)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a) {
                "use strict";
                var s = n(1);
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = s(r), i = s(i), a = s(a);
                var l = function() {
                    function t(e1) {
                        var n = e1.data, o = e1.api;
                        (0, r.default)(this, t), this.CSS = {
                            wrapper: "ce-stub",
                            info: "ce-stub__info",
                            title: "ce-stub__title",
                            subtitle: "ce-stub__subtitle"
                        }, this.api = o, this.title = n.title || this.api.i18n.t("Error"), this.subtitle = this.api.i18n.t("The block can not be displayed correctly."), this.savedData = n.savedData, this.wrapper = this.make();
                    }
                    return (0, i.default)(t, [
                        {
                            key: "render",
                            value: function() {
                                return this.wrapper;
                            }
                        },
                        {
                            key: "save",
                            value: function() {
                                return this.savedData;
                            }
                        },
                        {
                            key: "make",
                            value: function() {
                                var t = a.default.make("div", this.CSS.wrapper), e1 = a.default.svg("sad-face", 52, 52), n = a.default.make("div", this.CSS.info), o = a.default.make("div", this.CSS.title, {
                                    textContent: this.title
                                }), r = a.default.make("div", this.CSS.subtitle, {
                                    textContent: this.subtitle
                                });
                                return t.appendChild(e1), n.appendChild(o), n.appendChild(r), t.appendChild(n), t;
                            }
                        }
                    ]), t;
                }();
                o.default = l, l.displayName = "Stub", l.isReadOnlySupported = !0, t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(68),
                n(395),
                n(396),
                n(397)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c) {
                "use strict";
                var u = n(1);
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = u(r), i = u(i), s = u(s), l = u(l), c = u(c);
                var f = function(t, e1) {
                    var n = {};
                    for(var o in t)Object.prototype.hasOwnProperty.call(t, o) && e1.indexOf(o) < 0 && (n[o] = t[o]);
                    if (null != t && "function" == typeof Object.getOwnPropertySymbols) {
                        var r = 0;
                        for(o = Object.getOwnPropertySymbols(t); r < o.length; r++)e1.indexOf(o[r]) < 0 && Object.prototype.propertyIsEnumerable.call(t, o[r]) && (n[o[r]] = t[o[r]]);
                    }
                    return n;
                }, d = function() {
                    function t(e1, n, o) {
                        (0, r.default)(this, t), this.api = o, this.config = e1, this.editorConfig = n;
                    }
                    return (0, i.default)(t, [
                        {
                            key: "get",
                            value: function(t) {
                                var e1 = this.config[t], n = e1.class, o = e1.isInternal, r = void 0 !== o && o, i = f(e1, [
                                    "class",
                                    "isInternal"
                                ]);
                                return new (this.getConstructor(n))({
                                    name: t,
                                    constructable: n,
                                    config: i,
                                    api: this.api,
                                    isDefault: t === this.editorConfig.defaultBlock,
                                    defaultPlaceholder: this.editorConfig.placeholder,
                                    isInternal: r
                                });
                            }
                        },
                        {
                            key: "getConstructor",
                            value: function(t) {
                                switch(!0){
                                    case t[a.InternalInlineToolSettings.IsInline]:
                                        return s.default;
                                    case t[a.InternalTuneSettings.IsTune]:
                                        return l.default;
                                    default:
                                        return c.default;
                                }
                            }
                        }
                    ]), t;
                }();
                o.default = d, d.displayName = "ToolsFactory", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(68)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c) {
                "use strict";
                var u = n(8), f = n(1);
                function d() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = f(r), i = f(i), a = f(a), s = f(s), l = f(l);
                var p = function(t) {
                    (0, a.default)(o, t);
                    var e1, n = (e1 = o, function() {
                        var t, n = (0, l.default)(e1);
                        if (d()) {
                            var o = (0, l.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, s.default)(this, t);
                    });
                    function o() {
                        var t;
                        return (0, r.default)(this, o), (t = n.apply(this, arguments)).type = c.ToolType.Inline, t;
                    }
                    return (0, i.default)(o, [
                        {
                            key: "create",
                            value: function() {
                                return new this.constructable({
                                    api: this.api.getMethodsForTool(this),
                                    config: this.settings
                                });
                            }
                        },
                        {
                            key: "title",
                            get: function() {
                                return this.constructable[c.InternalInlineToolSettings.Title];
                            }
                        }
                    ]), o;
                }((c = u(c)).default);
                o.default = p, p.displayName = "InlineTool", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(5),
                n(6),
                n(4),
                n(68)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c) {
                "use strict";
                var u = n(8), f = n(1);
                function d() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = f(r), i = f(i), a = f(a), s = f(s), l = f(l);
                var p = function(t) {
                    (0, a.default)(o, t);
                    var e1, n = (e1 = o, function() {
                        var t, n = (0, l.default)(e1);
                        if (d()) {
                            var o = (0, l.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, s.default)(this, t);
                    });
                    function o() {
                        var t;
                        return (0, r.default)(this, o), (t = n.apply(this, arguments)).type = c.ToolType.Tune, t;
                    }
                    return (0, i.default)(o, [
                        {
                            key: "create",
                            value: function(t, e1) {
                                return new this.constructable({
                                    api: this.api.getMethodsForTool(this),
                                    config: this.settings,
                                    block: e1,
                                    data: t
                                });
                            }
                        }
                    ]), o;
                }((c = u(c)).default);
                o.default = p, p.displayName = "BlockTune", t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(113),
                n(5),
                n(6),
                n(4),
                n(59),
                n(68),
                n(7),
                n(185)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a, s, l, c, u, f, d, p) {
                "use strict";
                var h = n(8), v = n(1);
                function g() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = v(r), i = v(i), a = v(a), s = v(s), l = v(l), c = v(c), u = v(u), f = h(f), d = h(d), p = v(p);
                var y = function(t, e1, n, o) {
                    var r, i = arguments.length, a = i < 3 ? e1 : null === o ? o = Object.getOwnPropertyDescriptor(e1, n) : o;
                    if ("object" === ("undefined" == typeof Reflect ? "undefined" : (0, u.default)(Reflect)) && "function" == typeof Reflect.decorate) a = Reflect.decorate(t, e1, n, o);
                    else for(var s = t.length - 1; s >= 0; s--)(r = t[s]) && (a = (i < 3 ? r(a) : i > 3 ? r(e1, n, a) : r(e1, n)) || a);
                    return i > 3 && a && Object.defineProperty(e1, n, a), a;
                }, b = function(t) {
                    (0, s.default)(o, t);
                    var e1, n = (e1 = o, function() {
                        var t, n = (0, c.default)(e1);
                        if (g()) {
                            var o = (0, c.default)(this).constructor;
                            t = Reflect.construct(n, arguments, o);
                        } else t = n.apply(this, arguments);
                        return (0, l.default)(this, t);
                    });
                    function o() {
                        var t;
                        return (0, r.default)(this, o), (t = n.apply(this, arguments)).type = f.ToolType.Block, t.inlineTools = new p.default, t.tunes = new p.default, t;
                    }
                    return (0, i.default)(o, [
                        {
                            key: "create",
                            value: function(t, e1, n) {
                                return new this.constructable({
                                    data: t,
                                    block: e1,
                                    readOnly: n,
                                    api: this.api.getMethodsForTool(this),
                                    config: this.settings
                                });
                            }
                        },
                        {
                            key: "isReadOnlySupported",
                            get: function() {
                                return !0 === this.constructable[f.InternalBlockToolSettings.IsReadOnlySupported];
                            }
                        },
                        {
                            key: "isLineBreaksEnabled",
                            get: function() {
                                return this.constructable[f.InternalBlockToolSettings.IsEnabledLineBreaks];
                            }
                        },
                        {
                            key: "toolbox",
                            get: function() {
                                var t = this.constructable[f.InternalBlockToolSettings.Toolbox], e1 = this.config[f.UserSettings.Toolbox];
                                if (!d.isEmpty(t) && !1 !== e1) return e1 ? Array.isArray(t) ? Array.isArray(e1) ? e1.map(function(e1, n) {
                                    var o = t[n];
                                    return o ? Object.assign(Object.assign({}, o), e1) : e1;
                                }) : [
                                    e1
                                ] : Array.isArray(e1) ? e1 : [
                                    Object.assign(Object.assign({}, t), e1)
                                ] : Array.isArray(t) ? t : [
                                    t
                                ];
                            }
                        },
                        {
                            key: "conversionConfig",
                            get: function() {
                                return this.constructable[f.InternalBlockToolSettings.ConversionConfig];
                            }
                        },
                        {
                            key: "enabledInlineTools",
                            get: function() {
                                return this.config[f.UserSettings.EnabledInlineTools] || !1;
                            }
                        },
                        {
                            key: "enabledBlockTunes",
                            get: function() {
                                return this.config[f.UserSettings.EnabledBlockTunes];
                            }
                        },
                        {
                            key: "pasteConfig",
                            get: function() {
                                return this.constructable[f.InternalBlockToolSettings.PasteConfig] || {};
                            }
                        },
                        {
                            key: "sanitizeConfig",
                            get: function() {
                                var t = (0, a.default)((0, c.default)(o.prototype), "sanitizeConfig", this), e1 = this.baseSanitizeConfig;
                                if (d.isEmpty(t)) return e1;
                                var n = {};
                                for(var r in t)if (Object.prototype.hasOwnProperty.call(t, r)) {
                                    var i = t[r];
                                    d.isObject(i) ? n[r] = Object.assign({}, e1, i) : n[r] = i;
                                }
                                return n;
                            }
                        },
                        {
                            key: "baseSanitizeConfig",
                            get: function() {
                                var t = {};
                                return Array.from(this.inlineTools.values()).forEach(function(e1) {
                                    return Object.assign(t, e1.sanitizeConfig);
                                }), Array.from(this.tunes.values()).forEach(function(e1) {
                                    return Object.assign(t, e1.sanitizeConfig);
                                }), t;
                            }
                        }
                    ]), o;
                }(f.default);
                o.default = b, b.displayName = "BlockTool", y([
                    d.cacheable
                ], b.prototype, "sanitizeConfig", null), y([
                    d.cacheable
                ], b.prototype, "baseSanitizeConfig", null), t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(14)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a) {
                "use strict";
                var s = n(1);
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = s(r), i = s(i), a = s(a);
                var l = function() {
                    function t(e1) {
                        var n = e1.api;
                        (0, r.default)(this, t), this.CSS = {
                            button: "ce-settings__button",
                            wrapper: "ce-tune-move-down",
                            animation: "wobble"
                        }, this.api = n;
                    }
                    return (0, i.default)(t, [
                        {
                            key: "render",
                            value: function() {
                                var t = this, e1 = a.default.make("div", [
                                    this.CSS.button,
                                    this.CSS.wrapper
                                ], {});
                                return e1.appendChild(a.default.svg("arrow-down", 14, 14)), this.api.listeners.on(e1, "click", function(n) {
                                    return t.handleClick(n, e1);
                                }, !1), this.api.tooltip.onHover(e1, this.api.i18n.t("Move down"), {
                                    hidingDelay: 300
                                }), e1;
                            }
                        },
                        {
                            key: "handleClick",
                            value: function(t, e1) {
                                var n = this, o = this.api.blocks.getCurrentBlockIndex(), r = this.api.blocks.getBlockByIndex(o + 1);
                                if (!r) return e1.classList.add(this.CSS.animation), void window.setTimeout(function() {
                                    e1.classList.remove(n.CSS.animation);
                                }, 500);
                                var i = r.holder, a = i.getBoundingClientRect(), s = Math.abs(window.innerHeight - i.offsetHeight);
                                a.top < window.innerHeight && (s = window.scrollY + i.offsetHeight), window.scrollTo(0, s), this.api.blocks.move(o + 1), this.api.toolbar.toggleBlockSettings(!0), this.api.tooltip.hide();
                            }
                        }
                    ]), t;
                }();
                o.default = l, l.displayName = "MoveDownTune", l.isTune = !0, t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(14)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a) {
                "use strict";
                var s = n(1);
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = s(r), i = s(i), a = s(a);
                var l = function() {
                    function t(e1) {
                        var n = this, o = e1.api;
                        (0, r.default)(this, t), this.CSS = {
                            button: "ce-settings__button",
                            buttonDelete: "ce-settings__button--delete",
                            buttonConfirm: "ce-settings__button--confirm"
                        }, this.nodes = {
                            button: null
                        }, this.api = o, this.resetConfirmation = function() {
                            n.setConfirmation(!1);
                        };
                    }
                    return (0, i.default)(t, [
                        {
                            key: "render",
                            value: function() {
                                var t = this;
                                return this.nodes.button = a.default.make("div", [
                                    this.CSS.button,
                                    this.CSS.buttonDelete
                                ], {}), this.nodes.button.appendChild(a.default.svg("cross", 12, 12)), this.api.listeners.on(this.nodes.button, "click", function(e1) {
                                    return t.handleClick(e1);
                                }, !1), this.api.tooltip.onHover(this.nodes.button, this.api.i18n.t("Delete"), {
                                    hidingDelay: 300
                                }), this.nodes.button;
                            }
                        },
                        {
                            key: "handleClick",
                            value: function(t) {
                                this.needConfirmation ? (this.api.events.off("block-settings-closed", this.resetConfirmation), this.api.blocks.delete(), this.api.toolbar.close(), this.api.tooltip.hide(), t.stopPropagation()) : (this.setConfirmation(!0), this.api.events.on("block-settings-closed", this.resetConfirmation));
                            }
                        },
                        {
                            key: "setConfirmation",
                            value: function(t) {
                                this.needConfirmation = t, this.nodes.button.classList.add(this.CSS.buttonConfirm);
                            }
                        }
                    ]), t;
                }();
                o.default = l, l.displayName = "DeleteTune", l.isTune = !0, t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            var o, r, i;
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [
                e1,
                n(2),
                n(3),
                n(14)
            ], void 0 === (i = "function" == typeof (o = function(o, r, i, a) {
                "use strict";
                var s = n(1);
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }), o.default = void 0, r = s(r), i = s(i), a = s(a);
                var l = function() {
                    function t(e1) {
                        var n = e1.api;
                        (0, r.default)(this, t), this.CSS = {
                            button: "ce-settings__button",
                            wrapper: "ce-tune-move-up",
                            animation: "wobble"
                        }, this.api = n;
                    }
                    return (0, i.default)(t, [
                        {
                            key: "render",
                            value: function() {
                                var t = this, e1 = a.default.make("div", [
                                    this.CSS.button,
                                    this.CSS.wrapper
                                ], {});
                                return e1.appendChild(a.default.svg("arrow-up", 14, 14)), this.api.listeners.on(e1, "click", function(n) {
                                    return t.handleClick(n, e1);
                                }, !1), this.api.tooltip.onHover(e1, this.api.i18n.t("Move up"), {
                                    hidingDelay: 300
                                }), e1;
                            }
                        },
                        {
                            key: "handleClick",
                            value: function(t, e1) {
                                var n = this, o = this.api.blocks.getCurrentBlockIndex(), r = this.api.blocks.getBlockByIndex(o), i = this.api.blocks.getBlockByIndex(o - 1);
                                if (0 === o || !r || !i) return e1.classList.add(this.CSS.animation), void window.setTimeout(function() {
                                    e1.classList.remove(n.CSS.animation);
                                }, 500);
                                var a, s = r.holder, l = i.holder, c = s.getBoundingClientRect(), u = l.getBoundingClientRect();
                                a = u.top > 0 ? Math.abs(c.top) - Math.abs(u.top) : window.innerHeight - Math.abs(c.top) + Math.abs(u.top), window.scrollBy(0, -1 * a), this.api.blocks.move(o - 1), this.api.toolbar.toggleBlockSettings(!0), this.api.tooltip.hide();
                            }
                        }
                    ]), t;
                }();
                o.default = l, l.displayName = "MoveUpTune", l.isTune = !0, t.exports = e1.default;
            }) ? o.apply(e1, r) : o) || (t.exports = i);
        },
        function(t, e1, n) {
            "use strict";
            n.r(e1), e1.default = '<?xml version="1.0" encoding="utf-8"?>\n<svg xmlns="http://www.w3.org/2000/svg">\n<symbol id="arrow-down" viewBox="0 0 14 14">\n  <path transform="matrix(1 0 0 -1 0 14)" d="M8.024 4.1v8.6a1.125 1.125 0 0 1-2.25 0V4.1L2.18 7.695A1.125 1.125 0 1 1 .59 6.104L6.103.588c.44-.439 1.151-.439 1.59 0l5.516 5.516a1.125 1.125 0 0 1-1.59 1.59L8.023 4.1z"/>\n\n</symbol>\n<symbol id="arrow-up" viewBox="0 0 14 14">\n    <path d="M8.024 4.1v8.6a1.125 1.125 0 0 1-2.25 0V4.1L2.18 7.695A1.125 1.125 0 1 1 .59 6.104L6.103.588c.44-.439 1.151-.439 1.59 0l5.516 5.516a1.125 1.125 0 0 1-1.59 1.59L8.023 4.1z"/>\n\n</symbol>\n<symbol id="bold" viewBox="0 0 12 14"><path d="M5.997 14H1.72c-.618 0-1.058-.138-1.323-.415C.132 13.308 0 12.867 0 12.262V1.738C0 1.121.135.676.406.406.676.136 1.114 0 1.719 0h4.536c.669 0 1.248.041 1.738.124.49.083.93.242 1.318.478a3.458 3.458 0 0 1 1.461 1.752c.134.366.2.753.2 1.16 0 1.401-.7 2.426-2.1 3.075 1.84.586 2.76 1.726 2.76 3.42 0 .782-.2 1.487-.602 2.114a3.61 3.61 0 0 1-1.623 1.39 5.772 5.772 0 0 1-1.471.377c-.554.073-1.2.11-1.939.11zm-.21-6.217h-2.95v4.087h3.046c1.916 0 2.874-.69 2.874-2.072 0-.707-.248-1.22-.745-1.537-.496-.319-1.238-.478-2.225-.478zM2.837 2.13v3.619h2.597c.707 0 1.252-.067 1.638-.2.385-.134.68-.389.883-.765.16-.267.239-.566.239-.897 0-.707-.252-1.176-.755-1.409-.503-.232-1.27-.348-2.301-.348H2.836z"/>\n</symbol>\n<symbol id="cross" viewBox="0 0 237 237">\n  <path transform="rotate(45 280.675 51.325)" d="M191 191V73c0-5.523 4.477-10 10-10h25c5.523 0 10 4.477 10 10v118h118c5.523 0 10 4.477 10 10v25c0 5.523-4.477 10-10 10H236v118c0 5.523-4.477 10-10 10h-25c-5.523 0-10-4.477-10-10V236H73c-5.523 0-10-4.477-10-10v-25c0-5.523 4.477-10 10-10h118z"/>\n\n</symbol>\n<symbol id="dots" viewBox="0 0 16 16">\n  <g transform="translate(4 1.5)" fill-rule="evenodd">\n    <circle cx="1.3" cy="1.3" r="1.3"/>\n    <circle cx="6.5" cy="1.3" r="1.3"/>\n    <circle cx="6.5" cy="6.5" r="1.3"/>\n    <circle cx="1.3" cy="6.5" r="1.3"/>\n    <circle cx="6.5" cy="11.7" r="1.3"/>\n    <circle cx="1.3" cy="11.7" r="1.3"/>\n  </g>\n\n</symbol>\n<symbol id="italic" viewBox="0 0 4 11">\n    <path d="M3.289 4.17L2.164 9.713c-.078.384-.238.674-.48.87-.243.198-.52.296-.831.296-.312 0-.545-.1-.699-.302-.153-.202-.192-.49-.116-.864L1.15 4.225c.077-.38.232-.665.466-.857a1.25 1.25 0 01.818-.288c.312 0 .55.096.713.288.163.192.21.46.141.801zm-.667-2.09c-.295 0-.53-.09-.706-.273-.176-.181-.233-.439-.173-.77.055-.302.207-.55.457-.745C2.45.097 2.716 0 3 0c.273 0 .5.088.68.265.179.176.238.434.177.771-.06.327-.21.583-.45.767-.24.185-.502.277-.785.277z"/>\n\n</symbol>\n<symbol id="link" viewBox="0 0 14 10">\n  <path d="M6 0v2H5a3 3 0 000 6h1v2H5A5 5 0 115 0h1zm2 0h1a5 5 0 110 10H8V8h1a3 3 0 000-6H8V0zM5 4h4a1 1 0 110 2H5a1 1 0 110-2z"/>\n\n</symbol>\n<symbol id="plus" viewBox="0 0 16 16">\n  <g transform="translate(1 1.5)" fill-rule="evenodd">\n    <rect x="6" width="2" height="13" rx="1"/>\n    <rect x=".5" y="5.5" width="13" height="2" rx="1"/>\n  </g>\n\n</symbol>\n<symbol id="sad-face" viewBox="0 0 52 52">\n    <path fill="#D76B6B" fill-rule="nonzero" d="M26 52C11.64 52 0 40.36 0 26S11.64 0 26 0s26 11.64 26 26-11.64 26-26 26zm0-3.25c12.564 0 22.75-10.186 22.75-22.75S38.564 3.25 26 3.25 3.25 13.436 3.25 26 13.436 48.75 26 48.75zM15.708 33.042a2.167 2.167 0 1 1 0-4.334 2.167 2.167 0 0 1 0 4.334zm23.834 0a2.167 2.167 0 1 1 0-4.334 2.167 2.167 0 0 1 0 4.334zm-15.875 5.452a1.083 1.083 0 1 1-1.834-1.155c1.331-2.114 3.49-3.179 6.334-3.179 2.844 0 5.002 1.065 6.333 3.18a1.083 1.083 0 1 1-1.833 1.154c-.913-1.45-2.366-2.167-4.5-2.167s-3.587.717-4.5 2.167z"/>\n\n</symbol>\n<symbol id="search" viewBox="0 0 16 16">\n  <path d="M12.711 2.18a7.448 7.448 0 0 1 .79 9.603l2.143 2.144a1.214 1.214 0 1 1-1.717 1.717L11.783 13.5a7.446 7.446 0 1 1 .928-11.32ZM11.39 3.61a5.5 5.5 0 1 0-7.778 7.78 5.5 5.5 0 0 0 7.778-7.78Z" fill-rule="evenodd"/>\n\n</symbol>\n<symbol id="toggler-down">\n  <path d="M6.5 9.294a.792.792 0 01-.562-.232L2.233 5.356a.794.794 0 011.123-1.123L6.5 7.377l3.144-3.144a.794.794 0 011.123 1.123L7.062 9.062a.792.792 0 01-.562.232z"/>\n\n</symbol>\n<symbol id="unlink" viewBox="0 0 15 11">\n  <path d="M13.073 2.099l-1.448 1.448A3 3 0 009 2H8V0h1c1.68 0 3.166.828 4.073 2.099zM6.929 4l-.879.879L7.172 6H5a1 1 0 110-2h1.929zM6 0v2H5a3 3 0 100 6h1v2H5A5 5 0 115 0h1zm6.414 7l2.122 2.121-1.415 1.415L11 8.414l-2.121 2.122L7.464 9.12 9.586 7 7.464 4.879 8.88 3.464 11 5.586l2.121-2.122 1.415 1.415L12.414 7z"/>\n\n</symbol></svg>';
        },
        function(t, e1) {
            t.exports = '.codex-editor{position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;z-index:1}.codex-editor .hide,.codex-editor__redactor--hidden{display:none}.codex-editor__redactor [contenteditable]:empty:after{content:"\\feff "}@media (min-width:651px){.codex-editor--narrow .codex-editor__redactor{margin-right:50px}}@media (min-width:651px){.codex-editor--narrow.codex-editor--rtl .codex-editor__redactor{margin-left:50px;margin-right:0}}@media (min-width:651px){.codex-editor--narrow .ce-toolbar__actions{right:-5px}}.codex-editor__loader{position:relative;height:30vh}.codex-editor__loader:before{content:"";position:absolute;left:50%;top:50%;width:30px;height:30px;margin-top:-15px;margin-left:-15px;border-radius:50%;border:2px solid rgba(201,201,204,.48);border-top-color:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-animation:editor-loader-spin .8s linear infinite;animation:editor-loader-spin .8s linear infinite;will-change:transform}.codex-editor-copyable{position:absolute;height:1px;width:1px;top:-400%;opacity:.001}.codex-editor-overlay{position:fixed;top:0;left:0;right:0;bottom:0;z-index:999;pointer-events:none;overflow:hidden}.codex-editor-overlay__container{position:relative;pointer-events:auto;z-index:0}.codex-editor-overlay__rectangle{position:absolute;pointer-events:none;background-color:rgba(46,170,220,.2);border:1px solid transparent}.codex-editor svg{fill:currentColor;vertical-align:middle;max-height:100%}::-moz-selection{background-color:#d4ecff}::selection{background-color:#d4ecff}.codex-editor--toolbox-opened [contentEditable=true][data-placeholder]:focus:before{opacity:0!important}@-webkit-keyframes editor-loader-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@keyframes editor-loader-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}.ce-scroll-locked{overflow:hidden}.ce-scroll-locked--hard{overflow:hidden;top:calc(-1*var(--window-scroll-offset));position:fixed;width:100%}.ce-toolbar{position:absolute;left:0;right:0;top:0;-webkit-transition:opacity .1s ease;transition:opacity .1s ease;will-change:opacity,top;display:none}.ce-toolbar--opened{display:block}.ce-toolbar__content{max-width:650px;margin:0 auto;position:relative}.ce-toolbar__plus{color:#1d202b;cursor:pointer;width:26px;height:26px;border-radius:7px;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}@media (max-width:650px){.ce-toolbar__plus{width:36px;height:36px}}@media (hover:hover){.ce-toolbar__plus:hover{background-color:#eff2f5}}.ce-toolbar__plus{-ms-flex-negative:0;flex-shrink:0}.ce-toolbar__plus--active{background-color:#eff2f5;-webkit-animation:bounceIn .75s 1;animation:bounceIn .75s 1;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}.ce-toolbar__plus-shortcut{opacity:.6;word-spacing:-2px;margin-top:5px}@media (max-width:650px){.ce-toolbar__plus{position:absolute;background-color:#fff;border:1px solid #e8e8eb;-webkit-box-shadow:0 3px 15px -3px rgba(13,20,33,.13);box-shadow:0 3px 15px -3px rgba(13,20,33,.13);border-radius:6px;z-index:2}}@media (max-width:650px) and (max-width:650px){.ce-toolbar__plus{-webkit-box-shadow:0 8px 6px -6px rgba(33,48,73,.19);box-shadow:0 8px 6px -6px rgba(33,48,73,.19);border-bottom-color:#c7c7c7}}@media (max-width:650px){.ce-toolbar__plus{position:static}.ce-toolbar__plus--left-oriented:before{left:15px;margin-left:0}.ce-toolbar__plus--right-oriented:before{left:auto;right:15px;margin-left:0}}.ce-toolbar__actions{position:absolute;right:100%;opacity:0;display:-webkit-box;display:-ms-flexbox;display:flex;padding-right:5px}.ce-toolbar__actions--opened{opacity:1}@media (max-width:650px){.ce-toolbar__actions{right:auto}}.ce-toolbar__settings-btn{color:#1d202b;width:26px;height:26px;border-radius:7px;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}@media (max-width:650px){.ce-toolbar__settings-btn{width:36px;height:36px}}@media (hover:hover){.ce-toolbar__settings-btn:hover{background-color:#eff2f5}}.ce-toolbar__settings-btn{margin-left:5px;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ce-toolbar__settings-btn--active{background-color:#eff2f5;-webkit-animation:bounceIn .75s 1;animation:bounceIn .75s 1;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}@media (min-width:651px){.ce-toolbar__settings-btn{width:18px}}.ce-toolbar__settings-btn--hidden{display:none}@media (max-width:650px){.ce-toolbar__settings-btn{position:absolute;background-color:#fff;border:1px solid #e8e8eb;-webkit-box-shadow:0 3px 15px -3px rgba(13,20,33,.13);box-shadow:0 3px 15px -3px rgba(13,20,33,.13);border-radius:6px;z-index:2}}@media (max-width:650px) and (max-width:650px){.ce-toolbar__settings-btn{-webkit-box-shadow:0 8px 6px -6px rgba(33,48,73,.19);box-shadow:0 8px 6px -6px rgba(33,48,73,.19);border-bottom-color:#c7c7c7}}@media (max-width:650px){.ce-toolbar__settings-btn{position:static}.ce-toolbar__settings-btn--left-oriented:before{left:15px;margin-left:0}.ce-toolbar__settings-btn--right-oriented:before{left:auto;right:15px;margin-left:0}}@media (min-width:651px){.codex-editor--narrow .ce-toolbar__plus{left:5px}}.ce-toolbox{--gap:8px}@media (min-width:651px){.ce-toolbox{position:absolute;top:calc(26px + var(--gap));left:0}.ce-toolbox--opened-top{top:calc(-1*(var(--gap) + var(--popover-height)))}}@media (min-width:651px){.codex-editor--narrow .ce-toolbox{left:auto;right:0}.codex-editor--narrow .ce-toolbox .ce-popover{right:0}}.ce-inline-toolbar{position:absolute;background-color:#fff;border:1px solid #e8e8eb;-webkit-box-shadow:0 3px 15px -3px rgba(13,20,33,.13);box-shadow:0 3px 15px -3px rgba(13,20,33,.13);border-radius:6px;z-index:2}@media (max-width:650px){.ce-inline-toolbar{-webkit-box-shadow:0 8px 6px -6px rgba(33,48,73,.19);box-shadow:0 8px 6px -6px rgba(33,48,73,.19);border-bottom-color:#c7c7c7}}.ce-inline-toolbar{-webkit-transform:translateX(-50%) translateY(8px) scale(.9);transform:translateX(-50%) translateY(8px) scale(.9);opacity:0;visibility:hidden;-webkit-transition:opacity .25s ease,-webkit-transform .15s ease;transition:opacity .25s ease,-webkit-transform .15s ease;transition:transform .15s ease,opacity .25s ease;transition:transform .15s ease,opacity .25s ease,-webkit-transform .15s ease;will-change:transform,opacity;top:0;left:0;z-index:3}.ce-inline-toolbar--left-oriented:before{left:15px;margin-left:0}.ce-inline-toolbar--right-oriented:before{left:auto;right:15px;margin-left:0}.ce-inline-toolbar--showed{opacity:1;visibility:visible;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.ce-inline-toolbar--left-oriented{-webkit-transform:translateX(-23px) translateY(8px) scale(.9);transform:translateX(-23px) translateY(8px) scale(.9)}.ce-inline-toolbar--left-oriented.ce-inline-toolbar--showed{-webkit-transform:translateX(-23px);transform:translateX(-23px)}.ce-inline-toolbar--right-oriented{-webkit-transform:translateX(-100%) translateY(8px) scale(.9);transform:translateX(-100%) translateY(8px) scale(.9);margin-left:23px}.ce-inline-toolbar--right-oriented.ce-inline-toolbar--showed{-webkit-transform:translateX(-100%);transform:translateX(-100%)}.ce-inline-toolbar [hidden]{display:none!important}.ce-inline-toolbar__toggler-and-button-wrapper{width:100%;padding:0 6px}.ce-inline-toolbar__buttons,.ce-inline-toolbar__toggler-and-button-wrapper{display:-webkit-box;display:-ms-flexbox;display:flex}.ce-inline-toolbar__dropdown{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;height:34px;padding:0 9px 0 10px;margin:0 6px 0 -6px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;cursor:pointer;border-right:1px solid rgba(201,201,204,.48)}.ce-inline-toolbar__dropdown:hover{background:#eff2f5}.ce-inline-toolbar__dropdown--hidden{display:none}.ce-inline-toolbar__dropdown-content{display:-webkit-box;display:-ms-flexbox;display:flex;font-weight:500;font-size:14px}.ce-inline-toolbar__dropdown-content svg{height:12px}.ce-inline-toolbar__dropdown .icon--toggler-down{margin-left:4px}.ce-inline-toolbar__shortcut{opacity:.6;word-spacing:-3px;margin-top:3px}.ce-inline-tool{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;width:34px;height:34px;line-height:34px;padding:0!important;text-align:center;border-radius:3px;cursor:pointer;border:0;outline:none;background-color:transparent;vertical-align:bottom;color:#000;margin:0}.ce-inline-tool:hover{background-color:#eff2f5}.ce-inline-tool{border-radius:0;line-height:normal;width:auto;padding:0 5px!important;min-width:24px}.ce-inline-tool--active{color:#388ae5}.ce-inline-tool--focused{-webkit-box-shadow:inset 0 0 0 1px rgba(7,161,227,.08);box-shadow:inset 0 0 0 1px rgba(7,161,227,.08);background:rgba(34,186,255,.08)!important}.ce-inline-tool--focused-animated{-webkit-animation-name:buttonClicked;animation-name:buttonClicked;-webkit-animation-duration:.25s;animation-duration:.25s}.ce-inline-tool:not(:last-of-type){margin-right:2px}.ce-inline-tool .icon{height:12px}.ce-inline-tool--link .icon--unlink,.ce-inline-tool--unlink .icon--link{display:none}.ce-inline-tool--unlink .icon--unlink{display:inline-block;margin-bottom:-1px}.ce-inline-tool-input{outline:none;border:0;border-radius:0 0 4px 4px;margin:0;font-size:13px;padding:10px;width:100%;-webkit-box-sizing:border-box;box-sizing:border-box;display:none;font-weight:500;border-top:1px solid rgba(201,201,204,.48)}.ce-inline-tool-input::-webkit-input-placeholder{color:#707684}.ce-inline-tool-input::-moz-placeholder{color:#707684}.ce-inline-tool-input:-ms-input-placeholder{color:#707684}.ce-inline-tool-input::-ms-input-placeholder{color:#707684}.ce-inline-tool-input::placeholder{color:#707684}.ce-inline-tool-input--showed{display:block}.ce-conversion-toolbar{position:absolute;background-color:#fff;border:1px solid #e8e8eb;-webkit-box-shadow:0 3px 15px -3px rgba(13,20,33,.13);box-shadow:0 3px 15px -3px rgba(13,20,33,.13);border-radius:6px;z-index:2}@media (max-width:650px){.ce-conversion-toolbar{-webkit-box-shadow:0 8px 6px -6px rgba(33,48,73,.19);box-shadow:0 8px 6px -6px rgba(33,48,73,.19);border-bottom-color:#c7c7c7}}.ce-conversion-toolbar{opacity:0;visibility:hidden;will-change:transform,opacity;-webkit-transition:opacity .1s ease,-webkit-transform .1s ease;transition:opacity .1s ease,-webkit-transform .1s ease;transition:transform .1s ease,opacity .1s ease;transition:transform .1s ease,opacity .1s ease,-webkit-transform .1s ease;-webkit-transform:translateY(-8px);transform:translateY(-8px);left:-1px;width:150px;margin-top:5px;-webkit-box-sizing:content-box;box-sizing:content-box}.ce-conversion-toolbar--left-oriented:before{left:15px;margin-left:0}.ce-conversion-toolbar--right-oriented:before{left:auto;right:15px;margin-left:0}.ce-conversion-toolbar--showed{opacity:1;visibility:visible;-webkit-transform:none;transform:none}.ce-conversion-toolbar [hidden]{display:none!important}.ce-conversion-toolbar__buttons{display:-webkit-box;display:-ms-flexbox;display:flex}.ce-conversion-toolbar__label{color:#707684;font-size:11px;font-weight:500;letter-spacing:.33px;padding:10px 10px 5px;text-transform:uppercase}.ce-conversion-tool{display:-webkit-box;display:-ms-flexbox;display:flex;padding:5px 10px;font-size:14px;line-height:20px;font-weight:500;cursor:pointer;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.ce-conversion-tool--hidden{display:none}.ce-conversion-tool--focused{-webkit-box-shadow:inset 0 0 0 1px rgba(7,161,227,.08);box-shadow:inset 0 0 0 1px rgba(7,161,227,.08);background:rgba(34,186,255,.08)!important}.ce-conversion-tool--focused-animated{-webkit-animation-name:buttonClicked;animation-name:buttonClicked;-webkit-animation-duration:.25s;animation-duration:.25s}.ce-conversion-tool:hover{background:#eff2f5}.ce-conversion-tool__icon{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;width:20px;height:20px;border:1px solid rgba(201,201,204,.48);border-radius:3px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;margin-right:10px;background:#fff}.ce-conversion-tool__icon svg{width:11px;height:11px}.ce-conversion-tool--last{margin-right:0!important}.ce-conversion-tool--active{color:#388ae5!important;-webkit-animation:bounceIn .75s 1;animation:bounceIn .75s 1;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}.ce-settings{position:absolute;background-color:#fff;border:1px solid #e8e8eb;-webkit-box-shadow:0 3px 15px -3px rgba(13,20,33,.13);box-shadow:0 3px 15px -3px rgba(13,20,33,.13);border-radius:6px;z-index:2}@media (max-width:650px){.ce-settings{-webkit-box-shadow:0 8px 6px -6px rgba(33,48,73,.19);box-shadow:0 8px 6px -6px rgba(33,48,73,.19);border-bottom-color:#c7c7c7}}.ce-settings{top:34px;left:0;min-width:114px;-webkit-box-sizing:content-box;box-sizing:content-box}.ce-settings--left-oriented:before{left:15px;margin-left:0}.ce-settings--right-oriented:before{left:auto;right:15px;margin-left:0}@media (max-width:650px){.ce-settings{bottom:40px;right:auto;top:auto}}.ce-settings:before{left:auto;right:12px}@media (max-width:650px){.ce-settings:before{bottom:-5px;top:auto}}.ce-settings{display:none}.ce-settings--opened{display:block;-webkit-animation-duration:.1s;animation-duration:.1s;-webkit-animation-name:panelShowing;animation-name:panelShowing}.ce-settings__plugin-zone:not(:empty){padding:3px 3px 0}.ce-settings__default-zone:not(:empty){padding:3px}.ce-settings__button{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;width:34px;height:34px;line-height:34px;padding:0!important;text-align:center;border-radius:3px;cursor:pointer;border:0;outline:none;background-color:transparent;vertical-align:bottom;color:#000;margin:0}.ce-settings__button:hover{background-color:#eff2f5}.ce-settings__button--active{color:#388ae5}.ce-settings__button--focused{-webkit-box-shadow:inset 0 0 0 1px rgba(7,161,227,.08);box-shadow:inset 0 0 0 1px rgba(7,161,227,.08);background:rgba(34,186,255,.08)!important}.ce-settings__button--focused-animated{-webkit-animation-name:buttonClicked;animation-name:buttonClicked;-webkit-animation-duration:.25s;animation-duration:.25s}.ce-settings__button:not(:nth-child(3n+3)){margin-right:3px}.ce-settings__button:nth-child(n+4){margin-top:3px}.ce-settings__button{line-height:32px}.ce-settings__button--disabled{cursor:not-allowed!important;opacity:.3}.ce-settings__button--selected{color:#388ae5}.ce-settings__button--delete{-webkit-transition:background-color .3s ease;transition:background-color .3s ease;will-change:background-color}.ce-settings__button--delete .icon{-webkit-transition:-webkit-transform .2s ease-out;transition:-webkit-transform .2s ease-out;transition:transform .2s ease-out;transition:transform .2s ease-out,-webkit-transform .2s ease-out;will-change:transform}.ce-settings__button--confirm{background-color:#e24a4a!important;color:#fff}.ce-settings__button--confirm:hover{background-color:#d54a4a!important}.ce-settings__button--confirm .icon{-webkit-transform:rotate(90deg);transform:rotate(90deg)}@-webkit-keyframes fade-in{0%{opacity:0}to{opacity:1}}@keyframes fade-in{0%{opacity:0}to{opacity:1}}.ce-block{-webkit-animation:fade-in .3s ease;animation:fade-in .3s ease;-webkit-animation-fill-mode:none;-webkit-animation-fill-mode:initial;animation-fill-mode:none}.ce-block:first-of-type{margin-top:0}.ce-block--selected .ce-block__content{background:#e1f2ff}.ce-block--selected .ce-block__content [contenteditable]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ce-block--selected .ce-block__content .ce-stub,.ce-block--selected .ce-block__content img{opacity:.55}.ce-block--stretched .ce-block__content{max-width:none}.ce-block__content{position:relative;max-width:650px;margin:0 auto;-webkit-transition:background-color .15s ease;transition:background-color .15s ease}.ce-block--drop-target .ce-block__content:before{content:"";position:absolute;top:100%;left:-20px;margin-top:-1px;height:8px;width:8px;border:solid #388ae5;border-width:1px 1px 0 0;-webkit-transform-origin:right;transform-origin:right;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.ce-block--drop-target .ce-block__content:after{content:"";position:absolute;top:100%;height:1px;width:100%;color:#388ae5;background:repeating-linear-gradient(90deg,#388ae5,#388ae5 1px,#fff 0,#fff 6px)}.ce-block a{cursor:pointer;text-decoration:underline}.ce-block b{font-weight:700}.ce-block i{font-style:italic}@media (min-width:651px){.codex-editor--narrow .ce-block--focused{margin-right:-50px;padding-right:50px}}.wobble{-webkit-animation-name:wobble;animation-name:wobble;-webkit-animation-duration:.4s;animation-duration:.4s}@-webkit-keyframes wobble{0%{-webkit-transform:translateZ(0);transform:translateZ(0)}15%{-webkit-transform:translate3d(-5%,0,0) rotate(-5deg);transform:translate3d(-5%,0,0) rotate(-5deg)}30%{-webkit-transform:translate3d(2%,0,0) rotate(3deg);transform:translate3d(2%,0,0) rotate(3deg)}45%{-webkit-transform:translate3d(-3%,0,0) rotate(-3deg);transform:translate3d(-3%,0,0) rotate(-3deg)}60%{-webkit-transform:translate3d(2%,0,0) rotate(2deg);transform:translate3d(2%,0,0) rotate(2deg)}75%{-webkit-transform:translate3d(-1%,0,0) rotate(-1deg);transform:translate3d(-1%,0,0) rotate(-1deg)}to{-webkit-transform:translateZ(0);transform:translateZ(0)}}@keyframes wobble{0%{-webkit-transform:translateZ(0);transform:translateZ(0)}15%{-webkit-transform:translate3d(-5%,0,0) rotate(-5deg);transform:translate3d(-5%,0,0) rotate(-5deg)}30%{-webkit-transform:translate3d(2%,0,0) rotate(3deg);transform:translate3d(2%,0,0) rotate(3deg)}45%{-webkit-transform:translate3d(-3%,0,0) rotate(-3deg);transform:translate3d(-3%,0,0) rotate(-3deg)}60%{-webkit-transform:translate3d(2%,0,0) rotate(2deg);transform:translate3d(2%,0,0) rotate(2deg)}75%{-webkit-transform:translate3d(-1%,0,0) rotate(-1deg);transform:translate3d(-1%,0,0) rotate(-1deg)}to{-webkit-transform:translateZ(0);transform:translateZ(0)}}@-webkit-keyframes bounceIn{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{-webkit-transform:scale3d(.9,.9,.9);transform:scale3d(.9,.9,.9)}20%{-webkit-transform:scale3d(1.03,1.03,1.03);transform:scale3d(1.03,1.03,1.03)}60%{-webkit-transform:scaleX(1);transform:scaleX(1)}}@keyframes bounceIn{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{-webkit-transform:scale3d(.9,.9,.9);transform:scale3d(.9,.9,.9)}20%{-webkit-transform:scale3d(1.03,1.03,1.03);transform:scale3d(1.03,1.03,1.03)}60%{-webkit-transform:scaleX(1);transform:scaleX(1)}}@-webkit-keyframes selectionBounce{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}50%{-webkit-transform:scale3d(1.01,1.01,1.01);transform:scale3d(1.01,1.01,1.01)}70%{-webkit-transform:scaleX(1);transform:scaleX(1)}}@keyframes selectionBounce{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}50%{-webkit-transform:scale3d(1.01,1.01,1.01);transform:scale3d(1.01,1.01,1.01)}70%{-webkit-transform:scaleX(1);transform:scaleX(1)}}@-webkit-keyframes buttonClicked{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{-webkit-transform:scale3d(.95,.95,.95);transform:scale3d(.95,.95,.95)}60%{-webkit-transform:scale3d(1.02,1.02,1.02);transform:scale3d(1.02,1.02,1.02)}80%{-webkit-transform:scaleX(1);transform:scaleX(1)}}@keyframes buttonClicked{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{-webkit-transform:scale3d(.95,.95,.95);transform:scale3d(.95,.95,.95)}60%{-webkit-transform:scale3d(1.02,1.02,1.02);transform:scale3d(1.02,1.02,1.02)}80%{-webkit-transform:scaleX(1);transform:scaleX(1)}}@-webkit-keyframes panelShowing{0%{opacity:0;-webkit-transform:translateY(-8px) scale(.9);transform:translateY(-8px) scale(.9)}70%{opacity:1;-webkit-transform:translateY(2px);transform:translateY(2px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes panelShowing{0%{opacity:0;-webkit-transform:translateY(-8px) scale(.9);transform:translateY(-8px) scale(.9)}70%{opacity:1;-webkit-transform:translateY(2px);transform:translateY(2px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@-webkit-keyframes panelShowingMobile{0%{opacity:0;-webkit-transform:translateY(14px) scale(.98);transform:translateY(14px) scale(.98)}70%{opacity:1;-webkit-transform:translateY(-4px);transform:translateY(-4px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes panelShowingMobile{0%{opacity:0;-webkit-transform:translateY(14px) scale(.98);transform:translateY(14px) scale(.98)}70%{opacity:1;-webkit-transform:translateY(-4px);transform:translateY(-4px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}.cdx-block{padding:.4em 0}.cdx-block::-webkit-input-placeholder{line-height:normal!important}.cdx-input{border:1px solid rgba(201,201,204,.48);-webkit-box-shadow:inset 0 1px 2px 0 rgba(35,44,72,.06);box-shadow:inset 0 1px 2px 0 rgba(35,44,72,.06);border-radius:3px;padding:10px 12px;outline:none;width:100%;-webkit-box-sizing:border-box;box-sizing:border-box}.cdx-input[data-placeholder]:before{position:static!important;display:inline-block;width:0;white-space:nowrap;pointer-events:none}.cdx-settings-button{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;width:34px;height:34px;line-height:34px;padding:0!important;text-align:center;border-radius:3px;cursor:pointer;border:0;outline:none;background-color:transparent;vertical-align:bottom;color:#000;margin:0}.cdx-settings-button:hover{background-color:#eff2f5}.cdx-settings-button--focused{-webkit-box-shadow:inset 0 0 0 1px rgba(7,161,227,.08);box-shadow:inset 0 0 0 1px rgba(7,161,227,.08);background:rgba(34,186,255,.08)!important}.cdx-settings-button--focused-animated{-webkit-animation-name:buttonClicked;animation-name:buttonClicked;-webkit-animation-duration:.25s;animation-duration:.25s}.cdx-settings-button:not(:nth-child(3n+3)){margin-right:3px}.cdx-settings-button:nth-child(n+4){margin-top:3px}.cdx-settings-button--active{color:#388ae5}.cdx-loader{position:relative;border:1px solid rgba(201,201,204,.48)}.cdx-loader:before{content:"";position:absolute;left:50%;top:50%;width:18px;height:18px;margin:-11px 0 0 -11px;border:2px solid rgba(201,201,204,.48);border-left-color:#388ae5;border-radius:50%;-webkit-animation:cdxRotation 1.2s linear infinite;animation:cdxRotation 1.2s linear infinite}@-webkit-keyframes cdxRotation{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@keyframes cdxRotation{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}.cdx-button{padding:13px;border-radius:3px;border:1px solid rgba(201,201,204,.48);font-size:14.9px;background:#fff;-webkit-box-shadow:0 2px 2px 0 rgba(18,30,57,.04);box-shadow:0 2px 2px 0 rgba(18,30,57,.04);color:#707684;text-align:center;cursor:pointer}.cdx-button:hover{background:#fbfcfe;-webkit-box-shadow:0 1px 3px 0 rgba(18,30,57,.08);box-shadow:0 1px 3px 0 rgba(18,30,57,.08)}.cdx-button svg{height:20px;margin-right:.2em;margin-top:-2px}.ce-stub{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;width:100%;padding:3.5em 0;margin:17px 0;border-radius:3px;background:#fcf7f7;color:#b46262}.ce-stub__info{margin-left:20px}.ce-stub__title{margin-bottom:3px;font-weight:600;font-size:18px;text-transform:capitalize}.ce-stub__subtitle{font-size:16px}.codex-editor.codex-editor--rtl{direction:rtl}.codex-editor.codex-editor--rtl .cdx-list{padding-left:0;padding-right:40px}.codex-editor.codex-editor--rtl .ce-toolbar__plus{right:-26px;left:auto}.codex-editor.codex-editor--rtl .ce-toolbar__actions{right:auto;left:-26px}@media (max-width:650px){.codex-editor.codex-editor--rtl .ce-toolbar__actions{margin-left:0;margin-right:auto;padding-right:0;padding-left:10px}}.codex-editor.codex-editor--rtl .ce-settings{left:5px;right:auto}.codex-editor.codex-editor--rtl .ce-settings:before{right:auto;left:25px}.codex-editor.codex-editor--rtl .ce-settings__button:not(:nth-child(3n+3)){margin-left:3px;margin-right:0}.codex-editor.codex-editor--rtl .ce-conversion-tool__icon{margin-right:0;margin-left:10px}.codex-editor.codex-editor--rtl .ce-inline-toolbar__dropdown{border-right:0 solid transparent;border-left:1px solid rgba(201,201,204,.48);margin:0 -6px 0 6px}.codex-editor.codex-editor--rtl .ce-inline-toolbar__dropdown .icon--toggler-down{margin-left:0;margin-right:4px}@media (min-width:651px){.codex-editor--narrow.codex-editor--rtl .ce-toolbar__plus{left:0;right:5px}}@media (min-width:651px){.codex-editor--narrow.codex-editor--rtl .ce-toolbar__actions{left:-5px}}.ce-popover{opacity:0;will-change:opacity,transform;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:6px;min-width:200px;overflow:hidden;-webkit-box-sizing:border-box;box-sizing:border-box;-ms-flex-negative:0;flex-shrink:0;max-height:0;pointer-events:none;position:absolute;background-color:#fff;border:1px solid #e8e8eb;-webkit-box-shadow:0 3px 15px -3px rgba(13,20,33,.13);box-shadow:0 3px 15px -3px rgba(13,20,33,.13);border-radius:6px;z-index:2}@media (max-width:650px){.ce-popover{-webkit-box-shadow:0 8px 6px -6px rgba(33,48,73,.19);box-shadow:0 8px 6px -6px rgba(33,48,73,.19);border-bottom-color:#c7c7c7}}.ce-popover{z-index:4;-ms-flex-wrap:nowrap;flex-wrap:nowrap}.ce-popover--left-oriented:before{left:15px;margin-left:0}.ce-popover--right-oriented:before{left:auto;right:15px;margin-left:0}.ce-popover--opened{opacity:1;max-height:270px;pointer-events:auto;-webkit-animation:panelShowing .1s ease;animation:panelShowing .1s ease}@media (max-width:650px){.ce-popover--opened{-webkit-animation:panelShowingMobile .25s ease;animation:panelShowingMobile .25s ease}}.ce-popover::-webkit-scrollbar{width:7px}.ce-popover::-webkit-scrollbar-thumb{-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-box-shadow:inset 0 0 2px 2px #eff2f5;box-shadow:inset 0 0 2px 2px #eff2f5;border-color:transparent;border-style:solid;border-width:4px 3px 4px 0}@media (max-width:650px){.ce-popover{position:fixed;max-width:none;min-width:auto;left:5px;right:5px;bottom:calc(5px + env(safe-area-inset-bottom));top:auto;border-radius:10px}}.ce-popover__items{overflow-y:auto;-ms-scroll-chaining:none;overscroll-behavior:contain}@media (min-width:651px){.ce-popover__items{margin-top:5px}}.ce-popover__item{display:grid;grid-template-columns:auto auto 1fr;grid-template-rows:auto;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start;white-space:nowrap;padding:3px;font-size:14px;line-height:20px;font-weight:500;cursor:pointer;-webkit-box-align:center;-ms-flex-align:center;align-items:center;border-radius:6px}.ce-popover__item:not(:last-of-type){margin-bottom:1px}@media (hover:hover){.ce-popover__item:hover{background-color:#eff2f5}}@media (max-width:650px){.ce-popover__item{font-size:16px;padding:4px}}.ce-popover__item--focused{-webkit-box-shadow:inset 0 0 0 1px rgba(7,161,227,.08);box-shadow:inset 0 0 0 1px rgba(7,161,227,.08);background:rgba(34,186,255,.08)!important}.ce-popover__item--hidden{display:none}.ce-popover__item-icon{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;width:26px;height:26px;border:1px solid rgba(201,201,204,.48);border-radius:5px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;background:#fff;-webkit-box-sizing:border-box;box-sizing:border-box;-ms-flex-negative:0;flex-shrink:0;margin-right:10px}@media (max-width:650px){.ce-popover__item-icon{width:36px;height:36px;border-radius:8px}}.ce-popover__item-icon svg{width:12px;height:12px}.ce-popover__item-label:after{content:"";width:25px;display:inline-block}.ce-popover__item-secondary-label{color:#707684;font-size:12px;margin-left:auto;white-space:nowrap;letter-spacing:-.1em;padding-right:5px;margin-bottom:-2px;opacity:.6}@media (max-width:650px){.ce-popover__item-secondary-label{display:none}}.ce-popover__no-found{display:grid;grid-template-columns:auto auto 1fr;grid-template-rows:auto;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start;white-space:nowrap;padding:3px;font-size:14px;line-height:20px;font-weight:500;cursor:pointer;-webkit-box-align:center;-ms-flex-align:center;align-items:center;border-radius:6px}.ce-popover__no-found:not(:last-of-type){margin-bottom:1px}@media (hover:hover){.ce-popover__no-found:hover{background-color:#eff2f5}}@media (max-width:650px){.ce-popover__no-found{font-size:16px;padding:4px}}.ce-popover__no-found{color:#707684;display:none;cursor:default}.ce-popover__no-found--shown{display:block}.ce-popover__no-found:hover{background-color:transparent}@media (max-width:650px){.ce-popover__overlay{position:fixed;top:0;bottom:0;left:0;right:0;background:#1d202b;opacity:.5;z-index:3;-webkit-transition:opacity .12s ease-in;transition:opacity .12s ease-in;will-change:opacity;visibility:visible}.ce-popover .cdx-search-field{display:none}}.ce-popover__overlay--hidden{z-index:0;opacity:0;visibility:hidden}.cdx-search-field{--icon-margin-right:10px;background:rgba(232,232,235,.49);border:1px solid rgba(226,226,229,.2);border-radius:6px;padding:2px;display:grid;grid-template-columns:auto auto 1fr;grid-template-rows:auto}.cdx-search-field__icon{width:26px;height:26px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;margin-right:var(--icon-margin-right)}.cdx-search-field__icon .icon{width:14px;height:14px;color:#707684;-ms-flex-negative:0;flex-shrink:0}.cdx-search-field__input{font-size:14px;outline:none;font-weight:500;font-family:inherit;border:0;background:transparent;margin:0;padding:0;line-height:22px;min-width:calc(100% - 26px - var(--icon-margin-right))}.cdx-search-field__input::-webkit-input-placeholder{color:#707684;font-weight:500}.cdx-search-field__input::-moz-placeholder{color:#707684;font-weight:500}.cdx-search-field__input:-ms-input-placeholder{color:#707684;font-weight:500}.cdx-search-field__input::-ms-input-placeholder{color:#707684;font-weight:500}.cdx-search-field__input::placeholder{color:#707684;font-weight:500}';
        },
        function(t, e1, n) {
            "use strict";
            n.r(e1), n.d(e1, "nanoid", function() {
                return s;
            }), n.d(e1, "customAlphabet", function() {
                return a;
            }), n.d(e1, "customRandom", function() {
                return i;
            }), n.d(e1, "urlAlphabet", function() {
                return o;
            }), n.d(e1, "random", function() {
                return r;
            });
            let o = "useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict";
            let r = (t)=>crypto.getRandomValues(new Uint8Array(t)), i = (t, e1, n)=>{
                let o = (2 << Math.log(t.length - 1) / Math.LN2) - 1, r = -~(1.6 * o * e1 / t.length);
                return ()=>{
                    let i = "";
                    for(;;){
                        let a = n(r), s = r;
                        for(; s--;)if (i += t[a[s] & o] || "", i.length === e1) return i;
                    }
                };
            }, a = (t, e1)=>i(t, e1, r), s = (t = 21)=>{
                let e1 = "", n = crypto.getRandomValues(new Uint8Array(t));
                for(; t--;){
                    let o = 63 & n[t];
                    e1 += o < 36 ? o.toString(36) : o < 62 ? (o - 26).toString(36).toUpperCase() : o < 63 ? "_" : "-";
                }
                return e1;
            };
        }
    ]);
});

},{}],"aTv4T":[function(require,module,exports) {
!function(e, t) {
    module.exports = t();
}(window, function() {
    return function(e) {
        var t = {};
        function n(r) {
            if (t[r]) return t[r].exports;
            var i = t[r] = {
                i: r,
                l: !1,
                exports: {}
            };
            return e[r].call(i.exports, i, i.exports, n), i.l = !0, i.exports;
        }
        return n.m = e, n.c = t, n.d = function(e, t, r) {
            n.o(e, t) || Object.defineProperty(e, t, {
                enumerable: !0,
                get: r
            });
        }, n.r = function(e) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                value: "Module"
            }), Object.defineProperty(e, "__esModule", {
                value: !0
            });
        }, n.t = function(e, t) {
            if (1 & t && (e = n(e)), 8 & t) return e;
            if (4 & t && "object" == typeof e && e && e.__esModule) return e;
            var r = Object.create(null);
            if (n.r(r), Object.defineProperty(r, "default", {
                enumerable: !0,
                value: e
            }), 2 & t && "string" != typeof e) for(var i in e)n.d(r, i, (function(t) {
                return e[t];
            }).bind(null, i));
            return r;
        }, n.n = function(e) {
            var t = e && e.__esModule ? function() {
                return e.default;
            } : function() {
                return e;
            };
            return n.d(t, "a", t), t;
        }, n.o = function(e, t) {
            return Object.prototype.hasOwnProperty.call(e, t);
        }, n.p = "/", n(n.s = 0);
    }([
        function(e, t, n) {
            function r(e) {
                return (r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                    return typeof e;
                } : function(e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                })(e);
            }
            function i(e, t) {
                for(var n = 0; n < t.length; n++){
                    var r = t[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);
                }
            }
            n(1).toString();
            /**
 * Header block for the Editor.js.
 *
 * @author CodeX (team@ifmo.su)
 * @copyright CodeX 2018
 * @license MIT
 * @version 2.0.0
 */ var a = function() {
                function e(t) {
                    var n = t.data, r = t.config, i = t.api, a = t.readOnly;
                    !function(e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
                    }(this, e), this.api = i, this.readOnly = a, this._CSS = {
                        block: this.api.styles.block,
                        settingsButton: this.api.styles.settingsButton,
                        settingsButtonActive: this.api.styles.settingsButtonActive,
                        wrapper: "ce-header"
                    }, this._settings = r, this._data = this.normalizeData(n), this.settingsButtons = [], this._element = this.getTag();
                }
                var t, a, o;
                return t = e, o = [
                    {
                        key: "conversionConfig",
                        get: function() {
                            return {
                                export: "text",
                                import: "text"
                            };
                        }
                    },
                    {
                        key: "sanitize",
                        get: function() {
                            return {
                                level: !1,
                                text: {}
                            };
                        }
                    },
                    {
                        key: "isReadOnlySupported",
                        get: function() {
                            return !0;
                        }
                    },
                    {
                        key: "pasteConfig",
                        get: function() {
                            return {
                                tags: [
                                    "H1",
                                    "H2",
                                    "H3",
                                    "H4",
                                    "H5",
                                    "H6"
                                ]
                            };
                        }
                    },
                    {
                        key: "toolbox",
                        get: function() {
                            return {
                                icon: n(6).default,
                                title: "Heading"
                            };
                        }
                    }
                ], a = [
                    {
                        key: "normalizeData",
                        value: function(e) {
                            var t = {};
                            return "object" !== r(e) && (e = {}), t.text = e.text || "", t.level = parseInt(e.level) || this.defaultLevel.number, t;
                        }
                    },
                    {
                        key: "render",
                        value: function() {
                            return this._element;
                        }
                    },
                    {
                        key: "renderSettings",
                        value: function() {
                            var e = this, t = document.createElement("DIV");
                            return this.levels.length <= 1 || this.levels.forEach(function(n) {
                                var r = document.createElement("SPAN");
                                r.classList.add(e._CSS.settingsButton), e.currentLevel.number === n.number && r.classList.add(e._CSS.settingsButtonActive), r.innerHTML = n.svg, r.dataset.level = n.number, r.addEventListener("click", function() {
                                    e.setLevel(n.number);
                                }), t.appendChild(r), e.settingsButtons.push(r);
                            }), t;
                        }
                    },
                    {
                        key: "setLevel",
                        value: function(e) {
                            var t = this;
                            this.data = {
                                level: e,
                                text: this.data.text
                            }, this.settingsButtons.forEach(function(n) {
                                n.classList.toggle(t._CSS.settingsButtonActive, parseInt(n.dataset.level) === e);
                            });
                        }
                    },
                    {
                        key: "merge",
                        value: function(e) {
                            var t = {
                                text: this.data.text + e.text,
                                level: this.data.level
                            };
                            this.data = t;
                        }
                    },
                    {
                        key: "validate",
                        value: function(e) {
                            return "" !== e.text.trim();
                        }
                    },
                    {
                        key: "save",
                        value: function(e) {
                            return {
                                text: e.innerHTML,
                                level: this.currentLevel.number
                            };
                        }
                    },
                    {
                        key: "getTag",
                        value: function() {
                            var e = document.createElement(this.currentLevel.tag);
                            return e.innerHTML = this._data.text || "", e.classList.add(this._CSS.wrapper), e.contentEditable = this.readOnly ? "false" : "true", e.dataset.placeholder = this.api.i18n.t(this._settings.placeholder || ""), e;
                        }
                    },
                    {
                        key: "onPaste",
                        value: function(e) {
                            var t = e.detail.data, n = this.defaultLevel.number;
                            switch(t.tagName){
                                case "H1":
                                    n = 1;
                                    break;
                                case "H2":
                                    n = 2;
                                    break;
                                case "H3":
                                    n = 3;
                                    break;
                                case "H4":
                                    n = 4;
                                    break;
                                case "H5":
                                    n = 5;
                                    break;
                                case "H6":
                                    n = 6;
                            }
                            this._settings.levels && (n = this._settings.levels.reduce(function(e, t) {
                                return Math.abs(t - n) < Math.abs(e - n) ? t : e;
                            })), this.data = {
                                level: n,
                                text: t.innerHTML
                            };
                        }
                    },
                    {
                        key: "data",
                        get: function() {
                            return this._data.text = this._element.innerHTML, this._data.level = this.currentLevel.number, this._data;
                        },
                        set: function(e) {
                            if (this._data = this.normalizeData(e), void 0 !== e.level && this._element.parentNode) {
                                var t = this.getTag();
                                t.innerHTML = this._element.innerHTML, this._element.parentNode.replaceChild(t, this._element), this._element = t;
                            }
                            void 0 !== e.text && (this._element.innerHTML = this._data.text || "");
                        }
                    },
                    {
                        key: "currentLevel",
                        get: function() {
                            var e = this, t = this.levels.find(function(t) {
                                return t.number === e._data.level;
                            });
                            return t || (t = this.defaultLevel), t;
                        }
                    },
                    {
                        key: "defaultLevel",
                        get: function() {
                            var e = this;
                            if (this._settings.defaultLevel) {
                                var t = this.levels.find(function(t) {
                                    return t.number === e._settings.defaultLevel;
                                });
                                if (t) return t;
                                console.warn("(ง'̀-'́)ง Heading Tool: the default level specified was not found in available levels");
                            }
                            return this.levels[1];
                        }
                    },
                    {
                        key: "levels",
                        get: function() {
                            var e = this, t = [
                                {
                                    number: 1,
                                    tag: "H1",
                                    svg: '<svg width="16" height="14" xmlns="http://www.w3.org/2000/svg"><path d="M2.14 1.494V4.98h4.62V1.494c0-.498.098-.871.293-1.12A.927.927 0 0 1 7.82 0c.322 0 .583.123.782.37.2.246.3.62.3 1.124v9.588c0 .503-.101.88-.303 1.128a.957.957 0 0 1-.779.374.921.921 0 0 1-.77-.378c-.193-.251-.29-.626-.29-1.124V6.989H2.14v4.093c0 .503-.1.88-.302 1.128a.957.957 0 0 1-.778.374.921.921 0 0 1-.772-.378C.096 11.955 0 11.58 0 11.082V1.494C0 .996.095.623.285.374A.922.922 0 0 1 1.06 0c.321 0 .582.123.782.37.199.246.299.62.299 1.124zm11.653 9.985V5.27c-1.279.887-2.14 1.33-2.583 1.33a.802.802 0 0 1-.563-.228.703.703 0 0 1-.245-.529c0-.232.08-.402.241-.511.161-.11.446-.25.854-.424.61-.259 1.096-.532 1.462-.818a5.84 5.84 0 0 0 .97-.962c.282-.355.466-.573.552-.655.085-.082.246-.123.483-.123.267 0 .481.093.642.28.161.186.242.443.242.77v7.813c0 .914-.345 1.371-1.035 1.371-.307 0-.554-.093-.74-.28-.187-.186-.28-.461-.28-.825z"/></svg>'
                                },
                                {
                                    number: 2,
                                    tag: "H2",
                                    svg: '<svg width="18" height="14" xmlns="http://www.w3.org/2000/svg"><path d="M2.152 1.494V4.98h4.646V1.494c0-.498.097-.871.293-1.12A.934.934 0 0 1 7.863 0c.324 0 .586.123.786.37.2.246.301.62.301 1.124v9.588c0 .503-.101.88-.304 1.128a.964.964 0 0 1-.783.374.928.928 0 0 1-.775-.378c-.194-.251-.29-.626-.29-1.124V6.989H2.152v4.093c0 .503-.101.88-.304 1.128a.964.964 0 0 1-.783.374.928.928 0 0 1-.775-.378C.097 11.955 0 11.58 0 11.082V1.494C0 .996.095.623.286.374A.929.929 0 0 1 1.066 0c.323 0 .585.123.786.37.2.246.3.62.3 1.124zm10.99 9.288h3.527c.351 0 .62.072.804.216.185.144.277.34.277.588 0 .22-.073.408-.22.56-.146.154-.368.23-.665.23h-4.972c-.338 0-.601-.093-.79-.28a.896.896 0 0 1-.284-.659c0-.162.06-.377.182-.645s.255-.478.399-.631a38.617 38.617 0 0 1 1.621-1.598c.482-.444.827-.735 1.034-.875.369-.261.676-.523.922-.787.245-.263.432-.534.56-.81.129-.278.193-.549.193-.815 0-.288-.069-.546-.206-.773a1.428 1.428 0 0 0-.56-.53 1.618 1.618 0 0 0-.774-.19c-.59 0-1.054.26-1.392.777-.045.068-.12.252-.226.554-.106.302-.225.534-.358.696-.133.162-.328.243-.585.243a.76.76 0 0 1-.56-.223c-.149-.148-.223-.351-.223-.608 0-.31.07-.635.21-.972.139-.338.347-.645.624-.92a3.093 3.093 0 0 1 1.054-.665c.426-.169.924-.253 1.496-.253.69 0 1.277.108 1.764.324.315.144.592.343.83.595.24.252.425.544.558.875.133.33.2.674.2 1.03 0 .558-.14 1.066-.416 1.523-.277.457-.56.815-.848 1.074-.288.26-.771.666-1.45 1.22-.677.554-1.142.984-1.394 1.29a3.836 3.836 0 0 0-.331.44z"/></svg>'
                                },
                                {
                                    number: 3,
                                    tag: "H3",
                                    svg: '<svg width="18" height="14" xmlns="http://www.w3.org/2000/svg"><path d="M2.152 1.494V4.98h4.646V1.494c0-.498.097-.871.293-1.12A.934.934 0 0 1 7.863 0c.324 0 .586.123.786.37.2.246.301.62.301 1.124v9.588c0 .503-.101.88-.304 1.128a.964.964 0 0 1-.783.374.928.928 0 0 1-.775-.378c-.194-.251-.29-.626-.29-1.124V6.989H2.152v4.093c0 .503-.101.88-.304 1.128a.964.964 0 0 1-.783.374.928.928 0 0 1-.775-.378C.097 11.955 0 11.58 0 11.082V1.494C0 .996.095.623.286.374A.929.929 0 0 1 1.066 0c.323 0 .585.123.786.37.2.246.3.62.3 1.124zm11.61 4.919c.418 0 .778-.123 1.08-.368.301-.245.452-.597.452-1.055 0-.35-.12-.65-.36-.902-.241-.252-.566-.378-.974-.378-.277 0-.505.038-.684.116a1.1 1.1 0 0 0-.426.306 2.31 2.31 0 0 0-.296.49c-.093.2-.178.388-.255.565a.479.479 0 0 1-.245.225.965.965 0 0 1-.409.081.706.706 0 0 1-.5-.22c-.152-.148-.228-.345-.228-.59 0-.236.071-.484.214-.745a2.72 2.72 0 0 1 .627-.746 3.149 3.149 0 0 1 1.024-.568 4.122 4.122 0 0 1 1.368-.214c.44 0 .842.06 1.205.18.364.12.679.294.947.52.267.228.47.49.606.79.136.3.204.622.204.967 0 .454-.099.843-.296 1.168-.198.324-.48.64-.848.95.354.19.653.408.895.653.243.245.426.516.548.813.123.298.184.619.184.964 0 .413-.083.812-.248 1.198-.166.386-.41.73-.732 1.031a3.49 3.49 0 0 1-1.147.708c-.443.17-.932.256-1.467.256a3.512 3.512 0 0 1-1.464-.293 3.332 3.332 0 0 1-1.699-1.64c-.142-.314-.214-.573-.214-.777 0-.263.085-.475.255-.636a.89.89 0 0 1 .637-.242c.127 0 .25.037.367.112a.53.53 0 0 1 .232.27c.236.63.489 1.099.759 1.405.27.306.65.46 1.14.46a1.714 1.714 0 0 0 1.46-.824c.17-.273.256-.588.256-.947 0-.53-.145-.947-.436-1.249-.29-.302-.694-.453-1.212-.453-.09 0-.231.01-.422.028-.19.018-.313.027-.367.027-.25 0-.443-.062-.579-.187-.136-.125-.204-.299-.204-.521 0-.218.081-.394.245-.528.163-.134.406-.2.728-.2h.28z"/></svg>'
                                },
                                {
                                    number: 4,
                                    tag: "H4",
                                    svg: '<svg width="20" height="14" xmlns="http://www.w3.org/2000/svg"><path d="M2.152 1.494V4.98h4.646V1.494c0-.498.097-.871.293-1.12A.934.934 0 0 1 7.863 0c.324 0 .586.123.786.37.2.246.301.62.301 1.124v9.588c0 .503-.101.88-.304 1.128a.964.964 0 0 1-.783.374.928.928 0 0 1-.775-.378c-.194-.251-.29-.626-.29-1.124V6.989H2.152v4.093c0 .503-.101.88-.304 1.128a.964.964 0 0 1-.783.374.928.928 0 0 1-.775-.378C.097 11.955 0 11.58 0 11.082V1.494C0 .996.095.623.286.374A.929.929 0 0 1 1.066 0c.323 0 .585.123.786.37.2.246.3.62.3 1.124zm13.003 10.09v-1.252h-3.38c-.427 0-.746-.097-.96-.29-.213-.193-.32-.456-.32-.788 0-.085.016-.171.048-.259.031-.088.078-.18.141-.276.063-.097.128-.19.195-.28.068-.09.15-.2.25-.33l3.568-4.774a5.44 5.44 0 0 1 .576-.683.763.763 0 0 1 .542-.212c.682 0 1.023.39 1.023 1.171v5.212h.29c.346 0 .623.047.832.142.208.094.313.3.313.62 0 .26-.086.45-.256.568-.17.12-.427.179-.768.179h-.41v1.252c0 .346-.077.603-.23.771-.152.168-.356.253-.612.253a.78.78 0 0 1-.61-.26c-.154-.173-.232-.427-.232-.764zm-2.895-2.76h2.895V4.91L12.26 8.823z"/></svg>'
                                },
                                {
                                    number: 5,
                                    tag: "H5",
                                    svg: '<svg width="18" height="14" xmlns="http://www.w3.org/2000/svg"><path d="M2.152 1.494V4.98h4.646V1.494c0-.498.097-.871.293-1.12A.934.934 0 0 1 7.863 0c.324 0 .586.123.786.37.2.246.301.62.301 1.124v9.588c0 .503-.101.88-.304 1.128a.964.964 0 0 1-.783.374.928.928 0 0 1-.775-.378c-.194-.251-.29-.626-.29-1.124V6.989H2.152v4.093c0 .503-.101.88-.304 1.128a.964.964 0 0 1-.783.374.928.928 0 0 1-.775-.378C.097 11.955 0 11.58 0 11.082V1.494C0 .996.095.623.286.374A.929.929 0 0 1 1.066 0c.323 0 .585.123.786.37.2.246.3.62.3 1.124zm14.16 2.645h-3.234l-.388 2.205c.644-.344 1.239-.517 1.783-.517.436 0 .843.082 1.222.245.38.164.712.39.998.677.286.289.51.63.674 1.025.163.395.245.82.245 1.273 0 .658-.148 1.257-.443 1.797-.295.54-.72.97-1.276 1.287-.556.318-1.197.477-1.923.477-.813 0-1.472-.15-1.978-.45-.506-.3-.865-.643-1.076-1.031-.21-.388-.316-.727-.316-1.018 0-.177.073-.345.22-.504a.725.725 0 0 1 .556-.238c.381 0 .665.22.85.66.182.404.427.719.736.943.309.225.654.337 1.035.337.35 0 .656-.09.919-.272.263-.182.466-.431.61-.749.142-.318.214-.678.214-1.082 0-.436-.078-.808-.232-1.117a1.607 1.607 0 0 0-.62-.69 1.674 1.674 0 0 0-.864-.229c-.39 0-.67.048-.837.143-.168.095-.41.262-.725.5-.316.239-.576.358-.78.358a.843.843 0 0 1-.592-.242c-.173-.16-.259-.344-.259-.548 0-.022.025-.177.075-.463l.572-3.26c.063-.39.181-.675.354-.852.172-.177.454-.265.844-.265h3.595c.708 0 1.062.27 1.062.81a.711.711 0 0 1-.26.572c-.172.145-.426.218-.762.218z"/></svg>'
                                },
                                {
                                    number: 6,
                                    tag: "H6",
                                    svg: '<svg width="18" height="14" xmlns="http://www.w3.org/2000/svg"><path d="M2.152 1.494V4.98h4.646V1.494c0-.498.097-.871.293-1.12A.934.934 0 0 1 7.863 0c.324 0 .586.123.786.37.2.246.301.62.301 1.124v9.588c0 .503-.101.88-.304 1.128a.964.964 0 0 1-.783.374.928.928 0 0 1-.775-.378c-.194-.251-.29-.626-.29-1.124V6.989H2.152v4.093c0 .503-.101.88-.304 1.128a.964.964 0 0 1-.783.374.928.928 0 0 1-.775-.378C.097 11.955 0 11.58 0 11.082V1.494C0 .996.095.623.286.374A.929.929 0 0 1 1.066 0c.323 0 .585.123.786.37.2.246.3.62.3 1.124zM12.53 7.058a3.093 3.093 0 0 1 1.004-.814 2.734 2.734 0 0 1 1.214-.264c.43 0 .827.08 1.19.24.365.161.684.39.957.686.274.296.485.645.635 1.048a3.6 3.6 0 0 1 .223 1.262c0 .637-.145 1.216-.437 1.736-.292.52-.699.926-1.221 1.218-.522.292-1.114.438-1.774.438-.76 0-1.416-.186-1.967-.557-.552-.37-.974-.919-1.265-1.645-.292-.726-.438-1.613-.438-2.662 0-.855.088-1.62.265-2.293.176-.674.43-1.233.76-1.676.33-.443.73-.778 1.2-1.004.47-.226 1.006-.339 1.608-.339.579 0 1.089.113 1.53.34.44.225.773.506.997.84.224.335.335.656.335.964 0 .185-.07.354-.21.505a.698.698 0 0 1-.536.227.874.874 0 0 1-.529-.18 1.039 1.039 0 0 1-.36-.498 1.42 1.42 0 0 0-.495-.655 1.3 1.3 0 0 0-.786-.247c-.24 0-.479.069-.716.207a1.863 1.863 0 0 0-.6.56c-.33.479-.525 1.333-.584 2.563zm1.832 4.213c.456 0 .834-.186 1.133-.56.298-.373.447-.862.447-1.468 0-.412-.07-.766-.21-1.062a1.584 1.584 0 0 0-.577-.678 1.47 1.47 0 0 0-.807-.234c-.28 0-.548.074-.804.224-.255.149-.461.365-.617.647a2.024 2.024 0 0 0-.234.994c0 .61.158 1.12.475 1.527.316.407.714.61 1.194.61z"/></svg>'
                                }
                            ];
                            return this._settings.levels ? t.filter(function(t) {
                                return e._settings.levels.includes(t.number);
                            }) : t;
                        }
                    }
                ], i(t.prototype, a), o && i(t, o), e;
            }();
            e.exports = a;
        },
        function(e, t, n) {
            var r = n(2);
            "string" == typeof r && (r = [
                [
                    e.i,
                    r,
                    ""
                ]
            ]);
            var i = {
                hmr: !0,
                transform: void 0,
                insertInto: void 0
            };
            n(4)(r, i);
            r.locals && (e.exports = r.locals);
        },
        function(e, t, n) {
            (e.exports = n(3)(!1)).push([
                e.i,
                "/**\n * Plugin styles\n */\n.ce-header {\n  padding: 0.6em 0 3px;\n  margin: 0;\n  line-height: 1.25em;\n  outline: none;\n}\n\n.ce-header p,\n.ce-header div{\n  padding: 0 !important;\n  margin: 0 !important;\n}\n\n/**\n * Styles for Plugin icon in Toolbar\n */\n.ce-header__icon {}\n\n.ce-header[contentEditable=true][data-placeholder]::before{\n  position: absolute;\n  content: attr(data-placeholder);\n  color: #707684;\n  font-weight: normal;\n  display: none;\n  cursor: text;\n}\n\n.ce-header[contentEditable=true][data-placeholder]:empty::before {\n  display: block;\n}\n\n.ce-header[contentEditable=true][data-placeholder]:empty:focus::before {\n  display: none;\n}\n",
                ""
            ]);
        },
        function(e, t) {
            e.exports = function(e) {
                var t = [];
                return t.toString = function() {
                    return this.map(function(t) {
                        var n = function(e, t) {
                            var n = e[1] || "", r = e[3];
                            if (!r) return n;
                            if (t && "function" == typeof btoa) {
                                var i = (o = r, "/*# sourceMappingURL=data:application/json;charset=utf-8;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(o)))) + " */"), a = r.sources.map(function(e) {
                                    return "/*# sourceURL=" + r.sourceRoot + e + " */";
                                });
                                return [
                                    n
                                ].concat(a).concat([
                                    i
                                ]).join("\n");
                            }
                            var o;
                            return [
                                n
                            ].join("\n");
                        }(t, e);
                        return t[2] ? "@media " + t[2] + "{" + n + "}" : n;
                    }).join("");
                }, t.i = function(e, n) {
                    "string" == typeof e && (e = [
                        [
                            null,
                            e,
                            ""
                        ]
                    ]);
                    for(var r = {}, i = 0; i < this.length; i++){
                        var a = this[i][0];
                        "number" == typeof a && (r[a] = !0);
                    }
                    for(i = 0; i < e.length; i++){
                        var o = e[i];
                        "number" == typeof o[0] && r[o[0]] || (n && !o[2] ? o[2] = n : n && (o[2] = "(" + o[2] + ") and (" + n + ")"), t.push(o));
                    }
                }, t;
            };
        },
        function(e, t, n) {
            var r, i, a = {}, o = (r = function() {
                return window && document && document.all && !window.atob;
            }, function() {
                return void 0 === i && (i = r.apply(this, arguments)), i;
            }), s = function(e) {
                return document.querySelector(e);
            }, c = function(e) {
                var t = {};
                return function(e) {
                    if ("function" == typeof e) return e();
                    if (void 0 === t[e]) {
                        var n = s.call(this, e);
                        if (window.HTMLIFrameElement && n instanceof window.HTMLIFrameElement) try {
                            n = n.contentDocument.head;
                        } catch (e1) {
                            n = null;
                        }
                        t[e] = n;
                    }
                    return t[e];
                };
            }(), l = null, u = 0, f = [], d = n(5);
            function h(e, t) {
                for(var n = 0; n < e.length; n++){
                    var r = e[n], i = a[r.id];
                    if (i) {
                        i.refs++;
                        for(var o = 0; o < i.parts.length; o++)i.parts[o](r.parts[o]);
                        for(; o < r.parts.length; o++)i.parts.push(y(r.parts[o], t));
                    } else {
                        var s = [];
                        for(o = 0; o < r.parts.length; o++)s.push(y(r.parts[o], t));
                        a[r.id] = {
                            id: r.id,
                            refs: 1,
                            parts: s
                        };
                    }
                }
            }
            function v(e, t) {
                for(var n = [], r = {}, i = 0; i < e.length; i++){
                    var a = e[i], o = t.base ? a[0] + t.base : a[0], s = {
                        css: a[1],
                        media: a[2],
                        sourceMap: a[3]
                    };
                    r[o] ? r[o].parts.push(s) : n.push(r[o] = {
                        id: o,
                        parts: [
                            s
                        ]
                    });
                }
                return n;
            }
            function p(e, t) {
                var n = c(e.insertInto);
                if (!n) throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
                var r = f[f.length - 1];
                if ("top" === e.insertAt) r ? r.nextSibling ? n.insertBefore(t, r.nextSibling) : n.appendChild(t) : n.insertBefore(t, n.firstChild), f.push(t);
                else if ("bottom" === e.insertAt) n.appendChild(t);
                else {
                    if ("object" != typeof e.insertAt || !e.insertAt.before) throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");
                    var i = c(e.insertInto + " " + e.insertAt.before);
                    n.insertBefore(t, i);
                }
            }
            function g(e) {
                if (null === e.parentNode) return !1;
                e.parentNode.removeChild(e);
                var t = f.indexOf(e);
                t >= 0 && f.splice(t, 1);
            }
            function m(e) {
                var t = document.createElement("style");
                return void 0 === e.attrs.type && (e.attrs.type = "text/css"), b(t, e.attrs), p(e, t), t;
            }
            function b(e, t) {
                Object.keys(t).forEach(function(n) {
                    e.setAttribute(n, t[n]);
                });
            }
            function y(e, t) {
                var n, r, i, a;
                if (t.transform && e.css) {
                    if (!(a = t.transform(e.css))) return function() {};
                    e.css = a;
                }
                if (t.singleton) {
                    var o = u++;
                    n = l || (l = m(t)), r = L.bind(null, n, o, !1), i = L.bind(null, n, o, !0);
                } else e.sourceMap && "function" == typeof URL && "function" == typeof URL.createObjectURL && "function" == typeof URL.revokeObjectURL && "function" == typeof Blob && "function" == typeof btoa ? (n = function(e) {
                    var t = document.createElement("link");
                    return void 0 === e.attrs.type && (e.attrs.type = "text/css"), e.attrs.rel = "stylesheet", b(t, e.attrs), p(e, t), t;
                }(t), r = _.bind(null, n, t), i = function() {
                    g(n), n.href && URL.revokeObjectURL(n.href);
                }) : (n = m(t), r = H.bind(null, n), i = function() {
                    g(n);
                });
                return r(e), function(t) {
                    if (t) {
                        if (t.css === e.css && t.media === e.media && t.sourceMap === e.sourceMap) return;
                        r(e = t);
                    } else i();
                };
            }
            e.exports = function(e, t) {
                if ("undefined" != typeof DEBUG && DEBUG && "object" != typeof document) throw new Error("The style-loader cannot be used in a non-browser environment");
                (t = t || {}).attrs = "object" == typeof t.attrs ? t.attrs : {}, t.singleton || "boolean" == typeof t.singleton || (t.singleton = o()), t.insertInto || (t.insertInto = "head"), t.insertAt || (t.insertAt = "bottom");
                var n = v(e, t);
                return h(n, t), function(e) {
                    for(var r = [], i = 0; i < n.length; i++){
                        var o = n[i];
                        (s = a[o.id]).refs--, r.push(s);
                    }
                    e && h(v(e, t), t);
                    for(i = 0; i < r.length; i++){
                        var s;
                        if (0 === (s = r[i]).refs) {
                            for(var c = 0; c < s.parts.length; c++)s.parts[c]();
                            delete a[s.id];
                        }
                    }
                };
            };
            var w, x = (w = [], function(e, t) {
                return w[e] = t, w.filter(Boolean).join("\n");
            });
            function L(e, t, n, r) {
                var i = n ? "" : r.css;
                if (e.styleSheet) e.styleSheet.cssText = x(t, i);
                else {
                    var a = document.createTextNode(i), o = e.childNodes;
                    o[t] && e.removeChild(o[t]), o.length ? e.insertBefore(a, o[t]) : e.appendChild(a);
                }
            }
            function H(e, t) {
                var n = t.css, r = t.media;
                if (r && e.setAttribute("media", r), e.styleSheet) e.styleSheet.cssText = n;
                else {
                    for(; e.firstChild;)e.removeChild(e.firstChild);
                    e.appendChild(document.createTextNode(n));
                }
            }
            function _(e, t, n) {
                var r = n.css, i = n.sourceMap, a = void 0 === t.convertToAbsoluteUrls && i;
                (t.convertToAbsoluteUrls || a) && (r = d(r)), i && (r += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(i)))) + " */");
                var o = new Blob([
                    r
                ], {
                    type: "text/css"
                }), s = e.href;
                e.href = URL.createObjectURL(o), s && URL.revokeObjectURL(s);
            }
        },
        function(e, t) {
            e.exports = function(e) {
                var t = "undefined" != typeof window && window.location;
                if (!t) throw new Error("fixUrls requires window.location");
                if (!e || "string" != typeof e) return e;
                var n = t.protocol + "//" + t.host, r = n + t.pathname.replace(/\/[^\/]*$/, "/");
                return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(e, t) {
                    var i, a = t.trim().replace(/^"(.*)"$/, function(e, t) {
                        return t;
                    }).replace(/^'(.*)'$/, function(e, t) {
                        return t;
                    });
                    return /^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(a) ? e : (i = 0 === a.indexOf("//") ? a : 0 === a.indexOf("/") ? n + a : r + a.replace(/^\.\//, ""), "url(" + JSON.stringify(i) + ")");
                });
            };
        },
        function(e, t, n) {
            "use strict";
            n.r(t), t.default = '<svg width="10" height="14" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 10 14">\n  <path d="M7.6 8.15H2.25v4.525a1.125 1.125 0 0 1-2.25 0V1.125a1.125 1.125 0 1 1 2.25 0V5.9H7.6V1.125a1.125 1.125 0 0 1 2.25 0v11.55a1.125 1.125 0 0 1-2.25 0V8.15z"/>\n</svg>\n';
        }
    ]);
});

},{}],"8qUqD":[function(require,module,exports) {
!function(e, t) {
    module.exports = t();
}(self, function() {
    return (()=>{
        "use strict";
        var e = {
            384: (e, t, n)=>{
                n.d(t, {
                    Z: ()=>s
                });
                var r = n(645), i = n.n(r)()(function(e) {
                    return e[1];
                });
                i.push([
                    e.id,
                    '.cdx-nested-list {\n  margin: 0;\n  padding: 0;\n  outline: none;\n  counter-reset: item;\n  list-style: none;\n}\n\n  .cdx-nested-list__item {\n    line-height: 1.6em;\n    display: flex;\n    margin: 2px 0;\n  }\n\n  .cdx-nested-list__item [contenteditable]{\n      outline: none;\n    }\n\n  .cdx-nested-list__item-body {\n      flex-grow: 2;\n    }\n\n  .cdx-nested-list__item-content,\n    .cdx-nested-list__item-children {\n      flex-basis: 100%;\n    }\n\n  .cdx-nested-list__item-content {\n      word-break: break-word;\n      white-space: pre-wrap;\n    }\n\n  .cdx-nested-list__item-children {}\n\n  .cdx-nested-list__item::before {\n      counter-increment: item;\n      margin-right: 5px;\n      white-space: nowrap;\n    }\n\n  .cdx-nested-list--ordered > .cdx-nested-list__item::before {\n    content: counters(item, ".") ". ";\n  }\n\n  .cdx-nested-list--unordered > .cdx-nested-list__item::before {\n    content: "•";\n  }\n\n  .cdx-nested-list__settings {\n    display: flex;\n  }\n\n  .cdx-nested-list__settings .cdx-settings-button {\n      width: 50%;\n    }\n',
                    ""
                ]);
                const s = i;
            },
            645: (e)=>{
                e.exports = function(e) {
                    var t = [];
                    return t.toString = function() {
                        return this.map(function(t) {
                            var n = e(t);
                            return t[2] ? "@media ".concat(t[2], " {").concat(n, "}") : n;
                        }).join("");
                    }, t.i = function(e, n, r) {
                        "string" == typeof e && (e = [
                            [
                                null,
                                e,
                                ""
                            ]
                        ]);
                        var i = {};
                        if (r) for(var s = 0; s < this.length; s++){
                            var o = this[s][0];
                            null != o && (i[o] = !0);
                        }
                        for(var a = 0; a < e.length; a++){
                            var d = [].concat(e[a]);
                            r && i[d[0]] || (n && (d[2] ? d[2] = "".concat(n, " and ").concat(d[2]) : d[2] = n), t.push(d));
                        }
                    }, t;
                };
            },
            379: (e, t, n)=>{
                var r, i = function() {
                    var e = {};
                    return function(t) {
                        if (void 0 === e[t]) {
                            var n = document.querySelector(t);
                            if (window.HTMLIFrameElement && n instanceof window.HTMLIFrameElement) try {
                                n = n.contentDocument.head;
                            } catch (e1) {
                                n = null;
                            }
                            e[t] = n;
                        }
                        return e[t];
                    };
                }(), s = [];
                function o(e) {
                    for(var t = -1, n = 0; n < s.length; n++)if (s[n].identifier === e) {
                        t = n;
                        break;
                    }
                    return t;
                }
                function a(e, t) {
                    for(var n = {}, r = [], i = 0; i < e.length; i++){
                        var a = e[i], d = t.base ? a[0] + t.base : a[0], c = n[d] || 0, l = "".concat(d, " ").concat(c);
                        n[d] = c + 1;
                        var h = o(l), u = {
                            css: a[1],
                            media: a[2],
                            sourceMap: a[3]
                        };
                        -1 !== h ? (s[h].references++, s[h].updater(u)) : s.push({
                            identifier: l,
                            updater: f(u, t),
                            references: 1
                        }), r.push(l);
                    }
                    return r;
                }
                function d(e) {
                    var t = document.createElement("style"), r = e.attributes || {};
                    if (void 0 === r.nonce) {
                        var s = n.nc;
                        s && (r.nonce = s);
                    }
                    if (Object.keys(r).forEach(function(e) {
                        t.setAttribute(e, r[e]);
                    }), "function" == typeof e.insert) e.insert(t);
                    else {
                        var o = i(e.insert || "head");
                        if (!o) throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
                        o.appendChild(t);
                    }
                    return t;
                }
                var c, l = (c = [], function(e, t) {
                    return c[e] = t, c.filter(Boolean).join("\n");
                });
                function h(e, t, n, r) {
                    var i = n ? "" : r.media ? "@media ".concat(r.media, " {").concat(r.css, "}") : r.css;
                    if (e.styleSheet) e.styleSheet.cssText = l(t, i);
                    else {
                        var s = document.createTextNode(i), o = e.childNodes;
                        o[t] && e.removeChild(o[t]), o.length ? e.insertBefore(s, o[t]) : e.appendChild(s);
                    }
                }
                function u(e, t, n) {
                    var r = n.css, i = n.media, s = n.sourceMap;
                    if (i ? e.setAttribute("media", i) : e.removeAttribute("media"), s && "undefined" != typeof btoa && (r += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s)))), " */")), e.styleSheet) e.styleSheet.cssText = r;
                    else {
                        for(; e.firstChild;)e.removeChild(e.firstChild);
                        e.appendChild(document.createTextNode(r));
                    }
                }
                var p = null, m = 0;
                function f(e, t) {
                    var n, r, i;
                    if (t.singleton) {
                        var s = m++;
                        n = p || (p = d(t)), r = h.bind(null, n, s, !1), i = h.bind(null, n, s, !0);
                    } else n = d(t), r = u.bind(null, n, t), i = function() {
                        !function(e) {
                            if (null === e.parentNode) return !1;
                            e.parentNode.removeChild(e);
                        }(n);
                    };
                    return r(e), function(t) {
                        if (t) {
                            if (t.css === e.css && t.media === e.media && t.sourceMap === e.sourceMap) return;
                            r(e = t);
                        } else i();
                    };
                }
                e.exports = function(e, t) {
                    (t = t || {}).singleton || "boolean" == typeof t.singleton || (t.singleton = (void 0 === r && (r = Boolean(window && document && document.all && !window.atob)), r));
                    var n = a(e = e || [], t);
                    return function(e) {
                        if (e = e || [], "[object Array]" === Object.prototype.toString.call(e)) {
                            for(var r = 0; r < n.length; r++){
                                var i = o(n[r]);
                                s[i].references--;
                            }
                            for(var d = a(e, t), c = 0; c < n.length; c++){
                                var l = o(n[c]);
                                0 === s[l].references && (s[l].updater(), s.splice(l, 1));
                            }
                            n = d;
                        }
                    };
                };
            }
        }, t = {};
        function n(r) {
            var i = t[r];
            if (void 0 !== i) return i.exports;
            var s = t[r] = {
                id: r,
                exports: {}
            };
            return e[r](s, s.exports, n), s.exports;
        }
        n.n = (e)=>{
            var t = e && e.__esModule ? ()=>e.default : ()=>e;
            return n.d(t, {
                a: t
            }), t;
        }, n.d = (e, t)=>{
            for(var r in t)n.o(t, r) && !n.o(e, r) && Object.defineProperty(e, r, {
                enumerable: !0,
                get: t[r]
            });
        }, n.o = (e, t)=>Object.prototype.hasOwnProperty.call(e, t);
        var r = {};
        return (()=>{
            function e(e, t = null, n = {}) {
                const r = document.createElement(e);
                Array.isArray(t) ? r.classList.add(...t) : t && r.classList.add(t);
                for(const e1 in n)r[e1] = n[e1];
                return r;
            }
            function t(t) {
                const n = e("div");
                return n.appendChild(t), n.innerHTML;
            }
            function i(e) {
                let t;
                return e.nodeType !== Node.ELEMENT_NODE ? t = e.textContent : (t = e.innerHTML, t = t.replaceAll("<br>", "")), 0 === t.trim().length;
            }
            n.d(r, {
                default: ()=>c
            });
            class s {
                save() {
                    const t = s.range, n = e("span");
                    n.hidden = !0, t.insertNode(n), this.savedFakeCaret = n;
                }
                restore() {
                    if (!this.savedFakeCaret) return;
                    const e = window.getSelection(), t = new Range;
                    t.setStartAfter(this.savedFakeCaret), t.setEndAfter(this.savedFakeCaret), e.removeAllRanges(), e.addRange(t), setTimeout(()=>{
                        this.savedFakeCaret.remove();
                    }, 150);
                }
                static get range() {
                    const e = window.getSelection();
                    return e && e.rangeCount ? e.getRangeAt(0) : null;
                }
                static extractFragmentFromCaretPositionTillTheEnd() {
                    const e = window.getSelection();
                    if (!e.rangeCount) return;
                    const t = e.getRangeAt(0);
                    let n = t.startContainer;
                    n.nodeType !== Node.ELEMENT_NODE && (n = n.parentNode);
                    const r = n.closest("[contenteditable]");
                    t.deleteContents();
                    const i = t.cloneRange();
                    return i.selectNodeContents(r), i.setStart(t.endContainer, t.endOffset), i.extractContents();
                }
                static focus(e, t = !0) {
                    const n = document.createRange(), r = window.getSelection();
                    n.selectNodeContents(e), n.collapse(t), r.removeAllRanges(), r.addRange(n);
                }
                static isAtStart() {
                    const e = window.getSelection();
                    if (e.focusOffset > 0) return !1;
                    const t = e.focusNode;
                    return s.getHigherLevelSiblings(t, "left").every((e)=>i(e));
                }
                static getHigherLevelSiblings(e, t = "left") {
                    let n = e;
                    const r = [];
                    for(; n.parentNode && "true" !== n.parentNode.contentEditable;)n = n.parentNode;
                    const i = "left" === t ? "previousSibling" : "nextSibling";
                    for(; n[i];)n = n[i], r.push(n);
                    return r;
                }
                constructor(){
                    this.savedFakeCaret = void 0;
                }
            }
            var o = n(379), a = n.n(o), d = n(384);
            a()(d.Z, {
                insert: "head",
                singleton: !1
            }), d.Z.locals;
            class c {
                static get isReadOnlySupported() {
                    return !0;
                }
                static get enableLineBreaks() {
                    return !0;
                }
                static get toolbox() {
                    return {
                        icon: '<svg width="17" height="13" viewBox="0 0 17 13" xmlns="http://www.w3.org/2000/svg"> <path d="M5.625 4.85h9.25a1.125 1.125 0 0 1 0 2.25h-9.25a1.125 1.125 0 0 1 0-2.25zm0-4.85h9.25a1.125 1.125 0 0 1 0 2.25h-9.25a1.125 1.125 0 0 1 0-2.25zm0 9.85h9.25a1.125 1.125 0 0 1 0 2.25h-9.25a1.125 1.125 0 0 1 0-2.25zm-4.5-5a1.125 1.125 0 1 1 0 2.25 1.125 1.125 0 0 1 0-2.25zm0-4.85a1.125 1.125 0 1 1 0 2.25 1.125 1.125 0 0 1 0-2.25zm0 9.85a1.125 1.125 0 1 1 0 2.25 1.125 1.125 0 0 1 0-2.25z"/></svg>',
                        title: "List"
                    };
                }
                render() {
                    return this.nodes.wrapper = this.makeListWrapper(this.data.style, [
                        this.CSS.baseBlock
                    ]), this.data.items.length ? this.appendItems(this.data.items, this.nodes.wrapper) : this.appendItems([
                        {
                            content: "",
                            items: []
                        }
                    ], this.nodes.wrapper), this.readOnly || this.nodes.wrapper.addEventListener("keydown", (e)=>{
                        switch(e.key){
                            case "Enter":
                                this.enterPressed(e);
                                break;
                            case "Backspace":
                                this.backspace(e);
                                break;
                            case "Tab":
                                e.shiftKey ? this.shiftTab(e) : this.addTab(e);
                        }
                    }, !1), this.nodes.wrapper;
                }
                renderSettings() {
                    const t = e("div", [
                        this.CSS.settingsWrapper
                    ], {});
                    return this.settings.forEach((n)=>{
                        const r = e("div", this.CSS.settingsButton, {
                            innerHTML: n.icon
                        });
                        r.addEventListener("click", ()=>{
                            this.listStyle = n.name;
                            const e = r.parentNode.querySelectorAll("." + this.CSS.settingsButton);
                            Array.from(e).forEach((e)=>e.classList.remove(this.CSS.settingsButtonActive)), r.classList.toggle(this.CSS.settingsButtonActive);
                        }), this.api.tooltip.onHover(r, n.title, {
                            placement: "top",
                            hidingDelay: 500
                        }), this.data.style === n.name && r.classList.add(this.CSS.settingsButtonActive), t.appendChild(r);
                    }), t;
                }
                appendItems(e, t) {
                    e.forEach((e)=>{
                        const n = this.createItem(e.content, e.items);
                        t.appendChild(n);
                    });
                }
                createItem(t, n = []) {
                    const r = e("li", this.CSS.item), i = e("div", this.CSS.itemBody), s = e("div", this.CSS.itemContent, {
                        innerHTML: t,
                        contentEditable: !this.readOnly
                    });
                    return i.appendChild(s), r.appendChild(i), n && n.length > 0 && this.addChildrenList(r, n), r;
                }
                save() {
                    const e = (t)=>Array.from(t.querySelectorAll(`:scope > .${this.CSS.item}`)).map((t)=>{
                            const n = t.querySelector(`.${this.CSS.itemChildren}`);
                            return {
                                content: this.getItemContent(t),
                                items: n ? e(n) : []
                            };
                        });
                    return {
                        style: this.data.style,
                        items: e(this.nodes.wrapper)
                    };
                }
                addChildrenList(e, t) {
                    const n = e.querySelector(`.${this.CSS.itemBody}`), r = this.makeListWrapper(void 0, [
                        this.CSS.itemChildren
                    ]);
                    this.appendItems(t, r), n.appendChild(r);
                }
                makeListWrapper(t = this.listStyle, n = []) {
                    const r = "ordered" === t ? "ol" : "ul", i = "ordered" === t ? this.CSS.wrapperOrdered : this.CSS.wrapperUnordered;
                    return n.push(i), e(r, [
                        this.CSS.wrapper,
                        ...n
                    ]);
                }
                get CSS() {
                    return {
                        baseBlock: this.api.styles.block,
                        wrapper: "cdx-nested-list",
                        wrapperOrdered: "cdx-nested-list--ordered",
                        wrapperUnordered: "cdx-nested-list--unordered",
                        item: "cdx-nested-list__item",
                        itemBody: "cdx-nested-list__item-body",
                        itemContent: "cdx-nested-list__item-content",
                        itemChildren: "cdx-nested-list__item-children",
                        settingsWrapper: "cdx-nested-list__settings",
                        settingsButton: this.api.styles.settingsButton,
                        settingsButtonActive: this.api.styles.settingsButtonActive
                    };
                }
                get listStyle() {
                    return this.data.style || this.defaultListStyle;
                }
                set listStyle(e) {
                    const t = Array.from(this.nodes.wrapper.querySelectorAll(`.${this.CSS.wrapper}`));
                    t.push(this.nodes.wrapper), t.forEach((t)=>{
                        t.classList.toggle(this.CSS.wrapperUnordered, "unordered" === e), t.classList.toggle(this.CSS.wrapperOrdered, "ordered" === e);
                    }), this.data.style = e;
                }
                get currentItem() {
                    let e = window.getSelection().anchorNode;
                    return e.nodeType !== Node.ELEMENT_NODE && (e = e.parentNode), e.closest(`.${this.CSS.item}`);
                }
                enterPressed(e) {
                    const n = this.currentItem;
                    e.stopPropagation(), e.preventDefault();
                    const r = 0 === this.getItemContent(n).trim().length, i = n.parentNode === this.nodes.wrapper, o = null === n.nextElementSibling;
                    if (i && o && r) return void this.getOutOfList();
                    if (o && r) return void this.unshiftItem();
                    const a = t(s.extractFragmentFromCaretPositionTillTheEnd()), d = n.querySelector(`.${this.CSS.itemChildren}`), c = this.createItem(a, void 0);
                    d && Array.from(d.querySelectorAll(`.${this.CSS.item}`)).length > 0 ? d.prepend(c) : n.after(c), this.focusItem(c);
                }
                unshiftItem() {
                    const e = this.currentItem, t = e.parentNode.closest(`.${this.CSS.item}`);
                    if (!t) return;
                    this.caret.save(), t.after(e), this.caret.restore();
                    const n = t.querySelector(`.${this.CSS.itemChildren}`);
                    0 === n.children.length && n.remove();
                }
                getItemContent(e) {
                    const t = e.querySelector(`.${this.CSS.itemContent}`);
                    return i(t) ? "" : t.innerHTML;
                }
                focusItem(e, t = !0) {
                    const n = e.querySelector(`.${this.CSS.itemContent}`);
                    s.focus(n, t);
                }
                getOutOfList() {
                    this.currentItem.remove(), this.api.blocks.insert(), this.api.caret.setToBlock(this.api.blocks.getCurrentBlockIndex());
                }
                backspace(e) {
                    if (!s.isAtStart()) return;
                    e.preventDefault();
                    const n = this.currentItem, r = n.previousSibling, i = n.parentNode.closest(`.${this.CSS.item}`);
                    if (!r && !i) return;
                    let o;
                    if (e.stopPropagation(), r) {
                        const e1 = r.querySelectorAll(`.${this.CSS.item}`);
                        o = Array.from(e1).pop() || r;
                    } else o = i;
                    const a = t(s.extractFragmentFromCaretPositionTillTheEnd()), d = o.querySelector(`.${this.CSS.itemContent}`);
                    s.focus(d, !1), this.caret.save(), d.insertAdjacentHTML("beforeend", a);
                    let c = n.querySelectorAll(`.${this.CSS.itemChildren} > .${this.CSS.item}`);
                    c = Array.from(c), c = c.filter((e)=>e.parentNode.closest(`.${this.CSS.item}`) === n), c.reverse().forEach((e)=>{
                        r ? o.after(e) : n.after(e);
                    }), n.remove(), this.caret.restore();
                }
                addTab(e) {
                    e.stopPropagation(), e.preventDefault();
                    const t = this.currentItem, n = t.previousSibling;
                    if (!n) return;
                    const r = n.querySelector(`.${this.CSS.itemChildren}`);
                    if (this.caret.save(), r) r.appendChild(t);
                    else {
                        const e1 = this.makeListWrapper(void 0, [
                            this.CSS.itemChildren
                        ]), r1 = n.querySelector(`.${this.CSS.itemBody}`);
                        e1.appendChild(t), r1.appendChild(e1);
                    }
                    this.caret.restore();
                }
                shiftTab(e) {
                    e.stopPropagation(), e.preventDefault(), this.unshiftItem();
                }
                static joinRecursive(e) {
                    return e.items.map((e)=>`${e.content} ${c.joinRecursive(e)}`).join("");
                }
                static get conversionConfig() {
                    return {
                        export: (e)=>c.joinRecursive(e),
                        import: (e)=>({
                                items: [
                                    {
                                        content: e,
                                        items: []
                                    }
                                ],
                                style: "unordered"
                            })
                    };
                }
                constructor({ data: e , config: t , api: n , readOnly: r  }){
                    this.nodes = {
                        wrapper: null
                    }, this.api = n, this.readOnly = r, this.config = t, this.settings = [
                        {
                            name: "unordered",
                            title: this.api.i18n.t("Unordered"),
                            icon: '<svg width="17" height="13" viewBox="0 0 17 13" xmlns="http://www.w3.org/2000/svg"> <path d="M5.625 4.85h9.25a1.125 1.125 0 0 1 0 2.25h-9.25a1.125 1.125 0 0 1 0-2.25zm0-4.85h9.25a1.125 1.125 0 0 1 0 2.25h-9.25a1.125 1.125 0 0 1 0-2.25zm0 9.85h9.25a1.125 1.125 0 0 1 0 2.25h-9.25a1.125 1.125 0 0 1 0-2.25zm-4.5-5a1.125 1.125 0 1 1 0 2.25 1.125 1.125 0 0 1 0-2.25zm0-4.85a1.125 1.125 0 1 1 0 2.25 1.125 1.125 0 0 1 0-2.25zm0 9.85a1.125 1.125 0 1 1 0 2.25 1.125 1.125 0 0 1 0-2.25z"/></svg>',
                            default: !1
                        },
                        {
                            name: "ordered",
                            title: this.api.i18n.t("Ordered"),
                            icon: '<svg width="17" height="13" viewBox="0 0 17 13" xmlns="http://www.w3.org/2000/svg"><path d="M5.819 4.607h9.362a1.069 1.069 0 0 1 0 2.138H5.82a1.069 1.069 0 1 1 0-2.138zm0-4.607h9.362a1.069 1.069 0 0 1 0 2.138H5.82a1.069 1.069 0 1 1 0-2.138zm0 9.357h9.362a1.069 1.069 0 0 1 0 2.138H5.82a1.069 1.069 0 0 1 0-2.137zM1.468 4.155V1.33c-.554.404-.926.606-1.118.606a.338.338 0 0 1-.244-.104A.327.327 0 0 1 0 1.59c0-.107.035-.184.105-.234.07-.05.192-.114.369-.192.264-.118.475-.243.633-.373.158-.13.298-.276.42-.438a3.94 3.94 0 0 1 .238-.298C1.802.019 1.872 0 1.975 0c.115 0 .208.042.277.127.07.085.105.202.105.351v3.556c0 .416-.15.624-.448.624a.421.421 0 0 1-.32-.127c-.08-.085-.121-.21-.121-.376zm-.283 6.664h1.572c.156 0 .275.03.358.091a.294.294 0 0 1 .123.25.323.323 0 0 1-.098.238c-.065.065-.164.097-.296.097H.629a.494.494 0 0 1-.353-.119.372.372 0 0 1-.126-.28c0-.068.027-.16.081-.273a.977.977 0 0 1 .178-.268c.267-.264.507-.49.722-.678.215-.188.368-.312.46-.371.165-.11.302-.222.412-.334.109-.112.192-.226.25-.344a.786.786 0 0 0 .085-.345.6.6 0 0 0-.341-.553.75.75 0 0 0-.345-.08c-.263 0-.47.11-.62.329-.02.029-.054.107-.101.235a.966.966 0 0 1-.16.295c-.059.069-.145.103-.26.103a.348.348 0 0 1-.25-.094.34.34 0 0 1-.099-.258c0-.132.031-.27.093-.413.063-.143.155-.273.279-.39.123-.116.28-.21.47-.282.189-.072.411-.107.666-.107.307 0 .569.045.786.137a1.182 1.182 0 0 1 .618.623 1.18 1.18 0 0 1-.096 1.083 2.03 2.03 0 0 1-.378.457c-.128.11-.344.282-.646.517-.302.235-.509.417-.621.547a1.637 1.637 0 0 0-.148.187z"/></svg>',
                            default: !0
                        }
                    ], this.defaultListStyle = "ordered";
                    const i = {
                        style: this.defaultListStyle,
                        items: []
                    };
                    this.data = e && Object.keys(e).length ? e : i, this.caret = new s;
                }
            }
        })(), r.default;
    })();
});

},{}],"85Hm2":[function(require,module,exports) {
!function(e, t) {
    module.exports = t();
}(window, function() {
    return function(e) {
        var t = {};
        function n(r) {
            if (t[r]) return t[r].exports;
            var o = t[r] = {
                i: r,
                l: !1,
                exports: {}
            };
            return e[r].call(o.exports, o, o.exports, n), o.l = !0, o.exports;
        }
        return n.m = e, n.c = t, n.d = function(e, t, r) {
            n.o(e, t) || Object.defineProperty(e, t, {
                enumerable: !0,
                get: r
            });
        }, n.r = function(e) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                value: "Module"
            }), Object.defineProperty(e, "__esModule", {
                value: !0
            });
        }, n.t = function(e, t) {
            if (1 & t && (e = n(e)), 8 & t) return e;
            if (4 & t && "object" == typeof e && e && e.__esModule) return e;
            var r = Object.create(null);
            if (n.r(r), Object.defineProperty(r, "default", {
                enumerable: !0,
                value: e
            }), 2 & t && "string" != typeof e) for(var o in e)n.d(r, o, (function(t) {
                return e[t];
            }).bind(null, o));
            return r;
        }, n.n = function(e) {
            var t = e && e.__esModule ? function() {
                return e.default;
            } : function() {
                return e;
            };
            return n.d(t, "a", t), t;
        }, n.o = function(e, t) {
            return Object.prototype.hasOwnProperty.call(e, t);
        }, n.p = "/", n(n.s = 0);
    }([
        function(e, t, n) {
            function r(e, t) {
                for(var n = 0; n < t.length; n++){
                    var r = t[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);
                }
            }
            function o(e, t, n) {
                return t && r(e.prototype, t), n && r(e, n), e;
            }
            n(1).toString();
            var i = function() {
                function e(t) {
                    var n = t.api;
                    !function(e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
                    }(this, e), this.api = n, this.button = null, this.tag = "U", this.iconClasses = {
                        base: this.api.styles.inlineToolButton,
                        active: this.api.styles.inlineToolButtonActive
                    };
                }
                return o(e, null, [
                    {
                        key: "CSS",
                        get: function() {
                            return "cdx-underline";
                        }
                    }
                ]), o(e, [
                    {
                        key: "render",
                        value: function() {
                            return this.button = document.createElement("button"), this.button.type = "button", this.button.classList.add(this.iconClasses.base), this.button.innerHTML = this.toolboxIcon, this.button;
                        }
                    },
                    {
                        key: "surround",
                        value: function(t) {
                            if (t) {
                                var n = this.api.selection.findParentTag(this.tag, e.CSS);
                                n ? this.unwrap(n) : this.wrap(t);
                            }
                        }
                    },
                    {
                        key: "wrap",
                        value: function(t) {
                            var n = document.createElement(this.tag);
                            n.classList.add(e.CSS), n.appendChild(t.extractContents()), t.insertNode(n), this.api.selection.expandToTag(n);
                        }
                    },
                    {
                        key: "unwrap",
                        value: function(e) {
                            this.api.selection.expandToTag(e);
                            var t = window.getSelection(), n = t.getRangeAt(0), r = n.extractContents();
                            e.parentNode.removeChild(e), n.insertNode(r), t.removeAllRanges(), t.addRange(n);
                        }
                    },
                    {
                        key: "checkState",
                        value: function() {
                            var t = this.api.selection.findParentTag(this.tag, e.CSS);
                            this.button.classList.toggle(this.iconClasses.active, !!t);
                        }
                    },
                    {
                        key: "toolboxIcon",
                        get: function() {
                            return n(5).default;
                        }
                    }
                ], [
                    {
                        key: "isInline",
                        get: function() {
                            return !0;
                        }
                    },
                    {
                        key: "sanitize",
                        get: function() {
                            return {
                                u: {
                                    class: e.CSS
                                }
                            };
                        }
                    }
                ]), e;
            }();
            e.exports = i;
        },
        function(e, t, n) {
            var r = n(2), o = n(3);
            "string" == typeof (o = o.__esModule ? o.default : o) && (o = [
                [
                    e.i,
                    o,
                    ""
                ]
            ]);
            var i = {
                insert: "head",
                singleton: !1
            };
            r(o, i);
            e.exports = o.locals || {};
        },
        function(e, t, n) {
            "use strict";
            var r, o = function() {
                return void 0 === r && (r = Boolean(window && document && document.all && !window.atob)), r;
            }, i = function() {
                var e = {};
                return function(t) {
                    if (void 0 === e[t]) {
                        var n = document.querySelector(t);
                        if (window.HTMLIFrameElement && n instanceof window.HTMLIFrameElement) try {
                            n = n.contentDocument.head;
                        } catch (e1) {
                            n = null;
                        }
                        e[t] = n;
                    }
                    return e[t];
                };
            }(), a = [];
            function c(e) {
                for(var t = -1, n = 0; n < a.length; n++)if (a[n].identifier === e) {
                    t = n;
                    break;
                }
                return t;
            }
            function u(e, t) {
                for(var n = {}, r = [], o = 0; o < e.length; o++){
                    var i = e[o], u = t.base ? i[0] + t.base : i[0], s = n[u] || 0, l = "".concat(u, " ").concat(s);
                    n[u] = s + 1;
                    var f = c(l), d = {
                        css: i[1],
                        media: i[2],
                        sourceMap: i[3]
                    };
                    -1 !== f ? (a[f].references++, a[f].updater(d)) : a.push({
                        identifier: l,
                        updater: b(d, t),
                        references: 1
                    }), r.push(l);
                }
                return r;
            }
            function s(e) {
                var t = document.createElement("style"), r = e.attributes || {};
                if (void 0 === r.nonce) {
                    var o = n.nc;
                    o && (r.nonce = o);
                }
                if (Object.keys(r).forEach(function(e) {
                    t.setAttribute(e, r[e]);
                }), "function" == typeof e.insert) e.insert(t);
                else {
                    var a = i(e.insert || "head");
                    if (!a) throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
                    a.appendChild(t);
                }
                return t;
            }
            var l, f = (l = [], function(e, t) {
                return l[e] = t, l.filter(Boolean).join("\n");
            });
            function d(e, t, n, r) {
                var o = n ? "" : r.media ? "@media ".concat(r.media, " {").concat(r.css, "}") : r.css;
                if (e.styleSheet) e.styleSheet.cssText = f(t, o);
                else {
                    var i = document.createTextNode(o), a = e.childNodes;
                    a[t] && e.removeChild(a[t]), a.length ? e.insertBefore(i, a[t]) : e.appendChild(i);
                }
            }
            function p(e, t, n) {
                var r = n.css, o = n.media, i = n.sourceMap;
                if (o ? e.setAttribute("media", o) : e.removeAttribute("media"), i && btoa && (r += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i)))), " */")), e.styleSheet) e.styleSheet.cssText = r;
                else {
                    for(; e.firstChild;)e.removeChild(e.firstChild);
                    e.appendChild(document.createTextNode(r));
                }
            }
            var v = null, h = 0;
            function b(e, t) {
                var n, r, o;
                if (t.singleton) {
                    var i = h++;
                    n = v || (v = s(t)), r = d.bind(null, n, i, !1), o = d.bind(null, n, i, !0);
                } else n = s(t), r = p.bind(null, n, t), o = function() {
                    !function(e) {
                        if (null === e.parentNode) return !1;
                        e.parentNode.removeChild(e);
                    }(n);
                };
                return r(e), function(t) {
                    if (t) {
                        if (t.css === e.css && t.media === e.media && t.sourceMap === e.sourceMap) return;
                        r(e = t);
                    } else o();
                };
            }
            e.exports = function(e, t) {
                (t = t || {}).singleton || "boolean" == typeof t.singleton || (t.singleton = o());
                var n = u(e = e || [], t);
                return function(e) {
                    if (e = e || [], "[object Array]" === Object.prototype.toString.call(e)) {
                        for(var r = 0; r < n.length; r++){
                            var o = c(n[r]);
                            a[o].references--;
                        }
                        for(var i = u(e, t), s = 0; s < n.length; s++){
                            var l = c(n[s]);
                            0 === a[l].references && (a[l].updater(), a.splice(l, 1));
                        }
                        n = i;
                    }
                };
            };
        },
        function(e, t, n) {
            (t = n(4)(!1)).push([
                e.i,
                ".cdx-underline {\n    text-decoration: underline;\n}\n",
                ""
            ]), e.exports = t;
        },
        function(e, t, n) {
            "use strict";
            e.exports = function(e) {
                var t = [];
                return t.toString = function() {
                    return this.map(function(t) {
                        var n = function(e, t) {
                            var n = e[1] || "", r = e[3];
                            if (!r) return n;
                            if (t && "function" == typeof btoa) {
                                var o = (a = r, c = btoa(unescape(encodeURIComponent(JSON.stringify(a)))), u = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c), "/*# ".concat(u, " */")), i = r.sources.map(function(e) {
                                    return "/*# sourceURL=".concat(r.sourceRoot || "").concat(e, " */");
                                });
                                return [
                                    n
                                ].concat(i).concat([
                                    o
                                ]).join("\n");
                            }
                            var a, c, u;
                            return [
                                n
                            ].join("\n");
                        }(t, e);
                        return t[2] ? "@media ".concat(t[2], " {").concat(n, "}") : n;
                    }).join("");
                }, t.i = function(e, n, r) {
                    "string" == typeof e && (e = [
                        [
                            null,
                            e,
                            ""
                        ]
                    ]);
                    var o = {};
                    if (r) for(var i = 0; i < this.length; i++){
                        var a = this[i][0];
                        null != a && (o[a] = !0);
                    }
                    for(var c = 0; c < e.length; c++){
                        var u = [].concat(e[c]);
                        r && o[u[0]] || (n && (u[2] ? u[2] = "".concat(n, " and ").concat(u[2]) : u[2] = n), t.push(u));
                    }
                }, t;
            };
        },
        function(e, t, n) {
            "use strict";
            n.r(t), t.default = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 -1 8 13" width="8" height="13">\n  <path d="M5.48 7.34v-.27c-.25.32-.51.58-.79.8a2.9 2.9 0 01-.9.48c-.32.1-.7.15-1.11.15-.5 0-.96-.1-1.36-.31a2.3 2.3 0 01-.93-.87A3.85 3.85 0 010 5.4V1.25C0 .83.1.52.28.31.48.11.72 0 1.03 0a1 1 0 01.77.31c.2.21.29.53.29.94v3.36c0 .48.04.89.12 1.22.08.33.23.59.44.77.21.2.5.29.86.29.35 0 .68-.11 1-.32.3-.2.53-.48.67-.82.12-.3.18-.95.18-1.95V1.25c0-.41.1-.73.3-.94.18-.2.44-.31.75-.31.3 0 .56.1.75.31.19.2.28.52.28.94v6.07c0 .4-.09.7-.27.9a.9.9 0 01-.7.3.9.9 0 01-.7-.31c-.2-.2-.29-.5-.29-.87zM.72 9.68h6.36a.72.72 0 010 1.44H.72a.72.72 0 010-1.44z"/>\n</svg>\n';
        }
    ]);
});

},{}],"bE4v2":[function(require,module,exports) {
!function(e, t) {
    module.exports = t();
}(window, function() {
    return function(e) {
        var t = {};
        function n(r) {
            if (t[r]) return t[r].exports;
            var i = t[r] = {
                i: r,
                l: !1,
                exports: {}
            };
            return e[r].call(i.exports, i, i.exports, n), i.l = !0, i.exports;
        }
        return n.m = e, n.c = t, n.d = function(e, t, r) {
            n.o(e, t) || Object.defineProperty(e, t, {
                enumerable: !0,
                get: r
            });
        }, n.r = function(e) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                value: "Module"
            }), Object.defineProperty(e, "__esModule", {
                value: !0
            });
        }, n.t = function(e, t) {
            if (1 & t && (e = n(e)), 8 & t) return e;
            if (4 & t && "object" == typeof e && e && e.__esModule) return e;
            var r = Object.create(null);
            if (n.r(r), Object.defineProperty(r, "default", {
                enumerable: !0,
                value: e
            }), 2 & t && "string" != typeof e) for(var i in e)n.d(r, i, (function(t) {
                return e[t];
            }).bind(null, i));
            return r;
        }, n.n = function(e) {
            var t = e && e.__esModule ? function() {
                return e.default;
            } : function() {
                return e;
            };
            return n.d(t, "a", t), t;
        }, n.o = function(e, t) {
            return Object.prototype.hasOwnProperty.call(e, t);
        }, n.p = "/", n(n.s = 14);
    }([
        function(e, t, n) {
            var r = n(5), i = n(6), o = n(7), a = n(9);
            e.exports = function(e, t) {
                return r(e) || i(e, t) || o(e, t) || a();
            };
        },
        function(e, t) {
            function n(t) {
                return "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? e.exports = n = function(e) {
                    return typeof e;
                } : e.exports = n = function(e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                }, n(t);
            }
            e.exports = n;
        },
        function(e, t) {
            e.exports = function(e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
            };
        },
        function(e, t) {
            function n(e, t) {
                for(var n = 0; n < t.length; n++){
                    var r = t[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);
                }
            }
            e.exports = function(e, t, r) {
                return t && n(e.prototype, t), r && n(e, r), e;
            };
        },
        function(e, t) {
            function n(e, t, n) {
                var r, i, o, a, l;
                function c() {
                    var s = Date.now() - a;
                    s < t && s >= 0 ? r = setTimeout(c, t - s) : (r = null, n || (l = e.apply(o, i), o = i = null));
                }
                null == t && (t = 100);
                var s = function() {
                    o = this, i = arguments, a = Date.now();
                    var s = n && !r;
                    return r || (r = setTimeout(c, t)), s && (l = e.apply(o, i), o = i = null), l;
                };
                return s.clear = function() {
                    r && (clearTimeout(r), r = null);
                }, s.flush = function() {
                    r && (l = e.apply(o, i), o = i = null, clearTimeout(r), r = null);
                }, s;
            }
            n.debounce = n, e.exports = n;
        },
        function(e, t) {
            e.exports = function(e) {
                if (Array.isArray(e)) return e;
            };
        },
        function(e, t) {
            e.exports = function(e, t) {
                if ("undefined" != typeof Symbol && Symbol.iterator in Object(e)) {
                    var n = [], r = !0, i = !1, o = void 0;
                    try {
                        for(var a, l = e[Symbol.iterator](); !(r = (a = l.next()).done) && (n.push(a.value), !t || n.length !== t); r = !0);
                    } catch (e1) {
                        i = !0, o = e1;
                    } finally{
                        try {
                            r || null == l.return || l.return();
                        } finally{
                            if (i) throw o;
                        }
                    }
                    return n;
                }
            };
        },
        function(e, t, n) {
            var r = n(8);
            e.exports = function(e, t) {
                if (e) {
                    if ("string" == typeof e) return r(e, t);
                    var n = Object.prototype.toString.call(e).slice(8, -1);
                    return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(n) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? r(e, t) : void 0;
                }
            };
        },
        function(e, t) {
            e.exports = function(e, t) {
                (null == t || t > e.length) && (t = e.length);
                for(var n = 0, r = new Array(t); n < t; n++)r[n] = e[n];
                return r;
            };
        },
        function(e, t) {
            e.exports = function() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            };
        },
        function(e, t, n) {
            var r = n(11), i = n(12);
            "string" == typeof (i = i.__esModule ? i.default : i) && (i = [
                [
                    e.i,
                    i,
                    ""
                ]
            ]);
            var o = {
                insert: "head",
                singleton: !1
            };
            r(i, o);
            e.exports = i.locals || {};
        },
        function(e, t, n) {
            "use strict";
            var r, i = function() {
                return void 0 === r && (r = Boolean(window && document && document.all && !window.atob)), r;
            }, o = function() {
                var e = {};
                return function(t) {
                    if (void 0 === e[t]) {
                        var n = document.querySelector(t);
                        if (window.HTMLIFrameElement && n instanceof window.HTMLIFrameElement) try {
                            n = n.contentDocument.head;
                        } catch (e1) {
                            n = null;
                        }
                        e[t] = n;
                    }
                    return e[t];
                };
            }(), a = [];
            function l(e) {
                for(var t = -1, n = 0; n < a.length; n++)if (a[n].identifier === e) {
                    t = n;
                    break;
                }
                return t;
            }
            function c(e, t) {
                for(var n = {}, r = [], i = 0; i < e.length; i++){
                    var o = e[i], c = t.base ? o[0] + t.base : o[0], s = n[c] || 0, d = "".concat(c, " ").concat(s);
                    n[c] = s + 1;
                    var u = l(d), h = {
                        css: o[1],
                        media: o[2],
                        sourceMap: o[3]
                    };
                    -1 !== u ? (a[u].references++, a[u].updater(h)) : a.push({
                        identifier: d,
                        updater: b(h, t),
                        references: 1
                    }), r.push(d);
                }
                return r;
            }
            function s(e) {
                var t = document.createElement("style"), r = e.attributes || {};
                if (void 0 === r.nonce) {
                    var i = n.nc;
                    i && (r.nonce = i);
                }
                if (Object.keys(r).forEach(function(e) {
                    t.setAttribute(e, r[e]);
                }), "function" == typeof e.insert) e.insert(t);
                else {
                    var a = o(e.insert || "head");
                    if (!a) throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
                    a.appendChild(t);
                }
                return t;
            }
            var d, u = (d = [], function(e, t) {
                return d[e] = t, d.filter(Boolean).join("\n");
            });
            function h(e, t, n, r) {
                var i = n ? "" : r.media ? "@media ".concat(r.media, " {").concat(r.css, "}") : r.css;
                if (e.styleSheet) e.styleSheet.cssText = u(t, i);
                else {
                    var o = document.createTextNode(i), a = e.childNodes;
                    a[t] && e.removeChild(a[t]), a.length ? e.insertBefore(o, a[t]) : e.appendChild(o);
                }
            }
            function m(e, t, n) {
                var r = n.css, i = n.media, o = n.sourceMap;
                if (i ? e.setAttribute("media", i) : e.removeAttribute("media"), o && btoa && (r += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o)))), " */")), e.styleSheet) e.styleSheet.cssText = r;
                else {
                    for(; e.firstChild;)e.removeChild(e.firstChild);
                    e.appendChild(document.createTextNode(r));
                }
            }
            var f = null, p = 0;
            function b(e, t) {
                var n, r, i;
                if (t.singleton) {
                    var o = p++;
                    n = f || (f = s(t)), r = h.bind(null, n, o, !1), i = h.bind(null, n, o, !0);
                } else n = s(t), r = m.bind(null, n, t), i = function() {
                    !function(e) {
                        if (null === e.parentNode) return !1;
                        e.parentNode.removeChild(e);
                    }(n);
                };
                return r(e), function(t) {
                    if (t) {
                        if (t.css === e.css && t.media === e.media && t.sourceMap === e.sourceMap) return;
                        r(e = t);
                    } else i();
                };
            }
            e.exports = function(e, t) {
                (t = t || {}).singleton || "boolean" == typeof t.singleton || (t.singleton = i());
                var n = c(e = e || [], t);
                return function(e) {
                    if (e = e || [], "[object Array]" === Object.prototype.toString.call(e)) {
                        for(var r = 0; r < n.length; r++){
                            var i = l(n[r]);
                            a[i].references--;
                        }
                        for(var o = c(e, t), s = 0; s < n.length; s++){
                            var d = l(n[s]);
                            0 === a[d].references && (a[d].updater(), a.splice(d, 1));
                        }
                        n = o;
                    }
                };
            };
        },
        function(e, t, n) {
            (t = n(13)(!1)).push([
                e.i,
                ".embed-tool--loading .embed-tool__caption {\n      display: none;\n    }\n\n    .embed-tool--loading .embed-tool__preloader {\n      display: block;\n    }\n\n    .embed-tool--loading .embed-tool__content {\n      display: none;\n    }\n  .embed-tool__preloader {\n    display: none;\n    position: relative;\n    height: 200px;\n    box-sizing: border-box;\n    border-radius: 5px;\n    border: 1px solid #e6e9eb;\n  }\n  .embed-tool__preloader::before {\n      content: '';\n      position: absolute;\n      z-index: 3;\n      left: 50%;\n      top: 50%;\n      width: 30px;\n      height: 30px;\n      margin-top: -25px;\n      margin-left: -15px;\n      border-radius: 50%;\n      border: 2px solid #cdd1e0;\n      border-top-color: #388ae5;\n      box-sizing: border-box;\n      animation: embed-preloader-spin 2s infinite linear;\n    }\n  .embed-tool__url {\n    position: absolute;\n    bottom: 20px;\n    left: 50%;\n    transform: translateX(-50%);\n    max-width: 250px;\n    color: #7b7e89;\n    font-size: 11px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n  .embed-tool__content {\n    width: 100%;\n  }\n  .embed-tool__caption {\n    margin-top: 7px;\n  }\n  .embed-tool__caption[contentEditable=true][data-placeholder]::before{\n      position: absolute;\n      content: attr(data-placeholder);\n      color: #707684;\n      font-weight: normal;\n      opacity: 0;\n    }\n  .embed-tool__caption[contentEditable=true][data-placeholder]:empty::before {\n         opacity: 1;\n      }\n  .embed-tool__caption[contentEditable=true][data-placeholder]:empty:focus::before {\n        opacity: 0;\n      }\n\n@keyframes embed-preloader-spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n",
                ""
            ]), e.exports = t;
        },
        function(e, t, n) {
            "use strict";
            e.exports = function(e) {
                var t = [];
                return t.toString = function() {
                    return this.map(function(t) {
                        var n = function(e, t) {
                            var n = e[1] || "", r = e[3];
                            if (!r) return n;
                            if (t && "function" == typeof btoa) {
                                var i = (a = r, l = btoa(unescape(encodeURIComponent(JSON.stringify(a)))), c = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(l), "/*# ".concat(c, " */")), o = r.sources.map(function(e) {
                                    return "/*# sourceURL=".concat(r.sourceRoot || "").concat(e, " */");
                                });
                                return [
                                    n
                                ].concat(o).concat([
                                    i
                                ]).join("\n");
                            }
                            var a, l, c;
                            return [
                                n
                            ].join("\n");
                        }(t, e);
                        return t[2] ? "@media ".concat(t[2], " {").concat(n, "}") : n;
                    }).join("");
                }, t.i = function(e, n, r) {
                    "string" == typeof e && (e = [
                        [
                            null,
                            e,
                            ""
                        ]
                    ]);
                    var i = {};
                    if (r) for(var o = 0; o < this.length; o++){
                        var a = this[o][0];
                        null != a && (i[a] = !0);
                    }
                    for(var l = 0; l < e.length; l++){
                        var c = [].concat(e[l]);
                        r && i[c[0]] || (n && (c[2] ? c[2] = "".concat(n, " and ").concat(c[2]) : c[2] = n), t.push(c));
                    }
                }, t;
            };
        },
        function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, "default", function() {
                return m;
            });
            var r = n(1), i = n.n(r), o = n(0), a = n.n(o), l = n(2), c = n.n(l), s = n(3), d = n.n(s), u = {
                vimeo: {
                    regex: /(?:http[s]?:\/\/)?(?:www.)?(?:player.)?vimeo\.co(?:.+\/([^\/]\d+)(?:#t=[\d]+)?s?$)/,
                    embedUrl: "https://player.vimeo.com/video/<%= remote_id %>?title=0&byline=0",
                    html: '<iframe style="width:100%;" height="320" frameborder="0"></iframe>',
                    height: 320,
                    width: 580
                },
                youtube: {
                    regex: /(?:https?:\/\/)?(?:www\.)?(?:(?:youtu\.be\/)|(?:youtube\.com)\/(?:v\/|u\/\w\/|embed\/|watch))(?:(?:\?v=)?([^#&?=]*))?((?:[?&]\w*=\w*)*)/,
                    embedUrl: "https://www.youtube.com/embed/<%= remote_id %>",
                    html: '<iframe style="width:100%;" height="320" frameborder="0" allowfullscreen></iframe>',
                    height: 320,
                    width: 580,
                    id: function(e) {
                        var t = a()(e, 2), n = t[0], r = t[1];
                        if (!r && n) return n;
                        var i = {
                            start: "start",
                            end: "end",
                            t: "start",
                            time_continue: "start",
                            list: "list"
                        };
                        return r = r.slice(1).split("&").map(function(e) {
                            var t = e.split("="), r = a()(t, 2), o = r[0], l = r[1];
                            return n || "v" !== o ? i[o] ? "".concat(i[o], "=").concat(l) : null : (n = l, null);
                        }).filter(function(e) {
                            return !!e;
                        }), n + "?" + r.join("&");
                    }
                },
                coub: {
                    regex: /https?:\/\/coub\.com\/view\/([^\/\?\&]+)/,
                    embedUrl: "https://coub.com/embed/<%= remote_id %>",
                    html: '<iframe style="width:100%;" height="320" frameborder="0" allowfullscreen></iframe>',
                    height: 320,
                    width: 580
                },
                vine: {
                    regex: /https?:\/\/vine\.co\/v\/([^\/\?\&]+)/,
                    embedUrl: "https://vine.co/v/<%= remote_id %>/embed/simple/",
                    html: '<iframe style="width:100%;" height="320" frameborder="0" allowfullscreen></iframe>',
                    height: 320,
                    width: 580
                },
                imgur: {
                    regex: /https?:\/\/(?:i\.)?imgur\.com.*\/([a-zA-Z0-9]+)(?:\.gifv)?/,
                    embedUrl: "http://imgur.com/<%= remote_id %>/embed",
                    html: '<iframe allowfullscreen="true" scrolling="no" id="imgur-embed-iframe-pub-<%= remote_id %>" class="imgur-embed-iframe-pub" style="height: 500px; width: 100%; border: 1px solid #000"></iframe>',
                    height: 500,
                    width: 540
                },
                gfycat: {
                    regex: /https?:\/\/gfycat\.com(?:\/detail)?\/([a-zA-Z]+)/,
                    embedUrl: "https://gfycat.com/ifr/<%= remote_id %>",
                    html: "<iframe frameborder='0' scrolling='no' style=\"width:100%;\" height='436' allowfullscreen ></iframe>",
                    height: 436,
                    width: 580
                },
                "twitch-channel": {
                    regex: /https?:\/\/www\.twitch\.tv\/([^\/\?\&]*)\/?$/,
                    embedUrl: "https://player.twitch.tv/?channel=<%= remote_id %>",
                    html: '<iframe frameborder="0" allowfullscreen="true" scrolling="no" height="366" style="width:100%;"></iframe>',
                    height: 366,
                    width: 600
                },
                "twitch-video": {
                    regex: /https?:\/\/www\.twitch\.tv\/(?:[^\/\?\&]*\/v|videos)\/([0-9]*)/,
                    embedUrl: "https://player.twitch.tv/?video=v<%= remote_id %>",
                    html: '<iframe frameborder="0" allowfullscreen="true" scrolling="no" height="366" style="width:100%;"></iframe>',
                    height: 366,
                    width: 600
                },
                "yandex-music-album": {
                    regex: /https?:\/\/music\.yandex\.ru\/album\/([0-9]*)\/?$/,
                    embedUrl: "https://music.yandex.ru/iframe/#album/<%= remote_id %>/",
                    html: '<iframe frameborder="0" style="border:none;width:540px;height:400px;" style="width:100%;" height="400"></iframe>',
                    height: 400,
                    width: 540
                },
                "yandex-music-track": {
                    regex: /https?:\/\/music\.yandex\.ru\/album\/([0-9]*)\/track\/([0-9]*)/,
                    embedUrl: "https://music.yandex.ru/iframe/#track/<%= remote_id %>/",
                    html: '<iframe frameborder="0" style="border:none;width:540px;height:100px;" style="width:100%;" height="100"></iframe>',
                    height: 100,
                    width: 540,
                    id: function(e) {
                        return e.join("/");
                    }
                },
                "yandex-music-playlist": {
                    regex: /https?:\/\/music\.yandex\.ru\/users\/([^\/\?\&]*)\/playlists\/([0-9]*)/,
                    embedUrl: "https://music.yandex.ru/iframe/#playlist/<%= remote_id %>/show/cover/description/",
                    html: '<iframe frameborder="0" style="border:none;width:540px;height:400px;" width="540" height="400"></iframe>',
                    height: 400,
                    width: 540,
                    id: function(e) {
                        return e.join("/");
                    }
                },
                codepen: {
                    regex: /https?:\/\/codepen\.io\/([^\/\?\&]*)\/pen\/([^\/\?\&]*)/,
                    embedUrl: "https://codepen.io/<%= remote_id %>?height=300&theme-id=0&default-tab=css,result&embed-version=2",
                    html: "<iframe height='300' scrolling='no' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'></iframe>",
                    height: 300,
                    width: 600,
                    id: function(e) {
                        return e.join("/embed/");
                    }
                },
                instagram: {
                    regex: /https?:\/\/www\.instagram\.com\/p\/([^\/\?\&]+)\/?.*/,
                    embedUrl: "https://www.instagram.com/p/<%= remote_id %>/embed",
                    html: '<iframe width="400" height="505" style="margin: 0 auto;" frameborder="0" scrolling="no" allowtransparency="true"></iframe>',
                    height: 505,
                    width: 400
                },
                twitter: {
                    regex: /^https?:\/\/twitter\.com\/(?:#!\/)?(\w+)\/status(?:es)?\/(\d+?.*)?$/,
                    embedUrl: "https://twitframe.com/show?url=https://twitter.com/<%= remote_id %>",
                    html: '<iframe width="600" height="600" style="margin: 0 auto;" frameborder="0" scrolling="no" allowtransparency="true"></iframe>',
                    height: 300,
                    width: 600,
                    id: function(e) {
                        return e.join("/status/");
                    }
                },
                pinterest: {
                    regex: /https?:\/\/([^\/\?\&]*).pinterest.com\/pin\/([^\/\?\&]*)\/?$/,
                    embedUrl: "https://assets.pinterest.com/ext/embed.html?id=<%= remote_id %>",
                    html: "<iframe scrolling='no' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%; min-height: 400px; max-height: 1000px;'></iframe>",
                    id: function(e) {
                        return e[1];
                    }
                },
                facebook: {
                    regex: /https?:\/\/www.facebook.com\/([^\/\?\&]*)\/(.*)/,
                    embedUrl: "https://www.facebook.com/plugins/post.php?href=https://www.facebook.com/<%= remote_id %>&width=500",
                    html: "<iframe scrolling='no' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%; min-height: 500px; max-height: 1000px;'></iframe>",
                    id: function(e) {
                        return e.join("/");
                    }
                },
                aparat: {
                    regex: /(?:http[s]?:\/\/)?(?:www.)?aparat\.com\/v\/([^\/\?\&]+)\/?/,
                    embedUrl: "https://www.aparat.com/video/video/embed/videohash/<%= remote_id %>/vt/frame",
                    html: '<iframe width="600" height="300" style="margin: 0 auto;" frameborder="0" scrolling="no" allowtransparency="true"></iframe>',
                    height: 300,
                    width: 600
                },
                miro: {
                    regex: /https:\/\/miro.com\/\S+(\S{12})\/(\S+)?/,
                    embedUrl: "https://miro.com/app/live-embed/<%= remote_id %>",
                    html: '<iframe width="700" height="500" style="margin: 0 auto;" allowFullScreen frameBorder="0" scrolling="no"></iframe>'
                }
            }, h = (n(10), n(4)), m = function() {
                function e(t) {
                    var n = t.data, r = t.api, i = t.readOnly;
                    c()(this, e), this.api = r, this._data = {}, this.element = null, this.readOnly = i, this.data = n;
                }
                return d()(e, [
                    {
                        key: "render",
                        value: function() {
                            var t = this;
                            if (!this.data.service) {
                                var n = document.createElement("div");
                                return this.element = n, n;
                            }
                            var r = e.services[this.data.service].html, i = document.createElement("div"), o = document.createElement("div"), a = document.createElement("template"), l = this.createPreloader();
                            i.classList.add(this.CSS.baseClass, this.CSS.container, this.CSS.containerLoading), o.classList.add(this.CSS.input, this.CSS.caption), i.appendChild(l), o.contentEditable = !this.readOnly, o.dataset.placeholder = this.api.i18n.t("Enter a caption"), o.innerHTML = this.data.caption || "", a.innerHTML = r, a.content.firstChild.setAttribute("src", this.data.embed), a.content.firstChild.classList.add(this.CSS.content);
                            var c = this.embedIsReady(i);
                            return i.appendChild(a.content.firstChild), i.appendChild(o), c.then(function() {
                                i.classList.remove(t.CSS.containerLoading);
                            }), this.element = i, i;
                        }
                    },
                    {
                        key: "createPreloader",
                        value: function() {
                            var e = document.createElement("preloader"), t = document.createElement("div");
                            return t.textContent = this.data.source, e.classList.add(this.CSS.preloader), t.classList.add(this.CSS.url), e.appendChild(t), e;
                        }
                    },
                    {
                        key: "save",
                        value: function() {
                            return this.data;
                        }
                    },
                    {
                        key: "onPaste",
                        value: function(t) {
                            var n = t.detail, r = n.key, i = n.data, o = e.services[r], a = o.regex, l = o.embedUrl, c = o.width, s = o.height, d = o.id, u = void 0 === d ? function(e) {
                                return e.shift();
                            } : d, h = a.exec(i).slice(1), m = l.replace(/<%= remote_id %>/g, u(h));
                            this.data = {
                                service: r,
                                source: i,
                                embed: m,
                                width: c,
                                height: s
                            };
                        }
                    },
                    {
                        key: "embedIsReady",
                        value: function(e) {
                            var t = null;
                            return new Promise(function(n, r) {
                                (t = new MutationObserver(Object(h.debounce)(n, 450))).observe(e, {
                                    childList: !0,
                                    subtree: !0
                                });
                            }).then(function() {
                                t.disconnect();
                            });
                        }
                    },
                    {
                        key: "data",
                        set: function(e) {
                            if (!(e instanceof Object)) throw Error("Embed Tool data should be object");
                            var t = e.service, n = e.source, r = e.embed, i = e.width, o = e.height, a = e.caption, l = void 0 === a ? "" : a;
                            this._data = {
                                service: t || this.data.service,
                                source: n || this.data.source,
                                embed: r || this.data.embed,
                                width: i || this.data.width,
                                height: o || this.data.height,
                                caption: l || this.data.caption || ""
                            };
                            var c = this.element;
                            c && c.parentNode.replaceChild(this.render(), c);
                        },
                        get: function() {
                            if (this.element) {
                                var e = this.element.querySelector(".".concat(this.api.styles.input));
                                this._data.caption = e ? e.innerHTML : "";
                            }
                            return this._data;
                        }
                    },
                    {
                        key: "CSS",
                        get: function() {
                            return {
                                baseClass: this.api.styles.block,
                                input: this.api.styles.input,
                                container: "embed-tool",
                                containerLoading: "embed-tool--loading",
                                preloader: "embed-tool__preloader",
                                caption: "embed-tool__caption",
                                url: "embed-tool__url",
                                content: "embed-tool__content"
                            };
                        }
                    }
                ], [
                    {
                        key: "prepare",
                        value: function(t) {
                            var n = t.config, r = (void 0 === n ? {} : n).services, o = void 0 === r ? {} : r, l = Object.entries(u), c = Object.entries(o).filter(function(e) {
                                var t = a()(e, 2), n = (t[0], t[1]);
                                return "boolean" == typeof n && !0 === n;
                            }).map(function(e) {
                                return a()(e, 1)[0];
                            }), s = Object.entries(o).filter(function(e) {
                                var t = a()(e, 2), n = (t[0], t[1]);
                                return "object" === i()(n);
                            }).filter(function(t) {
                                var n = a()(t, 2), r = (n[0], n[1]);
                                return e.checkServiceConfig(r);
                            }).map(function(e) {
                                var t = a()(e, 2), n = t[0], r = t[1];
                                return [
                                    n,
                                    {
                                        regex: r.regex,
                                        embedUrl: r.embedUrl,
                                        html: r.html,
                                        height: r.height,
                                        width: r.width,
                                        id: r.id
                                    }
                                ];
                            });
                            c.length && (l = l.filter(function(e) {
                                var t = a()(e, 1)[0];
                                return c.includes(t);
                            })), l = l.concat(s), e.services = l.reduce(function(e, t) {
                                var n = a()(t, 2), r = n[0], i = n[1];
                                return r in e ? (e[r] = Object.assign({}, e[r], i), e) : (e[r] = i, e);
                            }, {}), e.patterns = l.reduce(function(e, t) {
                                var n = a()(t, 2), r = n[0], i = n[1];
                                return e[r] = i.regex, e;
                            }, {});
                        }
                    },
                    {
                        key: "checkServiceConfig",
                        value: function(e) {
                            var t = e.regex, n = e.embedUrl, r = e.html, i = e.height, o = e.width, a = e.id, l = t && t instanceof RegExp && n && "string" == typeof n && r && "string" == typeof r;
                            return l = (l = (l = l && (void 0 === a || a instanceof Function)) && (void 0 === i || Number.isFinite(i))) && (void 0 === o || Number.isFinite(o));
                        }
                    },
                    {
                        key: "pasteConfig",
                        get: function() {
                            return {
                                patterns: e.patterns
                            };
                        }
                    },
                    {
                        key: "isReadOnlySupported",
                        get: function() {
                            return !0;
                        }
                    }
                ]), e;
            }();
        }
    ]).default;
});

},{}],"1VRWk":[function(require,module,exports) {
!function(e, t) {
    module.exports = t();
}(window, function() {
    return function(e) {
        var t = {};
        function n(r) {
            if (t[r]) return t[r].exports;
            var o = t[r] = {
                i: r,
                l: !1,
                exports: {}
            };
            return e[r].call(o.exports, o, o.exports, n), o.l = !0, o.exports;
        }
        return n.m = e, n.c = t, n.d = function(e, t, r) {
            n.o(e, t) || Object.defineProperty(e, t, {
                enumerable: !0,
                get: r
            });
        }, n.r = function(e) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                value: "Module"
            }), Object.defineProperty(e, "__esModule", {
                value: !0
            });
        }, n.t = function(e, t) {
            if (1 & t && (e = n(e)), 8 & t) return e;
            if (4 & t && "object" == typeof e && e && e.__esModule) return e;
            var r = Object.create(null);
            if (n.r(r), Object.defineProperty(r, "default", {
                enumerable: !0,
                value: e
            }), 2 & t && "string" != typeof e) for(var o in e)n.d(r, o, (function(t) {
                return e[t];
            }).bind(null, o));
            return r;
        }, n.n = function(e) {
            var t = e && e.__esModule ? function() {
                return e.default;
            } : function() {
                return e;
            };
            return n.d(t, "a", t), t;
        }, n.o = function(e, t) {
            return Object.prototype.hasOwnProperty.call(e, t);
        }, n.p = "/", n(n.s = 0);
    }([
        function(e, t, n) {
            function r(e, t) {
                for(var n = 0; n < t.length; n++){
                    var r = t[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);
                }
            }
            function o(e, t, n) {
                return t && r(e.prototype, t), n && r(e, n), e;
            }
            n(1).toString();
            /**
 * Base Paragraph Block for the Editor.js.
 * Represents simple paragraph
 *
 * @author CodeX (team@codex.so)
 * @copyright CodeX 2018
 * @license The MIT License (MIT)
 */ var a = function() {
                function e(t) {
                    var n = t.data, r = t.config, o = t.api, a = t.readOnly;
                    !function(e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
                    }(this, e), this.api = o, this.readOnly = a, this._CSS = {
                        block: this.api.styles.block,
                        wrapper: "ce-paragraph"
                    }, this.readOnly || (this.onKeyUp = this.onKeyUp.bind(this)), this._placeholder = r.placeholder ? r.placeholder : e.DEFAULT_PLACEHOLDER, this._data = {}, this._element = this.drawView(), this._preserveBlank = void 0 !== r.preserveBlank && r.preserveBlank, this.data = n;
                }
                return o(e, null, [
                    {
                        key: "DEFAULT_PLACEHOLDER",
                        get: function() {
                            return "";
                        }
                    }
                ]), o(e, [
                    {
                        key: "onKeyUp",
                        value: function(e) {
                            "Backspace" !== e.code && "Delete" !== e.code || "" === this._element.textContent && (this._element.innerHTML = "");
                        }
                    },
                    {
                        key: "drawView",
                        value: function() {
                            var e = document.createElement("DIV");
                            return e.classList.add(this._CSS.wrapper, this._CSS.block), e.contentEditable = !1, e.dataset.placeholder = this.api.i18n.t(this._placeholder), this.readOnly || (e.contentEditable = !0, e.addEventListener("keyup", this.onKeyUp)), e;
                        }
                    },
                    {
                        key: "render",
                        value: function() {
                            return this._element;
                        }
                    },
                    {
                        key: "merge",
                        value: function(e) {
                            var t = {
                                text: this.data.text + e.text
                            };
                            this.data = t;
                        }
                    },
                    {
                        key: "validate",
                        value: function(e) {
                            return !("" === e.text.trim() && !this._preserveBlank);
                        }
                    },
                    {
                        key: "save",
                        value: function(e) {
                            return {
                                text: e.innerHTML
                            };
                        }
                    },
                    {
                        key: "onPaste",
                        value: function(e) {
                            var t = {
                                text: e.detail.data.innerHTML
                            };
                            this.data = t;
                        }
                    },
                    {
                        key: "data",
                        get: function() {
                            var e = this._element.innerHTML;
                            return this._data.text = e, this._data;
                        },
                        set: function(e) {
                            this._data = e || {}, this._element.innerHTML = this._data.text || "";
                        }
                    }
                ], [
                    {
                        key: "conversionConfig",
                        get: function() {
                            return {
                                export: "text",
                                import: "text"
                            };
                        }
                    },
                    {
                        key: "sanitize",
                        get: function() {
                            return {
                                text: {
                                    br: !0
                                }
                            };
                        }
                    },
                    {
                        key: "isReadOnlySupported",
                        get: function() {
                            return !0;
                        }
                    },
                    {
                        key: "pasteConfig",
                        get: function() {
                            return {
                                tags: [
                                    "P"
                                ]
                            };
                        }
                    },
                    {
                        key: "toolbox",
                        get: function() {
                            return {
                                icon: n(5).default,
                                title: "Text"
                            };
                        }
                    }
                ]), e;
            }();
            e.exports = a;
        },
        function(e, t, n) {
            var r = n(2), o = n(3);
            "string" == typeof (o = o.__esModule ? o.default : o) && (o = [
                [
                    e.i,
                    o,
                    ""
                ]
            ]);
            var a = {
                insert: "head",
                singleton: !1
            };
            r(o, a);
            e.exports = o.locals || {};
        },
        function(e, t, n) {
            "use strict";
            var r, o = function() {
                return void 0 === r && (r = Boolean(window && document && document.all && !window.atob)), r;
            }, a = function() {
                var e = {};
                return function(t) {
                    if (void 0 === e[t]) {
                        var n = document.querySelector(t);
                        if (window.HTMLIFrameElement && n instanceof window.HTMLIFrameElement) try {
                            n = n.contentDocument.head;
                        } catch (e1) {
                            n = null;
                        }
                        e[t] = n;
                    }
                    return e[t];
                };
            }(), i = [];
            function c(e) {
                for(var t = -1, n = 0; n < i.length; n++)if (i[n].identifier === e) {
                    t = n;
                    break;
                }
                return t;
            }
            function u(e, t) {
                for(var n = {}, r = [], o = 0; o < e.length; o++){
                    var a = e[o], u = t.base ? a[0] + t.base : a[0], s = n[u] || 0, l = "".concat(u, " ").concat(s);
                    n[u] = s + 1;
                    var f = c(l), d = {
                        css: a[1],
                        media: a[2],
                        sourceMap: a[3]
                    };
                    -1 !== f ? (i[f].references++, i[f].updater(d)) : i.push({
                        identifier: l,
                        updater: y(d, t),
                        references: 1
                    }), r.push(l);
                }
                return r;
            }
            function s(e) {
                var t = document.createElement("style"), r = e.attributes || {};
                if (void 0 === r.nonce) {
                    var o = n.nc;
                    o && (r.nonce = o);
                }
                if (Object.keys(r).forEach(function(e) {
                    t.setAttribute(e, r[e]);
                }), "function" == typeof e.insert) e.insert(t);
                else {
                    var i = a(e.insert || "head");
                    if (!i) throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
                    i.appendChild(t);
                }
                return t;
            }
            var l, f = (l = [], function(e, t) {
                return l[e] = t, l.filter(Boolean).join("\n");
            });
            function d(e, t, n, r) {
                var o = n ? "" : r.media ? "@media ".concat(r.media, " {").concat(r.css, "}") : r.css;
                if (e.styleSheet) e.styleSheet.cssText = f(t, o);
                else {
                    var a = document.createTextNode(o), i = e.childNodes;
                    i[t] && e.removeChild(i[t]), i.length ? e.insertBefore(a, i[t]) : e.appendChild(a);
                }
            }
            function p(e, t, n) {
                var r = n.css, o = n.media, a = n.sourceMap;
                if (o ? e.setAttribute("media", o) : e.removeAttribute("media"), a && btoa && (r += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a)))), " */")), e.styleSheet) e.styleSheet.cssText = r;
                else {
                    for(; e.firstChild;)e.removeChild(e.firstChild);
                    e.appendChild(document.createTextNode(r));
                }
            }
            var h = null, v = 0;
            function y(e, t) {
                var n, r, o;
                if (t.singleton) {
                    var a = v++;
                    n = h || (h = s(t)), r = d.bind(null, n, a, !1), o = d.bind(null, n, a, !0);
                } else n = s(t), r = p.bind(null, n, t), o = function() {
                    !function(e) {
                        if (null === e.parentNode) return !1;
                        e.parentNode.removeChild(e);
                    }(n);
                };
                return r(e), function(t) {
                    if (t) {
                        if (t.css === e.css && t.media === e.media && t.sourceMap === e.sourceMap) return;
                        r(e = t);
                    } else o();
                };
            }
            e.exports = function(e, t) {
                (t = t || {}).singleton || "boolean" == typeof t.singleton || (t.singleton = o());
                var n = u(e = e || [], t);
                return function(e) {
                    if (e = e || [], "[object Array]" === Object.prototype.toString.call(e)) {
                        for(var r = 0; r < n.length; r++){
                            var o = c(n[r]);
                            i[o].references--;
                        }
                        for(var a = u(e, t), s = 0; s < n.length; s++){
                            var l = c(n[s]);
                            0 === i[l].references && (i[l].updater(), i.splice(l, 1));
                        }
                        n = a;
                    }
                };
            };
        },
        function(e, t, n) {
            (t = n(4)(!1)).push([
                e.i,
                ".ce-paragraph {\n    line-height: 1.6em;\n    outline: none;\n}\n\n.ce-paragraph[data-placeholder]:empty::before{\n  content: attr(data-placeholder);\n  color: #707684;\n  font-weight: normal;\n  opacity: 0;\n}\n\n/** Show placeholder at the first paragraph if Editor is empty */\n.codex-editor--empty .ce-block:first-child .ce-paragraph[data-placeholder]:empty::before {\n  opacity: 1;\n}\n\n.codex-editor--toolbox-opened .ce-block:first-child .ce-paragraph[data-placeholder]:empty::before,\n.codex-editor--empty .ce-block:first-child .ce-paragraph[data-placeholder]:empty:focus::before {\n  opacity: 0;\n}\n\n.ce-paragraph p:first-of-type{\n    margin-top: 0;\n}\n\n.ce-paragraph p:last-of-type{\n    margin-bottom: 0;\n}\n",
                ""
            ]), e.exports = t;
        },
        function(e, t, n) {
            "use strict";
            e.exports = function(e) {
                var t = [];
                return t.toString = function() {
                    return this.map(function(t) {
                        var n = function(e, t) {
                            var n = e[1] || "", r = e[3];
                            if (!r) return n;
                            if (t && "function" == typeof btoa) {
                                var o = (i = r, c = btoa(unescape(encodeURIComponent(JSON.stringify(i)))), u = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c), "/*# ".concat(u, " */")), a = r.sources.map(function(e) {
                                    return "/*# sourceURL=".concat(r.sourceRoot || "").concat(e, " */");
                                });
                                return [
                                    n
                                ].concat(a).concat([
                                    o
                                ]).join("\n");
                            }
                            var i, c, u;
                            return [
                                n
                            ].join("\n");
                        }(t, e);
                        return t[2] ? "@media ".concat(t[2], " {").concat(n, "}") : n;
                    }).join("");
                }, t.i = function(e, n, r) {
                    "string" == typeof e && (e = [
                        [
                            null,
                            e,
                            ""
                        ]
                    ]);
                    var o = {};
                    if (r) for(var a = 0; a < this.length; a++){
                        var i = this[a][0];
                        null != i && (o[i] = !0);
                    }
                    for(var c = 0; c < e.length; c++){
                        var u = [].concat(e[c]);
                        r && o[u[0]] || (n && (u[2] ? u[2] = "".concat(n, " and ").concat(u[2]) : u[2] = n), t.push(u));
                    }
                }, t;
            };
        },
        function(e, t, n) {
            "use strict";
            n.r(t), t.default = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0.2 -0.3 9 11.4" width="12" height="14">\n  <path d="M0 2.77V.92A1 1 0 01.2.28C.35.1.56 0 .83 0h7.66c.28.01.48.1.63.28.14.17.21.38.21.64v1.85c0 .26-.08.48-.23.66-.15.17-.37.26-.66.26-.28 0-.5-.09-.64-.26a1 1 0 01-.21-.66V1.69H5.6v7.58h.5c.25 0 .45.08.6.23.17.16.25.35.25.6s-.08.45-.24.6a.87.87 0 01-.62.22H3.21a.87.87 0 01-.61-.22.78.78 0 01-.24-.6c0-.25.08-.44.24-.6a.85.85 0 01.61-.23h.5V1.7H1.73v1.08c0 .26-.08.48-.23.66-.15.17-.37.26-.66.26-.28 0-.5-.09-.64-.26A1 1 0 010 2.77z"/>\n</svg>\n';
        }
    ]);
});

},{}],"fzjCu":[function(require,module,exports) {
!function(t, e) {
    module.exports = e();
}(window, function() {
    return function(t) {
        var e = {};
        function n(r) {
            if (e[r]) return e[r].exports;
            var o = e[r] = {
                i: r,
                l: !1,
                exports: {}
            };
            return t[r].call(o.exports, o, o.exports, n), o.l = !0, o.exports;
        }
        return n.m = t, n.c = e, n.d = function(t, e, r) {
            n.o(t, e) || Object.defineProperty(t, e, {
                enumerable: !0,
                get: r
            });
        }, n.r = function(t) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
                value: "Module"
            }), Object.defineProperty(t, "__esModule", {
                value: !0
            });
        }, n.t = function(t, e) {
            if (1 & e && (t = n(t)), 8 & e) return t;
            if (4 & e && "object" == typeof t && t && t.__esModule) return t;
            var r = Object.create(null);
            if (n.r(r), Object.defineProperty(r, "default", {
                enumerable: !0,
                value: t
            }), 2 & e && "string" != typeof t) for(var o in t)n.d(r, o, (function(e) {
                return t[e];
            }).bind(null, o));
            return r;
        }, n.n = function(t) {
            var e = t && t.__esModule ? function() {
                return t.default;
            } : function() {
                return t;
            };
            return n.d(e, "a", e), e;
        }, n.o = function(t, e) {
            return Object.prototype.hasOwnProperty.call(t, e);
        }, n.p = "/", n(n.s = 0);
    }([
        function(t, e, n) {
            function r(t) {
                return function(t) {
                    if (Array.isArray(t)) {
                        for(var e = 0, n = new Array(t.length); e < t.length; e++)n[e] = t[e];
                        return n;
                    }
                }(t) || function(t) {
                    if (Symbol.iterator in Object(t) || "[object Arguments]" === Object.prototype.toString.call(t)) return Array.from(t);
                }(t) || function() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance");
                }();
            }
            function o(t, e) {
                for(var n = 0; n < e.length; n++){
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r);
                }
            }
            function i(t, e, n) {
                return e && o(t.prototype, e), n && o(t, n), t;
            }
            n(1).toString();
            var a = function() {
                function t(e) {
                    var n = e.data, r = e.config, o = e.api, i = e.readOnly;
                    !function(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                    }(this, t);
                    var a = t.ALIGNMENTS, s = t.DEFAULT_ALIGNMENT;
                    this.api = o, this.readOnly = i, this.quotePlaceholder = r.quotePlaceholder || t.DEFAULT_QUOTE_PLACEHOLDER, this.captionPlaceholder = r.captionPlaceholder || t.DEFAULT_CAPTION_PLACEHOLDER, this.data = {
                        text: n.text || "",
                        caption: n.caption || "",
                        alignment: Object.values(a).includes(n.alignment) && n.alignment || r.defaultAlignment || s
                    };
                }
                return i(t, [
                    {
                        key: "CSS",
                        get: function() {
                            return {
                                baseClass: this.api.styles.block,
                                wrapper: "cdx-quote",
                                text: "cdx-quote__text",
                                input: this.api.styles.input,
                                caption: "cdx-quote__caption",
                                settingsWrapper: "cdx-quote-settings",
                                settingsButton: this.api.styles.settingsButton,
                                settingsButtonActive: this.api.styles.settingsButtonActive
                            };
                        }
                    },
                    {
                        key: "settings",
                        get: function() {
                            return [
                                {
                                    name: "left",
                                    icon: '<svg width="16" height="11" viewBox="0 0 16 11" xmlns="http://www.w3.org/2000/svg" ><path d="M1.069 0H13.33a1.069 1.069 0 0 1 0 2.138H1.07a1.069 1.069 0 1 1 0-2.138zm0 4.275H9.03a1.069 1.069 0 1 1 0 2.137H1.07a1.069 1.069 0 1 1 0-2.137zm0 4.275h9.812a1.069 1.069 0 0 1 0 2.137H1.07a1.069 1.069 0 0 1 0-2.137z" /></svg>'
                                },
                                {
                                    name: "center",
                                    icon: '<svg width="16" height="11" viewBox="0 0 16 11" xmlns="http://www.w3.org/2000/svg" ><path d="M1.069 0H13.33a1.069 1.069 0 0 1 0 2.138H1.07a1.069 1.069 0 1 1 0-2.138zm3.15 4.275h5.962a1.069 1.069 0 0 1 0 2.137H4.22a1.069 1.069 0 1 1 0-2.137zM1.069 8.55H13.33a1.069 1.069 0 0 1 0 2.137H1.07a1.069 1.069 0 0 1 0-2.137z"/></svg>'
                                }
                            ];
                        }
                    }
                ], [
                    {
                        key: "isReadOnlySupported",
                        get: function() {
                            return !0;
                        }
                    },
                    {
                        key: "toolbox",
                        get: function() {
                            return {
                                icon: '<svg width="15" height="14" viewBox="0 0 15 14" xmlns="http://www.w3.org/2000/svg"><path d="M13.53 6.185l.027.025a1.109 1.109 0 0 1 0 1.568l-5.644 5.644a1.109 1.109 0 1 1-1.569-1.568l4.838-4.837L6.396 2.23A1.125 1.125 0 1 1 7.986.64l5.52 5.518.025.027zm-5.815 0l.026.025a1.109 1.109 0 0 1 0 1.568l-5.644 5.644a1.109 1.109 0 1 1-1.568-1.568l4.837-4.837L.58 2.23A1.125 1.125 0 0 1 2.171.64L7.69 6.158l.025.027z" /></svg>',
                                title: "Quote"
                            };
                        }
                    },
                    {
                        key: "contentless",
                        get: function() {
                            return !0;
                        }
                    },
                    {
                        key: "enableLineBreaks",
                        get: function() {
                            return !0;
                        }
                    },
                    {
                        key: "DEFAULT_QUOTE_PLACEHOLDER",
                        get: function() {
                            return "Enter a quote";
                        }
                    },
                    {
                        key: "DEFAULT_CAPTION_PLACEHOLDER",
                        get: function() {
                            return "Enter a caption";
                        }
                    },
                    {
                        key: "ALIGNMENTS",
                        get: function() {
                            return {
                                left: "left",
                                center: "center"
                            };
                        }
                    },
                    {
                        key: "DEFAULT_ALIGNMENT",
                        get: function() {
                            return t.ALIGNMENTS.left;
                        }
                    },
                    {
                        key: "conversionConfig",
                        get: function() {
                            return {
                                import: "text",
                                export: function(t) {
                                    return t.caption ? "".concat(t.text, " — ").concat(t.caption) : t.text;
                                }
                            };
                        }
                    }
                ]), i(t, [
                    {
                        key: "render",
                        value: function() {
                            var t = this._make("blockquote", [
                                this.CSS.baseClass,
                                this.CSS.wrapper
                            ]), e = this._make("div", [
                                this.CSS.input,
                                this.CSS.text
                            ], {
                                contentEditable: !this.readOnly,
                                innerHTML: this.data.text
                            }), n = this._make("div", [
                                this.CSS.input,
                                this.CSS.caption
                            ], {
                                contentEditable: !this.readOnly,
                                innerHTML: this.data.caption
                            });
                            return e.dataset.placeholder = this.quotePlaceholder, n.dataset.placeholder = this.captionPlaceholder, t.appendChild(e), t.appendChild(n), t;
                        }
                    },
                    {
                        key: "save",
                        value: function(t) {
                            var e = t.querySelector(".".concat(this.CSS.text)), n = t.querySelector(".".concat(this.CSS.caption));
                            return Object.assign(this.data, {
                                text: e.innerHTML,
                                caption: n.innerHTML
                            });
                        }
                    },
                    {
                        key: "renderSettings",
                        value: function() {
                            var t = this, e = this._make("div", [
                                this.CSS.settingsWrapper
                            ], {});
                            return this.settings.map(function(n) {
                                var r, o = t._make("div", t.CSS.settingsButton, {
                                    innerHTML: n.icon,
                                    title: "".concat((r = n.name, r[0].toUpperCase() + r.substr(1)), " alignment")
                                });
                                return o.classList.toggle(t.CSS.settingsButtonActive, n.name === t.data.alignment), e.appendChild(o), o;
                            }).forEach(function(e, n, r) {
                                e.addEventListener("click", function() {
                                    t._toggleTune(t.settings[n].name), r.forEach(function(e, n) {
                                        var r = t.settings[n].name;
                                        e.classList.toggle(t.CSS.settingsButtonActive, r === t.data.alignment);
                                    });
                                });
                            }), e;
                        }
                    },
                    {
                        key: "_toggleTune",
                        value: function(t) {
                            this.data.alignment = t;
                        }
                    },
                    {
                        key: "_make",
                        value: function(t) {
                            var e, n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null, o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, i = document.createElement(t);
                            Array.isArray(n) ? (e = i.classList).add.apply(e, r(n)) : n && i.classList.add(n);
                            for(var a in o)i[a] = o[a];
                            return i;
                        }
                    }
                ], [
                    {
                        key: "sanitize",
                        get: function() {
                            return {
                                text: {
                                    br: !0
                                },
                                caption: {
                                    br: !0
                                },
                                alignment: {}
                            };
                        }
                    }
                ]), t;
            }();
            t.exports = a;
        },
        function(t, e, n) {
            var r = n(2);
            "string" == typeof r && (r = [
                [
                    t.i,
                    r,
                    ""
                ]
            ]);
            var o = {
                hmr: !0,
                transform: void 0,
                insertInto: void 0
            };
            n(4)(r, o);
            r.locals && (t.exports = r.locals);
        },
        function(t, e, n) {
            (t.exports = n(3)(!1)).push([
                t.i,
                ".cdx-quote-icon svg {\n  transform: rotate(180deg);\n}\n\n.cdx-quote {\n  margin: 0;\n}\n\n.cdx-quote__text {\n  min-height: 158px;\n  margin-bottom: 10px;\n}\n\n.cdx-quote__caption {}\n\n.cdx-quote [contentEditable=true][data-placeholder]::before{\n  position: absolute;\n  content: attr(data-placeholder);\n  color: #707684;\n  font-weight: normal;\n  opacity: 0;\n}\n\n.cdx-quote [contentEditable=true][data-placeholder]:empty::before {\n  opacity: 1;\n}\n\n.cdx-quote [contentEditable=true][data-placeholder]:empty:focus::before {\n  opacity: 0;\n}\n\n\n.cdx-quote-settings {\n  display: flex;\n}\n\n.cdx-quote-settings .cdx-settings-button {\n  width: 50%;\n}\n",
                ""
            ]);
        },
        function(t, e) {
            t.exports = function(t) {
                var e = [];
                return e.toString = function() {
                    return this.map(function(e) {
                        var n = function(t, e) {
                            var n = t[1] || "", r = t[3];
                            if (!r) return n;
                            if (e && "function" == typeof btoa) {
                                var o = (a = r, "/*# sourceMappingURL=data:application/json;charset=utf-8;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(a)))) + " */"), i = r.sources.map(function(t) {
                                    return "/*# sourceURL=" + r.sourceRoot + t + " */";
                                });
                                return [
                                    n
                                ].concat(i).concat([
                                    o
                                ]).join("\n");
                            }
                            var a;
                            return [
                                n
                            ].join("\n");
                        }(e, t);
                        return e[2] ? "@media " + e[2] + "{" + n + "}" : n;
                    }).join("");
                }, e.i = function(t, n) {
                    "string" == typeof t && (t = [
                        [
                            null,
                            t,
                            ""
                        ]
                    ]);
                    for(var r = {}, o = 0; o < this.length; o++){
                        var i = this[o][0];
                        "number" == typeof i && (r[i] = !0);
                    }
                    for(o = 0; o < t.length; o++){
                        var a = t[o];
                        "number" == typeof a[0] && r[a[0]] || (n && !a[2] ? a[2] = n : n && (a[2] = "(" + a[2] + ") and (" + n + ")"), e.push(a));
                    }
                }, e;
            };
        },
        function(t, e, n) {
            var r, o, i = {}, a = (r = function() {
                return window && document && document.all && !window.atob;
            }, function() {
                return void 0 === o && (o = r.apply(this, arguments)), o;
            }), s = function(t) {
                var e = {};
                return function(t) {
                    if ("function" == typeof t) return t();
                    if (void 0 === e[t]) {
                        var n = (function(t) {
                            return document.querySelector(t);
                        }).call(this, t);
                        if (window.HTMLIFrameElement && n instanceof window.HTMLIFrameElement) try {
                            n = n.contentDocument.head;
                        } catch (t1) {
                            n = null;
                        }
                        e[t] = n;
                    }
                    return e[t];
                };
            }(), c = null, u = 0, l = [], f = n(5);
            function p(t, e) {
                for(var n = 0; n < t.length; n++){
                    var r = t[n], o = i[r.id];
                    if (o) {
                        o.refs++;
                        for(var a = 0; a < o.parts.length; a++)o.parts[a](r.parts[a]);
                        for(; a < r.parts.length; a++)o.parts.push(m(r.parts[a], e));
                    } else {
                        var s = [];
                        for(a = 0; a < r.parts.length; a++)s.push(m(r.parts[a], e));
                        i[r.id] = {
                            id: r.id,
                            refs: 1,
                            parts: s
                        };
                    }
                }
            }
            function d(t, e) {
                for(var n = [], r = {}, o = 0; o < t.length; o++){
                    var i = t[o], a = e.base ? i[0] + e.base : i[0], s = {
                        css: i[1],
                        media: i[2],
                        sourceMap: i[3]
                    };
                    r[a] ? r[a].parts.push(s) : n.push(r[a] = {
                        id: a,
                        parts: [
                            s
                        ]
                    });
                }
                return n;
            }
            function h(t, e) {
                var n = s(t.insertInto);
                if (!n) throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
                var r = l[l.length - 1];
                if ("top" === t.insertAt) r ? r.nextSibling ? n.insertBefore(e, r.nextSibling) : n.appendChild(e) : n.insertBefore(e, n.firstChild), l.push(e);
                else if ("bottom" === t.insertAt) n.appendChild(e);
                else {
                    if ("object" != typeof t.insertAt || !t.insertAt.before) throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");
                    var o = s(t.insertInto + " " + t.insertAt.before);
                    n.insertBefore(e, o);
                }
            }
            function g(t) {
                if (null === t.parentNode) return !1;
                t.parentNode.removeChild(t);
                var e = l.indexOf(t);
                e >= 0 && l.splice(e, 1);
            }
            function v(t) {
                var e = document.createElement("style");
                return void 0 === t.attrs.type && (t.attrs.type = "text/css"), y(e, t.attrs), h(t, e), e;
            }
            function y(t, e) {
                Object.keys(e).forEach(function(n) {
                    t.setAttribute(n, e[n]);
                });
            }
            function m(t, e) {
                var n, r, o, i;
                if (e.transform && t.css) {
                    if (!(i = e.transform(t.css))) return function() {};
                    t.css = i;
                }
                if (e.singleton) {
                    var a = u++;
                    n = c || (c = v(e)), r = w.bind(null, n, a, !1), o = w.bind(null, n, a, !0);
                } else t.sourceMap && "function" == typeof URL && "function" == typeof URL.createObjectURL && "function" == typeof URL.revokeObjectURL && "function" == typeof Blob && "function" == typeof btoa ? (n = function(t) {
                    var e = document.createElement("link");
                    return void 0 === t.attrs.type && (t.attrs.type = "text/css"), t.attrs.rel = "stylesheet", y(e, t.attrs), h(t, e), e;
                }(e), r = (function(t, e, n) {
                    var r = n.css, o = n.sourceMap, i = void 0 === e.convertToAbsoluteUrls && o;
                    (e.convertToAbsoluteUrls || i) && (r = f(r));
                    o && (r += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(o)))) + " */");
                    var a = new Blob([
                        r
                    ], {
                        type: "text/css"
                    }), s = t.href;
                    t.href = URL.createObjectURL(a), s && URL.revokeObjectURL(s);
                }).bind(null, n, e), o = function() {
                    g(n), n.href && URL.revokeObjectURL(n.href);
                }) : (n = v(e), r = (function(t, e) {
                    var n = e.css, r = e.media;
                    r && t.setAttribute("media", r);
                    if (t.styleSheet) t.styleSheet.cssText = n;
                    else {
                        for(; t.firstChild;)t.removeChild(t.firstChild);
                        t.appendChild(document.createTextNode(n));
                    }
                }).bind(null, n), o = function() {
                    g(n);
                });
                return r(t), function(e) {
                    if (e) {
                        if (e.css === t.css && e.media === t.media && e.sourceMap === t.sourceMap) return;
                        r(t = e);
                    } else o();
                };
            }
            t.exports = function(t, e) {
                if ("undefined" != typeof DEBUG && DEBUG && "object" != typeof document) throw new Error("The style-loader cannot be used in a non-browser environment");
                (e = e || {}).attrs = "object" == typeof e.attrs ? e.attrs : {}, e.singleton || "boolean" == typeof e.singleton || (e.singleton = a()), e.insertInto || (e.insertInto = "head"), e.insertAt || (e.insertAt = "bottom");
                var n = d(t, e);
                return p(n, e), function(t) {
                    for(var r = [], o = 0; o < n.length; o++){
                        var a = n[o];
                        (s = i[a.id]).refs--, r.push(s);
                    }
                    t && p(d(t, e), e);
                    for(o = 0; o < r.length; o++){
                        var s;
                        if (0 === (s = r[o]).refs) {
                            for(var c = 0; c < s.parts.length; c++)s.parts[c]();
                            delete i[s.id];
                        }
                    }
                };
            };
            var b, x = (b = [], function(t, e) {
                return b[t] = e, b.filter(Boolean).join("\n");
            });
            function w(t, e, n, r) {
                var o = n ? "" : r.css;
                if (t.styleSheet) t.styleSheet.cssText = x(e, o);
                else {
                    var i = document.createTextNode(o), a = t.childNodes;
                    a[e] && t.removeChild(a[e]), a.length ? t.insertBefore(i, a[e]) : t.appendChild(i);
                }
            }
        },
        function(t, e) {
            t.exports = function(t) {
                var e = "undefined" != typeof window && window.location;
                if (!e) throw new Error("fixUrls requires window.location");
                if (!t || "string" != typeof t) return t;
                var n = e.protocol + "//" + e.host, r = n + e.pathname.replace(/\/[^\/]*$/, "/");
                return t.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(t, e) {
                    var o, i = e.trim().replace(/^"(.*)"$/, function(t, e) {
                        return e;
                    }).replace(/^'(.*)'$/, function(t, e) {
                        return e;
                    });
                    return /^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(i) ? t : (o = 0 === i.indexOf("//") ? i : 0 === i.indexOf("/") ? n + i : r + i.replace(/^\.\//, ""), "url(" + JSON.stringify(o) + ")");
                });
            };
        }
    ]);
});

},{}],"cX815":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>KubikMedia);
var _mediaContainer = require("./templates/media_container");
class KubikMedia {
    static get toolbox() {
        return {
            title: "Image",
            icon: '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewbox="2,2,16,16"><path d="M4.646 17.396q-.875 0-1.458-.594-.584-.594-.584-1.448V4.646q0-.854.584-1.448.583-.594 1.458-.594h10.708q.875 0 1.458.594.584.594.584 1.448v10.708q0 .854-.584 1.448-.583.594-1.458.594Zm.646-3.25h9.416L11.5 9.771l-2.25 3-1.5-2Z"/></svg>'
        };
    }
    render() {
        const wrapper = (0, _mediaContainer.mediaContainer)(this.data);
        wrapper.classList.add("simple-image");
        return wrapper;
    }
    save(blockContent) {}
    validate(savedData) {
        return true;
    }
    constructor({ data  }){
        this.data = data;
    }
}

},{"./templates/media_container":"ZIxPA","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"ZIxPA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "mediaContainer", ()=>mediaContainer);
var _templateGenerationTools = require("./template_generation_tools");
var _tabbedControls = require("./tabbed_controls");
const mediaContainer = function mediaContainer(data = {}) {
    const wrapper = (0, _templateGenerationTools.makeElement)("div", [
        "kubik_media_wrapper",
        "kubik-wysiwyg-component"
    ], {
        "data-controller": "media-widget",
        id: "test-wi"
    });
    const imageContents = (0, _templateGenerationTools.makeElement)("div", [
        "kubik_media_image_wrapper"
    ]);
    const imageContentsLabel = (0, _templateGenerationTools.makeElement)("div", [
        "kubik_media_image_label"
    ], {
        "src": "/admin/kubik_media_uploads?modal=true",
        "data-kubik-modal-header-text": "Select images",
        "data-kubik-modal-action": "return",
        "data-kubik-modal-return-controller": "media-widget#test-wi",
        "data-action": "click->kubik-modal#openModal"
    });
    imageContentsLabel.innerText = "Add image hello";
    imageContents.appendChild(imageContentsLabel);
    const tabs = (0, _tabbedControls.tabbedControls)("media_type", [
        {
            key: "image",
            label: "Image",
            contents: imageContents
        },
        {
            key: "video",
            label: "type"
        }
    ]);
    wrapper.appendChild(tabs);
    return wrapper;
};

},{"./template_generation_tools":"3vp0p","./tabbed_controls":"axxVe","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"3vp0p":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeElement", ()=>makeElement);
const makeElement = function make(tagName, classNames = null, attributes = {}) {
    const el = document.createElement(tagName);
    if (Array.isArray(classNames)) el.classList.add(...classNames);
    else if (classNames) el.classList.add(classNames);
    for(const attrName in attributes)el.setAttribute(attrName, attributes[attrName]);
    return el;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"axxVe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "tabbedControls", ()=>tabbedControls);
var _templateGenerationTools = require("./template_generation_tools");
const tabbedControls = function tabbedControls(name, options = {}, selectedValue = "") {
    const tabsContainer = (0, _templateGenerationTools.makeElement)("div", [
        "kubik-wysiwyg-tabs-container"
    ]);
    const tabsContent = (0, _templateGenerationTools.makeElement)("div", [
        "kubik-wysiwyg-tabs-content"
    ]);
    options.forEach(function(option, index) {
        const id = `${name}-${option.key}`;
        const label = (0, _templateGenerationTools.makeElement)("label", "kubik-wysiwyg-tab-label", {
            htmlFor: id
        });
        const opt = (0, _templateGenerationTools.makeElement)("input", "kubik-wysiwyg-tab-input", {
            id: id,
            type: "radio",
            value: option.key,
            name: name
        });
        if (selectedValue !== "") opt.checked = option.key == selectedValue;
        else opt.checked = index == 0;
        let contents = option.contents;
        if (typeof option.contents === "undefined") contents = (0, _templateGenerationTools.makeElement)("span");
        else option.contents.classList.add("kubik-wysiwyg-tab-content");
        label.innerText = option.label;
        tabsContainer.appendChild(opt);
        tabsContainer.appendChild(label);
        tabsContainer.appendChild(contents);
    });
    return tabsContainer;
};

},{"./template_generation_tools":"3vp0p","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"hiuVf":[function(require,module,exports) {
(function webpackUniversalModuleDefinition(root, factory) {
    module.exports = factory();
})(window, function() {
    return /******/ function(modules) {
        /******/ // The module cache
        /******/ var installedModules = {};
        /******/ /******/ // The require function
        /******/ function __webpack_require__(moduleId) {
            /******/ /******/ // Check if module is in cache
            /******/ if (installedModules[moduleId]) /******/ return installedModules[moduleId].exports;
            /******/ // Create a new module (and put it into the cache)
            /******/ var module1 = installedModules[moduleId] = {
                /******/ i: moduleId,
                /******/ l: false,
                /******/ exports: {}
            };
            /******/ /******/ // Execute the module function
            /******/ modules[moduleId].call(module1.exports, module1, module1.exports, __webpack_require__);
            /******/ /******/ // Flag the module as loaded
            /******/ module1.l = true;
            /******/ /******/ // Return the exports of the module
            /******/ return module1.exports;
        /******/ }
        /******/ /******/ /******/ // expose the modules object (__webpack_modules__)
        /******/ __webpack_require__.m = modules;
        /******/ /******/ // expose the module cache
        /******/ __webpack_require__.c = installedModules;
        /******/ /******/ // define getter function for harmony exports
        /******/ __webpack_require__.d = function(exports, name, getter) {
            /******/ if (!__webpack_require__.o(exports, name)) /******/ Object.defineProperty(exports, name, {
                enumerable: true,
                get: getter
            });
        /******/ };
        /******/ /******/ // define __esModule on exports
        /******/ __webpack_require__.r = function(exports) {
            /******/ if (typeof Symbol !== "undefined" && Symbol.toStringTag) /******/ Object.defineProperty(exports, Symbol.toStringTag, {
                value: "Module"
            });
            /******/ Object.defineProperty(exports, "__esModule", {
                value: true
            });
        /******/ };
        /******/ /******/ // create a fake namespace object
        /******/ // mode & 1: value is a module id, require it
        /******/ // mode & 2: merge all properties of value into the ns
        /******/ // mode & 4: return value when already ns object
        /******/ // mode & 8|1: behave like require
        /******/ __webpack_require__.t = function(value, mode) {
            /******/ if (mode & 1) value = __webpack_require__(value);
            /******/ if (mode & 8) return value;
            /******/ if (mode & 4 && typeof value === "object" && value && value.__esModule) return value;
            /******/ var ns = Object.create(null);
            /******/ __webpack_require__.r(ns);
            /******/ Object.defineProperty(ns, "default", {
                enumerable: true,
                value: value
            });
            /******/ if (mode & 2 && typeof value != "string") for(var key in value)__webpack_require__.d(ns, key, (function(key) {
                return value[key];
            }).bind(null, key));
            /******/ return ns;
        /******/ };
        /******/ /******/ // getDefaultExport function for compatibility with non-harmony modules
        /******/ __webpack_require__.n = function(module1) {
            /******/ var getter = module1 && module1.__esModule ? /******/ function getDefault() {
                return module1["default"];
            } : /******/ function getModuleExports() {
                return module1;
            };
            /******/ __webpack_require__.d(getter, "a", getter);
            /******/ return getter;
        /******/ };
        /******/ /******/ // Object.prototype.hasOwnProperty.call
        /******/ __webpack_require__.o = function(object, property) {
            return Object.prototype.hasOwnProperty.call(object, property);
        };
        /******/ /******/ // __webpack_public_path__
        /******/ __webpack_require__.p = "/";
        /******/ /******/ /******/ // Load entry module and return exports
        /******/ return __webpack_require__(__webpack_require__.s = "./src/Hyperlink.js");
    /******/ }({
        /***/ "./node_modules/css-loader/dist/cjs.js!./src/Hyperlink.css": /*!*****************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/Hyperlink.css ***!
  \*****************************************************************/ /*! no static exports found */ /***/ function(module, exports, __webpack_require__) {
            eval('// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.i, ".ce-inline-tool-hyperlink-wrapper {\\r\\n    outline: none;\\r\\n    border: 0;\\r\\n    border-radius: 0 0 4px 4px;\\r\\n    margin: 0;\\r\\n    font-size: 13px;\\r\\n    padding: 10px;\\r\\n    width: 100%;\\r\\n    -webkit-box-sizing: border-box;\\r\\n    box-sizing: border-box;\\r\\n    display: none;\\r\\n    font-weight: 500;\\r\\n    border-top: 1px solid rgba(201,201,204,.48);\\r\\n}\\r\\n\\r\\n.ce-inline-tool-hyperlink-wrapper.ce-inline-tool-hyperlink-wrapper--showed {\\r\\n    display: block;\\r\\n}\\r\\n\\r\\n.ce-inline-tool-hyperlink--input,\\r\\n.ce-inline-tool-hyperlink--select-target,\\r\\n.ce-inline-tool-hyperlink--select-rel {\\r\\n    border: 1px solid rgba(201,201,204,.48);\\r\\n    -webkit-box-shadow: inset 0 1px 2px 0 rgba(35,44,72,.06);\\r\\n    box-shadow: inset 0 1px 2px 0 rgba(35,44,72,.06);\\r\\n    border-radius: 5px;\\r\\n    padding: 5px 8px;\\r\\n    margin-bottom: 10px;\\r\\n    outline: none;\\r\\n    width: 100%;\\r\\n    -webkit-box-sizing: border-box;\\r\\n    box-sizing: border-box;\\r\\n}\\r\\n\\r\\n.ce-inline-tool-hyperlink--select-target,\\r\\n.ce-inline-tool-hyperlink--select-rel {\\r\\n    width: 48%;\\r\\n    display: inline-block;\\r\\n}\\r\\n.ce-inline-tool-hyperlink--select-target {\\r\\n    margin-right: 2%;\\r\\n}\\r\\n.ce-inline-tool-hyperlink--select-rel {\\r\\n    margin-left: 2%;\\r\\n}\\r\\n\\r\\n.ce-inline-tool-hyperlink--button {\\r\\n    display: block;\\r\\n    width: 100%;\\r\\n    background-color: #34c38f;\\r\\n    color: #fff;\\r\\n    padding: 7px 0;\\r\\n    border: none;\\r\\n    text-align: center;\\r\\n    text-decoration: none;\\r\\n    font-size: 16px;\\r\\n    border-radius: 5px;\\r\\n    cursor: pointer;\\r\\n}\\r\\n", ""]);\n// Exports\nmodule.exports = exports;\n\n\n//# sourceURL=webpack://Hyperlink/./src/Hyperlink.css?./node_modules/css-loader/dist/cjs.js');
        /***/ },
        /***/ "./node_modules/css-loader/dist/runtime/api.js": /*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/ /*! no static exports found */ /***/ function(module, exports, __webpack_require__) {
            "use strict";
            eval('\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return "@media ".concat(item[2], " {").concat(content, "}");\n      }\n\n      return content;\n    }).join(\'\');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === \'string\') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \'\']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || \'\'; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === \'function\') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return "/*# sourceURL=".concat(cssMapping.sourceRoot || \'\').concat(source, " */");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\'\\n\');\n  }\n\n  return [content].join(\'\\n\');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);\n  return "/*# ".concat(data, " */");\n}\n\n//# sourceURL=webpack://Hyperlink/./node_modules/css-loader/dist/runtime/api.js?');
        /***/ },
        /***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js": /*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/ /*! no static exports found */ /***/ function(module, exports, __webpack_require__) {
            "use strict";
            eval("\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : undefined;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://Hyperlink/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");
        /***/ },
        /***/ "./src/Hyperlink.css": /*!***************************!*\
  !*** ./src/Hyperlink.css ***!
  \***************************/ /*! no static exports found */ /***/ function(module, exports, __webpack_require__) {
            eval('var api = __webpack_require__(/*! ../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");\n            var content = __webpack_require__(/*! !../node_modules/css-loader/dist/cjs.js!./Hyperlink.css */ "./node_modules/css-loader/dist/cjs.js!./src/Hyperlink.css");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === \'string\') {\n              content = [[module.i, content, \'\']];\n            }\n\nvar options = {};\n\noptions.insert = "head";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};\n\n//# sourceURL=webpack://Hyperlink/./src/Hyperlink.css?');
        /***/ },
        /***/ "./src/Hyperlink.js": /*!**************************!*\
  !*** ./src/Hyperlink.js ***!
  \**************************/ /*! exports provided: default */ /***/ function(module, __webpack_exports__, __webpack_require__) {
            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Hyperlink; });\n/* harmony import */ var _SelectionUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SelectionUtils */ \"./src/SelectionUtils.js\");\n/* harmony import */ var _Hyperlink_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Hyperlink.css */ \"./src/Hyperlink.css\");\n/* harmony import */ var _Hyperlink_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_Hyperlink_css__WEBPACK_IMPORTED_MODULE_1__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar Hyperlink = /*#__PURE__*/function () {\n  function Hyperlink(_ref) {\n    var data = _ref.data,\n        config = _ref.config,\n        api = _ref.api,\n        readOnly = _ref.readOnly;\n\n    _classCallCheck(this, Hyperlink);\n\n    this.toolbar = api.toolbar;\n    this.inlineToolbar = api.inlineToolbar;\n    this.tooltip = api.tooltip;\n    this.i18n = api.i18n;\n    this.config = config;\n    this.selection = new _SelectionUtils__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n    this.commandLink = 'createLink';\n    this.commandUnlink = 'unlink';\n    this.CSS = {\n      wrapper: 'ce-inline-tool-hyperlink-wrapper',\n      wrapperShowed: 'ce-inline-tool-hyperlink-wrapper--showed',\n      button: 'ce-inline-tool',\n      buttonActive: 'ce-inline-tool--active',\n      buttonModifier: 'ce-inline-tool--link',\n      buttonUnlink: 'ce-inline-tool--unlink',\n      input: 'ce-inline-tool-hyperlink--input',\n      selectTarget: 'ce-inline-tool-hyperlink--select-target',\n      selectRel: 'ce-inline-tool-hyperlink--select-rel',\n      buttonSave: 'ce-inline-tool-hyperlink--button'\n    };\n    this.targetAttributes = this.config.availableTargets || ['_blank', // Opens the linked document in a new window or tab\n    '_self', // Opens the linked document in the same frame as it was clicked (this is default)\n    '_parent', // Opens the linked document in the parent frame\n    '_top' // Opens the linked document in the full body of the window\n    ];\n    this.relAttributes = this.config.availableRels || ['alternate', //Provides a link to an alternate representation of the document (i.e. print page, translated or mirror)\n    'author', //Provides a link to the author of the document\n    'bookmark', //Permanent URL used for bookmarking\n    'external', //Indicates that the referenced document is not part of the same site as the current document\n    'help', //Provides a link to a help document\n    'license', //Provides a link to licensing information for the document\n    'next', //Provides a link to the next document in the series\n    'nofollow', //Links to an unendorsed document, like a paid link. (\"nofollow\" is used by Google, to specify that the Google search spider should not follow that link)\n    'noreferrer', //Requires that the browser should not send an HTTP referer header if the user follows the hyperlink\n    'noopener', //Requires that any browsing context created by following the hyperlink must not have an opener browsing context\n    'prev', //The previous document in a selection\n    'search', //Links to a search tool for the document\n    'tag' //A tag (keyword) for the current document\n    ];\n    this.nodes = {\n      button: null,\n      wrapper: null,\n      input: null,\n      selectTarget: null,\n      selectRel: null,\n      buttonSave: null\n    };\n    this.inputOpened = false;\n  }\n\n  _createClass(Hyperlink, [{\n    key: \"render\",\n    value: function render() {\n      this.nodes.button = document.createElement('button');\n      this.nodes.button.type = 'button';\n      this.nodes.button.classList.add(this.CSS.button, this.CSS.buttonModifier);\n      this.nodes.button.appendChild(this.iconSvg('link', 14, 10));\n      this.nodes.button.appendChild(this.iconSvg('unlink', 15, 11));\n      return this.nodes.button;\n    }\n  }, {\n    key: \"renderActions\",\n    value: function renderActions() {\n      var _this = this;\n\n      this.nodes.wrapper = document.createElement('div');\n      this.nodes.wrapper.classList.add(this.CSS.wrapper); // Input\n\n      this.nodes.input = document.createElement('input');\n      this.nodes.input.placeholder = 'https://...';\n      this.nodes.input.classList.add(this.CSS.input);\n      var i; // Target\n\n      this.nodes.selectTarget = document.createElement('select');\n      this.nodes.selectTarget.classList.add(this.CSS.selectTarget);\n      this.addOption(this.nodes.selectTarget, this.i18n.t('Select target'), '');\n\n      for (i = 0; i < this.targetAttributes.length; i++) {\n        this.addOption(this.nodes.selectTarget, this.targetAttributes[i], this.targetAttributes[i]);\n      }\n\n      if (!!this.config.target) {\n        this.nodes.selectTarget.value = this.config.target;\n      } // Rel\n\n\n      this.nodes.selectRel = document.createElement('select');\n      this.nodes.selectRel.classList.add(this.CSS.selectRel);\n      this.addOption(this.nodes.selectRel, this.i18n.t('Select rel'), '');\n\n      for (i = 0; i < this.relAttributes.length; i++) {\n        this.addOption(this.nodes.selectRel, this.relAttributes[i], this.relAttributes[i]);\n      }\n\n      if (!!this.config.rel) {\n        this.nodes.selectRel.value = this.config.rel;\n      } // Button\n\n\n      this.nodes.buttonSave = document.createElement('button');\n      this.nodes.buttonSave.type = 'button';\n      this.nodes.buttonSave.classList.add(this.CSS.buttonSave);\n      this.nodes.buttonSave.innerHTML = this.i18n.t('Save');\n      this.nodes.buttonSave.addEventListener('click', function (event) {\n        _this.savePressed(event);\n      }); // append\n\n      this.nodes.wrapper.appendChild(this.nodes.input);\n      this.nodes.wrapper.appendChild(this.nodes.selectTarget);\n      this.nodes.wrapper.appendChild(this.nodes.selectRel);\n      this.nodes.wrapper.appendChild(this.nodes.buttonSave);\n      return this.nodes.wrapper;\n    }\n  }, {\n    key: \"surround\",\n    value: function surround(range) {\n      if (range) {\n        if (!this.inputOpened) {\n          this.selection.setFakeBackground();\n          this.selection.save();\n        } else {\n          this.selection.restore();\n          this.selection.removeFakeBackground();\n        }\n\n        var parentAnchor = this.selection.findParentTag('A');\n\n        if (parentAnchor) {\n          this.selection.expandToTag(parentAnchor);\n          this.unlink();\n          this.closeActions();\n          this.checkState();\n          this.toolbar.close();\n          return;\n        }\n      }\n\n      this.toggleActions();\n    }\n  }, {\n    key: \"checkState\",\n    value: function checkState() {\n      var selection = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var anchorTag = this.selection.findParentTag('A');\n\n      if (anchorTag) {\n        this.nodes.button.classList.add(this.CSS.buttonUnlink);\n        this.nodes.button.classList.add(this.CSS.buttonActive);\n        this.openActions();\n        var hrefAttr = anchorTag.getAttribute('href');\n        var targetAttr = anchorTag.getAttribute('target');\n        var relAttr = anchorTag.getAttribute('rel');\n        this.nodes.input.value = !!hrefAttr ? hrefAttr : '';\n        this.nodes.selectTarget.value = !!targetAttr ? targetAttr : '';\n        this.nodes.selectRel.value = !!relAttr ? relAttr : '';\n        this.selection.save();\n      } else {\n        this.nodes.button.classList.remove(this.CSS.buttonUnlink);\n        this.nodes.button.classList.remove(this.CSS.buttonActive);\n      }\n\n      return !!anchorTag;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.closeActions();\n    }\n  }, {\n    key: \"toggleActions\",\n    value: function toggleActions() {\n      if (!this.inputOpened) {\n        this.openActions(true);\n      } else {\n        this.closeActions(false);\n      }\n    }\n  }, {\n    key: \"openActions\",\n    value: function openActions() {\n      var needFocus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this.nodes.wrapper.classList.add(this.CSS.wrapperShowed);\n\n      if (needFocus) {\n        this.nodes.input.focus();\n      }\n\n      this.inputOpened = true;\n    }\n  }, {\n    key: \"closeActions\",\n    value: function closeActions() {\n      var clearSavedSelection = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (this.selection.isFakeBackgroundEnabled) {\n        var currentSelection = new _SelectionUtils__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n        currentSelection.save();\n        this.selection.restore();\n        this.selection.removeFakeBackground();\n        currentSelection.restore();\n      }\n\n      this.nodes.wrapper.classList.remove(this.CSS.wrapperShowed);\n      this.nodes.input.value = '';\n      this.nodes.selectTarget.value = '';\n      this.nodes.selectRel.value = '';\n\n      if (clearSavedSelection) {\n        this.selection.clearSaved();\n      }\n\n      this.inputOpened = false;\n    }\n  }, {\n    key: \"savePressed\",\n    value: function savePressed(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      event.stopImmediatePropagation();\n      var value = this.nodes.input.value || '';\n      var target = this.nodes.selectTarget.value || '';\n      var rel = this.nodes.selectRel.value || '';\n\n      if (!value.trim()) {\n        this.selection.restore();\n        this.unlink();\n        event.preventDefault();\n        this.closeActions();\n      } // if (!this.validateURL(value)) {\n      //     this.tooltip.show(this.nodes.input, 'Pasted link is not valid.', {\n      //         placement: 'top',\n      //     });\n      //     setTimeout(() => {\n      //         this.tooltip.hide();\n      //     }, 1000);\n      //     return;\n      // }\n\n\n      value = this.prepareLink(value);\n      this.selection.restore();\n      this.selection.removeFakeBackground();\n      this.insertLink(value, target, rel);\n      this.selection.collapseToEnd();\n      this.inlineToolbar.close();\n    }\n  }, {\n    key: \"validateURL\",\n    value: function validateURL(str) {\n      var pattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n      '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\n\n      return !!pattern.test(str);\n    }\n  }, {\n    key: \"prepareLink\",\n    value: function prepareLink(link) {\n      link = link.trim();\n      link = this.addProtocol(link);\n      return link;\n    }\n  }, {\n    key: \"addProtocol\",\n    value: function addProtocol(link) {\n      if (/^(\\w+):(\\/\\/)?/.test(link)) {\n        return link;\n      }\n\n      var isInternal = /^\\/[^/\\s]/.test(link),\n          isAnchor = link.substring(0, 1) === '#',\n          isProtocolRelative = /^\\/\\/[^/\\s]/.test(link);\n\n      if (!isInternal && !isAnchor && !isProtocolRelative) {\n        link = 'http://' + link;\n      }\n\n      return link;\n    }\n  }, {\n    key: \"insertLink\",\n    value: function insertLink(link) {\n      var target = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      var rel = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n      var anchorTag = this.selection.findParentTag('A');\n\n      if (anchorTag) {\n        this.selection.expandToTag(anchorTag);\n      } else {\n        document.execCommand(this.commandLink, false, link);\n        anchorTag = this.selection.findParentTag('A');\n      }\n\n      if (anchorTag) {\n        if (!!target) {\n          anchorTag['target'] = target;\n        } else {\n          anchorTag.removeAttribute('target');\n        }\n\n        if (!!rel) {\n          anchorTag['rel'] = rel;\n        } else {\n          anchorTag.removeAttribute('rel');\n        }\n      }\n    }\n  }, {\n    key: \"unlink\",\n    value: function unlink() {\n      document.execCommand(this.commandUnlink);\n    }\n  }, {\n    key: \"iconSvg\",\n    value: function iconSvg(name) {\n      var width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 14;\n      var height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 14;\n      var icon = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n      icon.classList.add('icon', 'icon--' + name);\n      icon.setAttribute('width', width + 'px');\n      icon.setAttribute('height', height + 'px');\n      icon.innerHTML = \"<use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"#\".concat(name, \"\\\"></use>\");\n      return icon;\n    }\n  }, {\n    key: \"addOption\",\n    value: function addOption(element, text) {\n      var value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var option = document.createElement('option');\n      option.text = text;\n      option.value = value;\n      element.add(option);\n    }\n  }, {\n    key: \"shortcut\",\n    get: function get() {\n      return this.config.shortcut || 'CMD+L';\n    }\n  }, {\n    key: \"title\",\n    get: function get() {\n      return 'Hyperlink';\n    }\n  }], [{\n    key: \"isInline\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"sanitize\",\n    get: function get() {\n      return {\n        a: {\n          href: true,\n          target: true,\n          rel: true\n        }\n      };\n    }\n  }]);\n\n  return Hyperlink;\n}();\n\n\n\n//# sourceURL=webpack://Hyperlink/./src/Hyperlink.js?");
        /***/ },
        /***/ "./src/SelectionUtils.js": /*!*******************************!*\
  !*** ./src/SelectionUtils.js ***!
  \*******************************/ /*! exports provided: default */ /***/ function(module, __webpack_exports__, __webpack_require__) {
            "use strict";
            eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return SelectionUtils; });\nfunction _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar SelectionUtils = /*#__PURE__*/function () {\n  function SelectionUtils() {\n    _classCallCheck(this, SelectionUtils);\n\n    this.selection = null;\n    this.savedSelectionRange = null;\n    this.isFakeBackgroundEnabled = false;\n    this.commandBackground = \'backColor\';\n    this.commandRemoveFormat = \'removeFormat\';\n  }\n\n  _createClass(SelectionUtils, [{\n    key: "isElement",\n    value: function isElement(node) {\n      return node && _typeof(node) === \'object\' && node.nodeType && node.nodeType === Node.ELEMENT_NODE;\n    }\n  }, {\n    key: "isContentEditable",\n    value: function isContentEditable(element) {\n      return element.contentEditable === \'true\';\n    }\n  }, {\n    key: "isNativeInput",\n    value: function isNativeInput(target) {\n      var nativeInputs = [\'INPUT\', \'TEXTAREA\'];\n      return target && target.tagName ? nativeInputs.includes(target.tagName) : false;\n    }\n  }, {\n    key: "canSetCaret",\n    value: function canSetCaret(target) {\n      var result = true;\n\n      if (this.isNativeInput(target)) {\n        switch (target.type) {\n          case \'file\':\n          case \'checkbox\':\n          case \'radio\':\n          case \'hidden\':\n          case \'submit\':\n          case \'button\':\n          case \'image\':\n          case \'reset\':\n            result = false;\n            break;\n\n          default:\n        }\n      } else {\n        result = this.isContentEditable(target);\n      }\n\n      return result;\n    }\n  }, {\n    key: "CSS",\n    value: function CSS() {\n      return {\n        editorWrapper: \'codex-editor\',\n        editorZone: \'codex-editor__redactor\'\n      };\n    }\n  }, {\n    key: "anchorNode",\n    value: function anchorNode() {\n      var selection = window.getSelection();\n      return selection ? selection.anchorNode : null;\n    }\n  }, {\n    key: "anchorElement",\n    value: function anchorElement() {\n      var selection = window.getSelection();\n\n      if (!selection) {\n        return null;\n      }\n\n      var anchorNode = selection.anchorNode;\n\n      if (!anchorNode) {\n        return null;\n      }\n\n      if (!this.isElement(anchorNode)) {\n        return anchorNode.parentElement;\n      } else {\n        return anchorNode;\n      }\n    }\n  }, {\n    key: "anchorOffset",\n    value: function anchorOffset() {\n      var selection = window.getSelection();\n      return selection ? selection.anchorOffset : null;\n    }\n  }, {\n    key: "isCollapsed",\n    value: function isCollapsed() {\n      var selection = window.getSelection();\n      return selection ? selection.isCollapsed : null;\n    }\n  }, {\n    key: "isAtEditor",\n    value: function isAtEditor() {\n      var selection = SelectionUtils.get();\n      var selectedNode = selection.anchorNode || selection.focusNode;\n\n      if (selectedNode && selectedNode.nodeType === Node.TEXT_NODE) {\n        selectedNode = selectedNode.parentNode;\n      }\n\n      var editorZone = null;\n\n      if (selectedNode) {\n        editorZone = selectedNode.closest(".".concat(SelectionUtils.CSS.editorZone));\n      }\n\n      return editorZone && editorZone.nodeType === Node.ELEMENT_NODE;\n    }\n  }, {\n    key: "isSelectionExists",\n    value: function isSelectionExists() {\n      var selection = SelectionUtils.get();\n      return !!selection.anchorNode;\n    }\n  }, {\n    key: "get",\n    value: function get() {\n      return window.getSelection();\n    }\n  }, {\n    key: "setCursor",\n    value: function setCursor(element) {\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var range = document.createRange();\n      var selection = window.getSelection();\n\n      if (this.isNativeInput(element)) {\n        if (!this.canSetCaret(element)) {\n          return;\n        }\n\n        element.focus();\n        element.selectionStart = element.selectionEnd = offset;\n        return element.getBoundingClientRect();\n      }\n\n      range.setStart(element, offset);\n      range.setEnd(element, offset);\n      selection.removeAllRanges();\n      selection.addRange(range);\n      return range.getBoundingClientRect();\n    }\n  }, {\n    key: "removeFakeBackground",\n    value: function removeFakeBackground() {\n      if (!this.isFakeBackgroundEnabled) {\n        return;\n      }\n\n      this.isFakeBackgroundEnabled = false;\n      document.execCommand(this.commandRemoveFormat);\n    }\n  }, {\n    key: "setFakeBackground",\n    value: function setFakeBackground() {\n      document.execCommand(this.commandBackground, false, \'#a8d6ff\');\n      this.isFakeBackgroundEnabled = true;\n    }\n  }, {\n    key: "save",\n    value: function save() {\n      this.savedSelectionRange = SelectionUtils.range;\n    }\n  }, {\n    key: "restore",\n    value: function restore() {\n      if (!this.savedSelectionRange) {\n        return;\n      }\n\n      var sel = window.getSelection();\n      sel.removeAllRanges();\n      sel.addRange(this.savedSelectionRange);\n    }\n  }, {\n    key: "clearSaved",\n    value: function clearSaved() {\n      this.savedSelectionRange = null;\n    }\n  }, {\n    key: "collapseToEnd",\n    value: function collapseToEnd() {\n      var sel = window.getSelection();\n      var range = document.createRange();\n      range.selectNodeContents(sel.focusNode);\n      range.collapse(false);\n      sel.removeAllRanges();\n      sel.addRange(range);\n    }\n  }, {\n    key: "findParentTag",\n    value: function findParentTag(tagName) {\n      var className = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var searchDepth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n      var selection = window.getSelection();\n      var parentTag = null;\n\n      if (!selection || !selection.anchorNode || !selection.focusNode) {\n        return null;\n      }\n\n      var boundNodes = [selection.anchorNode, selection.focusNode];\n      boundNodes.forEach(function (parent) {\n        var searchDepthIterable = searchDepth;\n\n        while (searchDepthIterable > 0 && parent.parentNode) {\n          if (parent.tagName === tagName) {\n            parentTag = parent;\n\n            if (className && parent.classList && !parent.classList.contains(className)) {\n              parentTag = null;\n            }\n\n            if (parentTag) {\n              break;\n            }\n          }\n\n          parent = parent.parentNode;\n          searchDepthIterable--;\n        }\n      });\n      return parentTag;\n    }\n  }, {\n    key: "expandToTag",\n    value: function expandToTag(element) {\n      var selection = window.getSelection();\n      selection.removeAllRanges();\n      var range = document.createRange();\n      range.selectNodeContents(element);\n      selection.addRange(range);\n    }\n  }], [{\n    key: "range",\n    get: function get() {\n      var selection = window.getSelection();\n      return selection && selection.rangeCount ? selection.getRangeAt(0) : null;\n    }\n  }, {\n    key: "rect",\n    get: function get() {\n      var sel = document.selection,\n          range;\n      var rect = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      };\n\n      if (sel && sel.type !== \'Control\') {\n        range = sel.createRange();\n        rect.x = range.boundingLeft;\n        rect.y = range.boundingTop;\n        rect.width = range.boundingWidth;\n        rect.height = range.boundingHeight;\n        return rect;\n      }\n\n      if (!window.getSelection) {\n        return rect;\n      }\n\n      sel = window.getSelection();\n\n      if (sel.rangeCount === null || isNaN(sel.rangeCount)) {\n        return rect;\n      }\n\n      if (sel.rangeCount === 0) {\n        return rect;\n      }\n\n      range = sel.getRangeAt(0).cloneRange();\n\n      if (range.getBoundingClientRect) {\n        rect = range.getBoundingClientRect();\n      }\n\n      if (rect.x === 0 && rect.y === 0) {\n        var span = document.createElement(\'span\');\n\n        if (span.getBoundingClientRect) {\n          span.appendChild(document.createTextNode("\\u200B"));\n          range.insertNode(span);\n          rect = span.getBoundingClientRect();\n          var spanParent = span.parentNode;\n          spanParent.removeChild(span);\n          spanParent.normalize();\n        }\n      }\n\n      return rect;\n    }\n  }, {\n    key: "text",\n    get: function get() {\n      return window.getSelection ? window.getSelection().toString() : \'\';\n    }\n  }]);\n\n  return SelectionUtils;\n}();\n\n\n\n//# sourceURL=webpack://Hyperlink/./src/SelectionUtils.js?');
        /***/ }
    })["default"];
});

},{}],"7x0nF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_class);
var _definePropertyMjs = require("@swc/helpers/src/_define_property.mjs");
var _definePropertyMjsDefault = parcelHelpers.interopDefault(_definePropertyMjs);
var _stimulus = require("@hotwired/stimulus");
class _class extends (0, _stimulus.Controller) {
    connect() {
        console.log("media-widget connected");
    }
    check({ detail: { content  }  }) {}
    receiveModalReturn(returnObject) {
        console.log(returnObject.payload);
    }
}
(0, _definePropertyMjsDefault.default)(_class, "targets", []);
(0, _definePropertyMjsDefault.default)(_class, "values", {});

},{"@swc/helpers/src/_define_property.mjs":"aQ2HO","@hotwired/stimulus":"hVNih","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"lw7OH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "PageRenderer", ()=>PageRenderer);
parcelHelpers.export(exports, "PageSnapshot", ()=>PageSnapshot);
parcelHelpers.export(exports, "clearCache", ()=>clearCache);
parcelHelpers.export(exports, "connectStreamSource", ()=>connectStreamSource);
parcelHelpers.export(exports, "disconnectStreamSource", ()=>disconnectStreamSource);
parcelHelpers.export(exports, "navigator", ()=>navigator$1);
parcelHelpers.export(exports, "registerAdapter", ()=>registerAdapter);
parcelHelpers.export(exports, "renderStreamMessage", ()=>renderStreamMessage);
parcelHelpers.export(exports, "session", ()=>session);
parcelHelpers.export(exports, "setConfirmMethod", ()=>setConfirmMethod);
parcelHelpers.export(exports, "setProgressBarDelay", ()=>setProgressBarDelay);
parcelHelpers.export(exports, "start", ()=>start);
parcelHelpers.export(exports, "visit", ()=>visit);
let _ = (t)=>t, t, t1;
/*
Turbo 7.1.0
Copyright © 2021 Basecamp, LLC
 */ (function() {
    if (window.Reflect === undefined || window.customElements === undefined || window.customElements.polyfillWrapFlushCallback) return;
    const BuiltInHTMLElement = HTMLElement;
    const wrapperForTheName = {
        "HTMLElement": function HTMLElement1() {
            return Reflect.construct(BuiltInHTMLElement, [], this.constructor);
        }
    };
    window.HTMLElement = wrapperForTheName["HTMLElement"];
    HTMLElement.prototype = BuiltInHTMLElement.prototype;
    HTMLElement.prototype.constructor = HTMLElement;
    Object.setPrototypeOf(HTMLElement, BuiltInHTMLElement);
})();
/**
 * The MIT License (MIT)
 * 
 * Copyright (c) 2019 Javan Makhmali
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */ (function(prototype) {
    if (typeof prototype.requestSubmit == "function") return;
    prototype.requestSubmit = function(submitter) {
        if (submitter) {
            validateSubmitter(submitter, this);
            submitter.click();
        } else {
            submitter = document.createElement("input");
            submitter.type = "submit";
            submitter.hidden = true;
            this.appendChild(submitter);
            submitter.click();
            this.removeChild(submitter);
        }
    };
    function validateSubmitter(submitter, form) {
        submitter instanceof HTMLElement || raise(TypeError, "parameter 1 is not of type 'HTMLElement'");
        submitter.type == "submit" || raise(TypeError, "The specified element is not a submit button");
        submitter.form == form || raise(DOMException, "The specified element is not owned by this form element", "NotFoundError");
    }
    function raise(errorConstructor, message, name) {
        throw new errorConstructor("Failed to execute 'requestSubmit' on 'HTMLFormElement': " + message + ".", name);
    }
})(HTMLFormElement.prototype);
const submittersByForm = new WeakMap;
function findSubmitterFromClickTarget(target) {
    const element = target instanceof Element ? target : target instanceof Node ? target.parentElement : null;
    const candidate = element ? element.closest("input, button") : null;
    return (candidate === null || candidate === void 0 ? void 0 : candidate.type) == "submit" ? candidate : null;
}
function clickCaptured(event) {
    const submitter = findSubmitterFromClickTarget(event.target);
    if (submitter && submitter.form) submittersByForm.set(submitter.form, submitter);
}
(function() {
    if ("submitter" in Event.prototype) return;
    let prototype;
    if ("SubmitEvent" in window && /Apple Computer/.test(navigator.vendor)) prototype = window.SubmitEvent.prototype;
    else if ("SubmitEvent" in window) return;
    else prototype = window.Event.prototype;
    addEventListener("click", clickCaptured, true);
    Object.defineProperty(prototype, "submitter", {
        get () {
            if (this.type == "submit" && this.target instanceof HTMLFormElement) return submittersByForm.get(this.target);
        }
    });
})();
var FrameLoadingStyle;
(function(FrameLoadingStyle) {
    FrameLoadingStyle["eager"] = "eager";
    FrameLoadingStyle["lazy"] = "lazy";
})(FrameLoadingStyle || (FrameLoadingStyle = {}));
class FrameElement extends HTMLElement {
    static get observedAttributes() {
        return [
            "disabled",
            "loading",
            "src"
        ];
    }
    connectedCallback() {
        this.delegate.connect();
    }
    disconnectedCallback() {
        this.delegate.disconnect();
    }
    reload() {
        const { src  } = this;
        this.src = null;
        this.src = src;
    }
    attributeChangedCallback(name) {
        if (name == "loading") this.delegate.loadingStyleChanged();
        else if (name == "src") this.delegate.sourceURLChanged();
        else this.delegate.disabledChanged();
    }
    get src() {
        return this.getAttribute("src");
    }
    set src(value) {
        if (value) this.setAttribute("src", value);
        else this.removeAttribute("src");
    }
    get loading() {
        return frameLoadingStyleFromString(this.getAttribute("loading") || "");
    }
    set loading(value) {
        if (value) this.setAttribute("loading", value);
        else this.removeAttribute("loading");
    }
    get disabled() {
        return this.hasAttribute("disabled");
    }
    set disabled(value) {
        if (value) this.setAttribute("disabled", "");
        else this.removeAttribute("disabled");
    }
    get autoscroll() {
        return this.hasAttribute("autoscroll");
    }
    set autoscroll(value) {
        if (value) this.setAttribute("autoscroll", "");
        else this.removeAttribute("autoscroll");
    }
    get complete() {
        return !this.delegate.isLoading;
    }
    get isActive() {
        return this.ownerDocument === document && !this.isPreview;
    }
    get isPreview() {
        var _a, _b;
        return (_b = (_a = this.ownerDocument) === null || _a === void 0 ? void 0 : _a.documentElement) === null || _b === void 0 ? void 0 : _b.hasAttribute("data-turbo-preview");
    }
    constructor(){
        super();
        this.loaded = Promise.resolve();
        this.delegate = new FrameElement.delegateConstructor(this);
    }
}
function frameLoadingStyleFromString(style) {
    switch(style.toLowerCase()){
        case "lazy":
            return FrameLoadingStyle.lazy;
        default:
            return FrameLoadingStyle.eager;
    }
}
function expandURL(locatable) {
    return new URL(locatable.toString(), document.baseURI);
}
function getAnchor(url) {
    let anchorMatch;
    if (url.hash) return url.hash.slice(1);
    else if (anchorMatch = url.href.match(/#(.*)$/)) return anchorMatch[1];
}
function getAction(form, submitter) {
    const action = (submitter === null || submitter === void 0 ? void 0 : submitter.getAttribute("formaction")) || form.getAttribute("action") || form.action;
    return expandURL(action);
}
function getExtension(url) {
    return (getLastPathComponent(url).match(/\.[^.]*$/) || [])[0] || "";
}
function isHTML(url) {
    return !!getExtension(url).match(/^(?:|\.(?:htm|html|xhtml))$/);
}
function isPrefixedBy(baseURL, url) {
    const prefix = getPrefix(url);
    return baseURL.href === expandURL(prefix).href || baseURL.href.startsWith(prefix);
}
function locationIsVisitable(location1, rootLocation) {
    return isPrefixedBy(location1, rootLocation) && isHTML(location1);
}
function getRequestURL(url) {
    const anchor = getAnchor(url);
    return anchor != null ? url.href.slice(0, -(anchor.length + 1)) : url.href;
}
function toCacheKey(url) {
    return getRequestURL(url);
}
function urlsAreEqual(left, right) {
    return expandURL(left).href == expandURL(right).href;
}
function getPathComponents(url) {
    return url.pathname.split("/").slice(1);
}
function getLastPathComponent(url) {
    return getPathComponents(url).slice(-1)[0];
}
function getPrefix(url) {
    return addTrailingSlash(url.origin + url.pathname);
}
function addTrailingSlash(value) {
    return value.endsWith("/") ? value : value + "/";
}
class FetchResponse {
    get succeeded() {
        return this.response.ok;
    }
    get failed() {
        return !this.succeeded;
    }
    get clientError() {
        return this.statusCode >= 400 && this.statusCode <= 499;
    }
    get serverError() {
        return this.statusCode >= 500 && this.statusCode <= 599;
    }
    get redirected() {
        return this.response.redirected;
    }
    get location() {
        return expandURL(this.response.url);
    }
    get isHTML() {
        return this.contentType && this.contentType.match(/^(?:text\/([^\s;,]+\b)?html|application\/xhtml\+xml)\b/);
    }
    get statusCode() {
        return this.response.status;
    }
    get contentType() {
        return this.header("Content-Type");
    }
    get responseText() {
        return this.response.clone().text();
    }
    get responseHTML() {
        if (this.isHTML) return this.response.clone().text();
        else return Promise.resolve(undefined);
    }
    header(name) {
        return this.response.headers.get(name);
    }
    constructor(response){
        this.response = response;
    }
}
function dispatch(eventName, { target , cancelable , detail  } = {}) {
    const event = new CustomEvent(eventName, {
        cancelable,
        bubbles: true,
        detail
    });
    if (target && target.isConnected) target.dispatchEvent(event);
    else document.documentElement.dispatchEvent(event);
    return event;
}
function nextAnimationFrame() {
    return new Promise((resolve)=>requestAnimationFrame(()=>resolve()));
}
function nextEventLoopTick() {
    return new Promise((resolve)=>setTimeout(()=>resolve(), 0));
}
function nextMicrotask() {
    return Promise.resolve();
}
function parseHTMLDocument(html = "") {
    return new DOMParser().parseFromString(html, "text/html");
}
function unindent(strings, ...values) {
    const lines = interpolate(strings, values).replace(/^\n/, "").split("\n");
    const match = lines[0].match(/^\s+/);
    const indent = match ? match[0].length : 0;
    return lines.map((line)=>line.slice(indent)).join("\n");
}
function interpolate(strings, values) {
    return strings.reduce((result, string, i)=>{
        const value = values[i] == undefined ? "" : values[i];
        return result + string + value;
    }, "");
}
function uuid() {
    return Array.apply(null, {
        length: 36
    }).map((_, i)=>{
        if (i == 8 || i == 13 || i == 18 || i == 23) return "-";
        else if (i == 14) return "4";
        else if (i == 19) return (Math.floor(Math.random() * 4) + 8).toString(16);
        else return Math.floor(Math.random() * 15).toString(16);
    }).join("");
}
function getAttribute(attributeName, ...elements) {
    for (const value of elements.map((element)=>element === null || element === void 0 ? void 0 : element.getAttribute(attributeName))){
        if (typeof value == "string") return value;
    }
    return null;
}
function markAsBusy(...elements) {
    for (const element of elements){
        if (element.localName == "turbo-frame") element.setAttribute("busy", "");
        element.setAttribute("aria-busy", "true");
    }
}
function clearBusyState(...elements) {
    for (const element of elements){
        if (element.localName == "turbo-frame") element.removeAttribute("busy");
        element.removeAttribute("aria-busy");
    }
}
var FetchMethod;
(function(FetchMethod) {
    FetchMethod[FetchMethod["get"] = 0] = "get";
    FetchMethod[FetchMethod["post"] = 1] = "post";
    FetchMethod[FetchMethod["put"] = 2] = "put";
    FetchMethod[FetchMethod["patch"] = 3] = "patch";
    FetchMethod[FetchMethod["delete"] = 4] = "delete";
})(FetchMethod || (FetchMethod = {}));
function fetchMethodFromString(method) {
    switch(method.toLowerCase()){
        case "get":
            return FetchMethod.get;
        case "post":
            return FetchMethod.post;
        case "put":
            return FetchMethod.put;
        case "patch":
            return FetchMethod.patch;
        case "delete":
            return FetchMethod.delete;
    }
}
class FetchRequest {
    get location() {
        return this.url;
    }
    get params() {
        return this.url.searchParams;
    }
    get entries() {
        return this.body ? Array.from(this.body.entries()) : [];
    }
    cancel() {
        this.abortController.abort();
    }
    async perform() {
        var _a, _b;
        const { fetchOptions  } = this;
        (_b = (_a = this.delegate).prepareHeadersForRequest) === null || _b === void 0 || _b.call(_a, this.headers, this);
        await this.allowRequestToBeIntercepted(fetchOptions);
        try {
            this.delegate.requestStarted(this);
            const response = await fetch(this.url.href, fetchOptions);
            return await this.receive(response);
        } catch (error) {
            if (error.name !== "AbortError") {
                this.delegate.requestErrored(this, error);
                throw error;
            }
        } finally{
            this.delegate.requestFinished(this);
        }
    }
    async receive(response) {
        const fetchResponse = new FetchResponse(response);
        const event = dispatch("turbo:before-fetch-response", {
            cancelable: true,
            detail: {
                fetchResponse
            },
            target: this.target
        });
        if (event.defaultPrevented) this.delegate.requestPreventedHandlingResponse(this, fetchResponse);
        else if (fetchResponse.succeeded) this.delegate.requestSucceededWithResponse(this, fetchResponse);
        else this.delegate.requestFailedWithResponse(this, fetchResponse);
        return fetchResponse;
    }
    get fetchOptions() {
        var _a;
        return {
            method: FetchMethod[this.method].toUpperCase(),
            credentials: "same-origin",
            headers: this.headers,
            redirect: "follow",
            body: this.isIdempotent ? null : this.body,
            signal: this.abortSignal,
            referrer: (_a = this.delegate.referrer) === null || _a === void 0 ? void 0 : _a.href
        };
    }
    get defaultHeaders() {
        return {
            "Accept": "text/html, application/xhtml+xml"
        };
    }
    get isIdempotent() {
        return this.method == FetchMethod.get;
    }
    get abortSignal() {
        return this.abortController.signal;
    }
    async allowRequestToBeIntercepted(fetchOptions) {
        const requestInterception = new Promise((resolve)=>this.resolveRequestPromise = resolve);
        const event = dispatch("turbo:before-fetch-request", {
            cancelable: true,
            detail: {
                fetchOptions,
                url: this.url,
                resume: this.resolveRequestPromise
            },
            target: this.target
        });
        if (event.defaultPrevented) await requestInterception;
    }
    constructor(delegate, method, location1, body = new URLSearchParams, target = null){
        this.abortController = new AbortController;
        this.resolveRequestPromise = (value)=>{};
        this.delegate = delegate;
        this.method = method;
        this.headers = this.defaultHeaders;
        this.body = body;
        this.url = location1;
        this.target = target;
    }
}
class AppearanceObserver {
    start() {
        if (!this.started) {
            this.started = true;
            this.intersectionObserver.observe(this.element);
        }
    }
    stop() {
        if (this.started) {
            this.started = false;
            this.intersectionObserver.unobserve(this.element);
        }
    }
    constructor(delegate, element){
        this.started = false;
        this.intersect = (entries)=>{
            const lastEntry = entries.slice(-1)[0];
            if (lastEntry === null || lastEntry === void 0 ? void 0 : lastEntry.isIntersecting) this.delegate.elementAppearedInViewport(this.element);
        };
        this.delegate = delegate;
        this.element = element;
        this.intersectionObserver = new IntersectionObserver(this.intersect);
    }
}
class StreamMessage {
    static wrap(message) {
        if (typeof message == "string") return new this(message);
        else return message;
    }
    get fragment() {
        const fragment = document.createDocumentFragment();
        for (const element of this.foreignElements)fragment.appendChild(document.importNode(element, true));
        return fragment;
    }
    get foreignElements() {
        return this.templateChildren.reduce((streamElements, child)=>{
            if (child.tagName.toLowerCase() == "turbo-stream") return [
                ...streamElements,
                child
            ];
            else return streamElements;
        }, []);
    }
    get templateChildren() {
        return Array.from(this.templateElement.content.children);
    }
    constructor(html){
        this.templateElement = document.createElement("template");
        this.templateElement.innerHTML = html;
    }
}
StreamMessage.contentType = "text/vnd.turbo-stream.html";
var FormSubmissionState;
(function(FormSubmissionState) {
    FormSubmissionState[FormSubmissionState["initialized"] = 0] = "initialized";
    FormSubmissionState[FormSubmissionState["requesting"] = 1] = "requesting";
    FormSubmissionState[FormSubmissionState["waiting"] = 2] = "waiting";
    FormSubmissionState[FormSubmissionState["receiving"] = 3] = "receiving";
    FormSubmissionState[FormSubmissionState["stopping"] = 4] = "stopping";
    FormSubmissionState[FormSubmissionState["stopped"] = 5] = "stopped";
})(FormSubmissionState || (FormSubmissionState = {}));
var FormEnctype;
(function(FormEnctype) {
    FormEnctype["urlEncoded"] = "application/x-www-form-urlencoded";
    FormEnctype["multipart"] = "multipart/form-data";
    FormEnctype["plain"] = "text/plain";
})(FormEnctype || (FormEnctype = {}));
function formEnctypeFromString(encoding) {
    switch(encoding.toLowerCase()){
        case FormEnctype.multipart:
            return FormEnctype.multipart;
        case FormEnctype.plain:
            return FormEnctype.plain;
        default:
            return FormEnctype.urlEncoded;
    }
}
class FormSubmission {
    static confirmMethod(message, element) {
        return confirm(message);
    }
    get method() {
        var _a;
        const method = ((_a = this.submitter) === null || _a === void 0 ? void 0 : _a.getAttribute("formmethod")) || this.formElement.getAttribute("method") || "";
        return fetchMethodFromString(method.toLowerCase()) || FetchMethod.get;
    }
    get action() {
        var _a;
        const formElementAction = typeof this.formElement.action === "string" ? this.formElement.action : null;
        return ((_a = this.submitter) === null || _a === void 0 ? void 0 : _a.getAttribute("formaction")) || this.formElement.getAttribute("action") || formElementAction || "";
    }
    get body() {
        if (this.enctype == FormEnctype.urlEncoded || this.method == FetchMethod.get) return new URLSearchParams(this.stringFormData);
        else return this.formData;
    }
    get enctype() {
        var _a;
        return formEnctypeFromString(((_a = this.submitter) === null || _a === void 0 ? void 0 : _a.getAttribute("formenctype")) || this.formElement.enctype);
    }
    get isIdempotent() {
        return this.fetchRequest.isIdempotent;
    }
    get stringFormData() {
        return [
            ...this.formData
        ].reduce((entries, [name, value])=>{
            return entries.concat(typeof value == "string" ? [
                [
                    name,
                    value
                ]
            ] : []);
        }, []);
    }
    get confirmationMessage() {
        return this.formElement.getAttribute("data-turbo-confirm");
    }
    get needsConfirmation() {
        return this.confirmationMessage !== null;
    }
    async start() {
        const { initialized , requesting  } = FormSubmissionState;
        if (this.needsConfirmation) {
            const answer = FormSubmission.confirmMethod(this.confirmationMessage, this.formElement);
            if (!answer) return;
        }
        if (this.state == initialized) {
            this.state = requesting;
            return this.fetchRequest.perform();
        }
    }
    stop() {
        const { stopping , stopped  } = FormSubmissionState;
        if (this.state != stopping && this.state != stopped) {
            this.state = stopping;
            this.fetchRequest.cancel();
            return true;
        }
    }
    prepareHeadersForRequest(headers, request) {
        if (!request.isIdempotent) {
            const token = getCookieValue(getMetaContent("csrf-param")) || getMetaContent("csrf-token");
            if (token) headers["X-CSRF-Token"] = token;
            headers["Accept"] = [
                StreamMessage.contentType,
                headers["Accept"]
            ].join(", ");
        }
    }
    requestStarted(request) {
        var _a;
        this.state = FormSubmissionState.waiting;
        (_a = this.submitter) === null || _a === void 0 || _a.setAttribute("disabled", "");
        dispatch("turbo:submit-start", {
            target: this.formElement,
            detail: {
                formSubmission: this
            }
        });
        this.delegate.formSubmissionStarted(this);
    }
    requestPreventedHandlingResponse(request, response) {
        this.result = {
            success: response.succeeded,
            fetchResponse: response
        };
    }
    requestSucceededWithResponse(request, response) {
        if (response.clientError || response.serverError) this.delegate.formSubmissionFailedWithResponse(this, response);
        else if (this.requestMustRedirect(request) && responseSucceededWithoutRedirect(response)) {
            const error = new Error("Form responses must redirect to another location");
            this.delegate.formSubmissionErrored(this, error);
        } else {
            this.state = FormSubmissionState.receiving;
            this.result = {
                success: true,
                fetchResponse: response
            };
            this.delegate.formSubmissionSucceededWithResponse(this, response);
        }
    }
    requestFailedWithResponse(request, response) {
        this.result = {
            success: false,
            fetchResponse: response
        };
        this.delegate.formSubmissionFailedWithResponse(this, response);
    }
    requestErrored(request, error) {
        this.result = {
            success: false,
            error
        };
        this.delegate.formSubmissionErrored(this, error);
    }
    requestFinished(request) {
        var _a;
        this.state = FormSubmissionState.stopped;
        (_a = this.submitter) === null || _a === void 0 || _a.removeAttribute("disabled");
        dispatch("turbo:submit-end", {
            target: this.formElement,
            detail: Object.assign({
                formSubmission: this
            }, this.result)
        });
        this.delegate.formSubmissionFinished(this);
    }
    requestMustRedirect(request) {
        return !request.isIdempotent && this.mustRedirect;
    }
    constructor(delegate, formElement, submitter, mustRedirect = false){
        this.state = FormSubmissionState.initialized;
        this.delegate = delegate;
        this.formElement = formElement;
        this.submitter = submitter;
        this.formData = buildFormData(formElement, submitter);
        this.location = expandURL(this.action);
        if (this.method == FetchMethod.get) mergeFormDataEntries(this.location, [
            ...this.body.entries()
        ]);
        this.fetchRequest = new FetchRequest(this, this.method, this.location, this.body, this.formElement);
        this.mustRedirect = mustRedirect;
    }
}
function buildFormData(formElement, submitter) {
    const formData = new FormData(formElement);
    const name = submitter === null || submitter === void 0 ? void 0 : submitter.getAttribute("name");
    const value = submitter === null || submitter === void 0 ? void 0 : submitter.getAttribute("value");
    if (name && value != null && formData.get(name) != value) formData.append(name, value);
    return formData;
}
function getCookieValue(cookieName) {
    if (cookieName != null) {
        const cookies = document.cookie ? document.cookie.split("; ") : [];
        const cookie = cookies.find((cookie)=>cookie.startsWith(cookieName));
        if (cookie) {
            const value = cookie.split("=").slice(1).join("=");
            return value ? decodeURIComponent(value) : undefined;
        }
    }
}
function getMetaContent(name) {
    const element = document.querySelector(`meta[name="${name}"]`);
    return element && element.content;
}
function responseSucceededWithoutRedirect(response) {
    return response.statusCode == 200 && !response.redirected;
}
function mergeFormDataEntries(url, entries) {
    const searchParams = new URLSearchParams;
    for (const [name, value] of entries){
        if (value instanceof File) continue;
        searchParams.append(name, value);
    }
    url.search = searchParams.toString();
    return url;
}
class Snapshot {
    get children() {
        return [
            ...this.element.children
        ];
    }
    hasAnchor(anchor) {
        return this.getElementForAnchor(anchor) != null;
    }
    getElementForAnchor(anchor) {
        return anchor ? this.element.querySelector(`[id='${anchor}'], a[name='${anchor}']`) : null;
    }
    get isConnected() {
        return this.element.isConnected;
    }
    get firstAutofocusableElement() {
        return this.element.querySelector("[autofocus]");
    }
    get permanentElements() {
        return [
            ...this.element.querySelectorAll("[id][data-turbo-permanent]")
        ];
    }
    getPermanentElementById(id) {
        return this.element.querySelector(`#${id}[data-turbo-permanent]`);
    }
    getPermanentElementMapForSnapshot(snapshot) {
        const permanentElementMap = {};
        for (const currentPermanentElement of this.permanentElements){
            const { id  } = currentPermanentElement;
            const newPermanentElement = snapshot.getPermanentElementById(id);
            if (newPermanentElement) permanentElementMap[id] = [
                currentPermanentElement,
                newPermanentElement
            ];
        }
        return permanentElementMap;
    }
    constructor(element){
        this.element = element;
    }
}
class FormInterceptor {
    start() {
        this.element.addEventListener("submit", this.submitBubbled);
    }
    stop() {
        this.element.removeEventListener("submit", this.submitBubbled);
    }
    constructor(delegate, element){
        this.submitBubbled = (event)=>{
            const form = event.target;
            if (!event.defaultPrevented && form instanceof HTMLFormElement && form.closest("turbo-frame, html") == this.element) {
                const submitter = event.submitter || undefined;
                const method = (submitter === null || submitter === void 0 ? void 0 : submitter.getAttribute("formmethod")) || form.method;
                if (method != "dialog" && this.delegate.shouldInterceptFormSubmission(form, submitter)) {
                    event.preventDefault();
                    event.stopImmediatePropagation();
                    this.delegate.formSubmissionIntercepted(form, submitter);
                }
            }
        };
        this.delegate = delegate;
        this.element = element;
    }
}
class View {
    scrollToAnchor(anchor) {
        const element = this.snapshot.getElementForAnchor(anchor);
        if (element) {
            this.scrollToElement(element);
            this.focusElement(element);
        } else this.scrollToPosition({
            x: 0,
            y: 0
        });
    }
    scrollToAnchorFromLocation(location1) {
        this.scrollToAnchor(getAnchor(location1));
    }
    scrollToElement(element) {
        element.scrollIntoView();
    }
    focusElement(element) {
        if (element instanceof HTMLElement) {
            if (element.hasAttribute("tabindex")) element.focus();
            else {
                element.setAttribute("tabindex", "-1");
                element.focus();
                element.removeAttribute("tabindex");
            }
        }
    }
    scrollToPosition({ x , y  }) {
        this.scrollRoot.scrollTo(x, y);
    }
    scrollToTop() {
        this.scrollToPosition({
            x: 0,
            y: 0
        });
    }
    get scrollRoot() {
        return window;
    }
    async render(renderer) {
        const { isPreview , shouldRender , newSnapshot: snapshot  } = renderer;
        if (shouldRender) try {
            this.renderPromise = new Promise((resolve)=>this.resolveRenderPromise = resolve);
            this.renderer = renderer;
            this.prepareToRenderSnapshot(renderer);
            const renderInterception = new Promise((resolve)=>this.resolveInterceptionPromise = resolve);
            const immediateRender = this.delegate.allowsImmediateRender(snapshot, this.resolveInterceptionPromise);
            if (!immediateRender) await renderInterception;
            await this.renderSnapshot(renderer);
            this.delegate.viewRenderedSnapshot(snapshot, isPreview);
            this.finishRenderingSnapshot(renderer);
        } finally{
            delete this.renderer;
            this.resolveRenderPromise(undefined);
            delete this.renderPromise;
        }
        else this.invalidate();
    }
    invalidate() {
        this.delegate.viewInvalidated();
    }
    prepareToRenderSnapshot(renderer) {
        this.markAsPreview(renderer.isPreview);
        renderer.prepareToRender();
    }
    markAsPreview(isPreview) {
        if (isPreview) this.element.setAttribute("data-turbo-preview", "");
        else this.element.removeAttribute("data-turbo-preview");
    }
    async renderSnapshot(renderer) {
        await renderer.render();
    }
    finishRenderingSnapshot(renderer) {
        renderer.finishRendering();
    }
    constructor(delegate, element){
        this.resolveRenderPromise = (value)=>{};
        this.resolveInterceptionPromise = (value)=>{};
        this.delegate = delegate;
        this.element = element;
    }
}
class FrameView extends View {
    invalidate() {
        this.element.innerHTML = "";
    }
    get snapshot() {
        return new Snapshot(this.element);
    }
}
class LinkInterceptor {
    start() {
        this.element.addEventListener("click", this.clickBubbled);
        document.addEventListener("turbo:click", this.linkClicked);
        document.addEventListener("turbo:before-visit", this.willVisit);
    }
    stop() {
        this.element.removeEventListener("click", this.clickBubbled);
        document.removeEventListener("turbo:click", this.linkClicked);
        document.removeEventListener("turbo:before-visit", this.willVisit);
    }
    respondsToEventTarget(target) {
        const element = target instanceof Element ? target : target instanceof Node ? target.parentElement : null;
        return element && element.closest("turbo-frame, html") == this.element;
    }
    constructor(delegate, element){
        this.clickBubbled = (event)=>{
            if (this.respondsToEventTarget(event.target)) this.clickEvent = event;
            else delete this.clickEvent;
        };
        this.linkClicked = (event)=>{
            if (this.clickEvent && this.respondsToEventTarget(event.target) && event.target instanceof Element) {
                if (this.delegate.shouldInterceptLinkClick(event.target, event.detail.url)) {
                    this.clickEvent.preventDefault();
                    event.preventDefault();
                    this.delegate.linkClickIntercepted(event.target, event.detail.url);
                }
            }
            delete this.clickEvent;
        };
        this.willVisit = ()=>{
            delete this.clickEvent;
        };
        this.delegate = delegate;
        this.element = element;
    }
}
class Bardo {
    static preservingPermanentElements(permanentElementMap, callback) {
        const bardo = new this(permanentElementMap);
        bardo.enter();
        callback();
        bardo.leave();
    }
    enter() {
        for(const id in this.permanentElementMap){
            const [, newPermanentElement] = this.permanentElementMap[id];
            this.replaceNewPermanentElementWithPlaceholder(newPermanentElement);
        }
    }
    leave() {
        for(const id in this.permanentElementMap){
            const [currentPermanentElement] = this.permanentElementMap[id];
            this.replaceCurrentPermanentElementWithClone(currentPermanentElement);
            this.replacePlaceholderWithPermanentElement(currentPermanentElement);
        }
    }
    replaceNewPermanentElementWithPlaceholder(permanentElement) {
        const placeholder = createPlaceholderForPermanentElement(permanentElement);
        permanentElement.replaceWith(placeholder);
    }
    replaceCurrentPermanentElementWithClone(permanentElement) {
        const clone = permanentElement.cloneNode(true);
        permanentElement.replaceWith(clone);
    }
    replacePlaceholderWithPermanentElement(permanentElement) {
        const placeholder = this.getPlaceholderById(permanentElement.id);
        placeholder === null || placeholder === void 0 || placeholder.replaceWith(permanentElement);
    }
    getPlaceholderById(id) {
        return this.placeholders.find((element)=>element.content == id);
    }
    get placeholders() {
        return [
            ...document.querySelectorAll("meta[name=turbo-permanent-placeholder][content]")
        ];
    }
    constructor(permanentElementMap){
        this.permanentElementMap = permanentElementMap;
    }
}
function createPlaceholderForPermanentElement(permanentElement) {
    const element = document.createElement("meta");
    element.setAttribute("name", "turbo-permanent-placeholder");
    element.setAttribute("content", permanentElement.id);
    return element;
}
class Renderer {
    get shouldRender() {
        return true;
    }
    prepareToRender() {
        return;
    }
    finishRendering() {
        if (this.resolvingFunctions) {
            this.resolvingFunctions.resolve();
            delete this.resolvingFunctions;
        }
    }
    createScriptElement(element) {
        if (element.getAttribute("data-turbo-eval") == "false") return element;
        else {
            const createdScriptElement = document.createElement("script");
            if (this.cspNonce) createdScriptElement.nonce = this.cspNonce;
            createdScriptElement.textContent = element.textContent;
            createdScriptElement.async = false;
            copyElementAttributes(createdScriptElement, element);
            return createdScriptElement;
        }
    }
    preservingPermanentElements(callback) {
        Bardo.preservingPermanentElements(this.permanentElementMap, callback);
    }
    focusFirstAutofocusableElement() {
        const element = this.connectedSnapshot.firstAutofocusableElement;
        if (elementIsFocusable(element)) element.focus();
    }
    get connectedSnapshot() {
        return this.newSnapshot.isConnected ? this.newSnapshot : this.currentSnapshot;
    }
    get currentElement() {
        return this.currentSnapshot.element;
    }
    get newElement() {
        return this.newSnapshot.element;
    }
    get permanentElementMap() {
        return this.currentSnapshot.getPermanentElementMapForSnapshot(this.newSnapshot);
    }
    get cspNonce() {
        var _a;
        return (_a = document.head.querySelector('meta[name="csp-nonce"]')) === null || _a === void 0 ? void 0 : _a.getAttribute("content");
    }
    constructor(currentSnapshot, newSnapshot, isPreview, willRender = true){
        this.currentSnapshot = currentSnapshot;
        this.newSnapshot = newSnapshot;
        this.isPreview = isPreview;
        this.willRender = willRender;
        this.promise = new Promise((resolve, reject)=>this.resolvingFunctions = {
                resolve,
                reject
            });
    }
}
function copyElementAttributes(destinationElement, sourceElement) {
    for (const { name , value  } of [
        ...sourceElement.attributes
    ])destinationElement.setAttribute(name, value);
}
function elementIsFocusable(element) {
    return element && typeof element.focus == "function";
}
class FrameRenderer extends Renderer {
    get shouldRender() {
        return true;
    }
    async render() {
        await nextAnimationFrame();
        this.preservingPermanentElements(()=>{
            this.loadFrameElement();
        });
        this.scrollFrameIntoView();
        await nextAnimationFrame();
        this.focusFirstAutofocusableElement();
        await nextAnimationFrame();
        this.activateScriptElements();
    }
    loadFrameElement() {
        var _a;
        const destinationRange = document.createRange();
        destinationRange.selectNodeContents(this.currentElement);
        destinationRange.deleteContents();
        const frameElement = this.newElement;
        const sourceRange = (_a = frameElement.ownerDocument) === null || _a === void 0 ? void 0 : _a.createRange();
        if (sourceRange) {
            sourceRange.selectNodeContents(frameElement);
            this.currentElement.appendChild(sourceRange.extractContents());
        }
    }
    scrollFrameIntoView() {
        if (this.currentElement.autoscroll || this.newElement.autoscroll) {
            const element = this.currentElement.firstElementChild;
            const block = readScrollLogicalPosition(this.currentElement.getAttribute("data-autoscroll-block"), "end");
            if (element) {
                element.scrollIntoView({
                    block
                });
                return true;
            }
        }
        return false;
    }
    activateScriptElements() {
        for (const inertScriptElement of this.newScriptElements){
            const activatedScriptElement = this.createScriptElement(inertScriptElement);
            inertScriptElement.replaceWith(activatedScriptElement);
        }
    }
    get newScriptElements() {
        return this.currentElement.querySelectorAll("script");
    }
}
function readScrollLogicalPosition(value, defaultValue) {
    if (value == "end" || value == "start" || value == "center" || value == "nearest") return value;
    else return defaultValue;
}
class ProgressBar {
    static get defaultCSS() {
        return unindent(t || (t = _`
      .turbo-progress-bar {
        position: fixed;
        display: block;
        top: 0;
        left: 0;
        height: 3px;
        background: #0076ff;
        z-index: 9999;
        transition:
          width ${0}ms ease-out,
          opacity ${0}ms ${0}ms ease-in;
        transform: translate3d(0, 0, 0);
      }
    `), ProgressBar.animationDuration, ProgressBar.animationDuration / 2, ProgressBar.animationDuration / 2);
    }
    show() {
        if (!this.visible) {
            this.visible = true;
            this.installProgressElement();
            this.startTrickling();
        }
    }
    hide() {
        if (this.visible && !this.hiding) {
            this.hiding = true;
            this.fadeProgressElement(()=>{
                this.uninstallProgressElement();
                this.stopTrickling();
                this.visible = false;
                this.hiding = false;
            });
        }
    }
    setValue(value) {
        this.value = value;
        this.refresh();
    }
    installStylesheetElement() {
        document.head.insertBefore(this.stylesheetElement, document.head.firstChild);
    }
    installProgressElement() {
        this.progressElement.style.width = "0";
        this.progressElement.style.opacity = "1";
        document.documentElement.insertBefore(this.progressElement, document.body);
        this.refresh();
    }
    fadeProgressElement(callback) {
        this.progressElement.style.opacity = "0";
        setTimeout(callback, ProgressBar.animationDuration * 1.5);
    }
    uninstallProgressElement() {
        if (this.progressElement.parentNode) document.documentElement.removeChild(this.progressElement);
    }
    startTrickling() {
        if (!this.trickleInterval) this.trickleInterval = window.setInterval(this.trickle, ProgressBar.animationDuration);
    }
    stopTrickling() {
        window.clearInterval(this.trickleInterval);
        delete this.trickleInterval;
    }
    refresh() {
        requestAnimationFrame(()=>{
            this.progressElement.style.width = `${10 + this.value * 90}%`;
        });
    }
    createStylesheetElement() {
        const element = document.createElement("style");
        element.type = "text/css";
        element.textContent = ProgressBar.defaultCSS;
        return element;
    }
    createProgressElement() {
        const element = document.createElement("div");
        element.className = "turbo-progress-bar";
        return element;
    }
    constructor(){
        this.hiding = false;
        this.value = 0;
        this.visible = false;
        this.trickle = ()=>{
            this.setValue(this.value + Math.random() / 100);
        };
        this.stylesheetElement = this.createStylesheetElement();
        this.progressElement = this.createProgressElement();
        this.installStylesheetElement();
        this.setValue(0);
    }
}
ProgressBar.animationDuration = 300;
class HeadSnapshot extends Snapshot {
    get trackedElementSignature() {
        return Object.keys(this.detailsByOuterHTML).filter((outerHTML)=>this.detailsByOuterHTML[outerHTML].tracked).join("");
    }
    getScriptElementsNotInSnapshot(snapshot) {
        return this.getElementsMatchingTypeNotInSnapshot("script", snapshot);
    }
    getStylesheetElementsNotInSnapshot(snapshot) {
        return this.getElementsMatchingTypeNotInSnapshot("stylesheet", snapshot);
    }
    getElementsMatchingTypeNotInSnapshot(matchedType, snapshot) {
        return Object.keys(this.detailsByOuterHTML).filter((outerHTML)=>!(outerHTML in snapshot.detailsByOuterHTML)).map((outerHTML)=>this.detailsByOuterHTML[outerHTML]).filter(({ type  })=>type == matchedType).map(({ elements: [element]  })=>element);
    }
    get provisionalElements() {
        return Object.keys(this.detailsByOuterHTML).reduce((result, outerHTML)=>{
            const { type , tracked , elements  } = this.detailsByOuterHTML[outerHTML];
            if (type == null && !tracked) return [
                ...result,
                ...elements
            ];
            else if (elements.length > 1) return [
                ...result,
                ...elements.slice(1)
            ];
            else return result;
        }, []);
    }
    getMetaValue(name) {
        const element = this.findMetaElementByName(name);
        return element ? element.getAttribute("content") : null;
    }
    findMetaElementByName(name) {
        return Object.keys(this.detailsByOuterHTML).reduce((result, outerHTML)=>{
            const { elements: [element]  } = this.detailsByOuterHTML[outerHTML];
            return elementIsMetaElementWithName(element, name) ? element : result;
        }, undefined);
    }
    constructor(){
        super(...arguments);
        this.detailsByOuterHTML = this.children.filter((element)=>!elementIsNoscript(element)).map((element)=>elementWithoutNonce(element)).reduce((result, element)=>{
            const { outerHTML  } = element;
            const details = outerHTML in result ? result[outerHTML] : {
                type: elementType(element),
                tracked: elementIsTracked(element),
                elements: []
            };
            return Object.assign(Object.assign({}, result), {
                [outerHTML]: Object.assign(Object.assign({}, details), {
                    elements: [
                        ...details.elements,
                        element
                    ]
                })
            });
        }, {});
    }
}
function elementType(element) {
    if (elementIsScript(element)) return "script";
    else if (elementIsStylesheet(element)) return "stylesheet";
}
function elementIsTracked(element) {
    return element.getAttribute("data-turbo-track") == "reload";
}
function elementIsScript(element) {
    const tagName = element.tagName.toLowerCase();
    return tagName == "script";
}
function elementIsNoscript(element) {
    const tagName = element.tagName.toLowerCase();
    return tagName == "noscript";
}
function elementIsStylesheet(element) {
    const tagName = element.tagName.toLowerCase();
    return tagName == "style" || tagName == "link" && element.getAttribute("rel") == "stylesheet";
}
function elementIsMetaElementWithName(element, name) {
    const tagName = element.tagName.toLowerCase();
    return tagName == "meta" && element.getAttribute("name") == name;
}
function elementWithoutNonce(element) {
    if (element.hasAttribute("nonce")) element.setAttribute("nonce", "");
    return element;
}
class PageSnapshot extends Snapshot {
    static fromHTMLString(html = "") {
        return this.fromDocument(parseHTMLDocument(html));
    }
    static fromElement(element) {
        return this.fromDocument(element.ownerDocument);
    }
    static fromDocument({ head , body  }) {
        return new this(body, new HeadSnapshot(head));
    }
    clone() {
        return new PageSnapshot(this.element.cloneNode(true), this.headSnapshot);
    }
    get headElement() {
        return this.headSnapshot.element;
    }
    get rootLocation() {
        var _a;
        const root = (_a = this.getSetting("root")) !== null && _a !== void 0 ? _a : "/";
        return expandURL(root);
    }
    get cacheControlValue() {
        return this.getSetting("cache-control");
    }
    get isPreviewable() {
        return this.cacheControlValue != "no-preview";
    }
    get isCacheable() {
        return this.cacheControlValue != "no-cache";
    }
    get isVisitable() {
        return this.getSetting("visit-control") != "reload";
    }
    getSetting(name) {
        return this.headSnapshot.getMetaValue(`turbo-${name}`);
    }
    constructor(element, headSnapshot){
        super(element);
        this.headSnapshot = headSnapshot;
    }
}
var TimingMetric;
(function(TimingMetric) {
    TimingMetric["visitStart"] = "visitStart";
    TimingMetric["requestStart"] = "requestStart";
    TimingMetric["requestEnd"] = "requestEnd";
    TimingMetric["visitEnd"] = "visitEnd";
})(TimingMetric || (TimingMetric = {}));
var VisitState;
(function(VisitState) {
    VisitState["initialized"] = "initialized";
    VisitState["started"] = "started";
    VisitState["canceled"] = "canceled";
    VisitState["failed"] = "failed";
    VisitState["completed"] = "completed";
})(VisitState || (VisitState = {}));
const defaultOptions = {
    action: "advance",
    historyChanged: false,
    visitCachedSnapshot: ()=>{},
    willRender: true
};
var SystemStatusCode;
(function(SystemStatusCode) {
    SystemStatusCode[SystemStatusCode["networkFailure"] = 0] = "networkFailure";
    SystemStatusCode[SystemStatusCode["timeoutFailure"] = -1] = "timeoutFailure";
    SystemStatusCode[SystemStatusCode["contentTypeMismatch"] = -2] = "contentTypeMismatch";
})(SystemStatusCode || (SystemStatusCode = {}));
class Visit {
    get adapter() {
        return this.delegate.adapter;
    }
    get view() {
        return this.delegate.view;
    }
    get history() {
        return this.delegate.history;
    }
    get restorationData() {
        return this.history.getRestorationDataForIdentifier(this.restorationIdentifier);
    }
    get silent() {
        return this.isSamePage;
    }
    start() {
        if (this.state == VisitState.initialized) {
            this.recordTimingMetric(TimingMetric.visitStart);
            this.state = VisitState.started;
            this.adapter.visitStarted(this);
            this.delegate.visitStarted(this);
        }
    }
    cancel() {
        if (this.state == VisitState.started) {
            if (this.request) this.request.cancel();
            this.cancelRender();
            this.state = VisitState.canceled;
        }
    }
    complete() {
        if (this.state == VisitState.started) {
            this.recordTimingMetric(TimingMetric.visitEnd);
            this.state = VisitState.completed;
            this.adapter.visitCompleted(this);
            this.delegate.visitCompleted(this);
            this.followRedirect();
        }
    }
    fail() {
        if (this.state == VisitState.started) {
            this.state = VisitState.failed;
            this.adapter.visitFailed(this);
        }
    }
    changeHistory() {
        var _a;
        if (!this.historyChanged) {
            const actionForHistory = this.location.href === ((_a = this.referrer) === null || _a === void 0 ? void 0 : _a.href) ? "replace" : this.action;
            const method = this.getHistoryMethodForAction(actionForHistory);
            this.history.update(method, this.location, this.restorationIdentifier);
            this.historyChanged = true;
        }
    }
    issueRequest() {
        if (this.hasPreloadedResponse()) this.simulateRequest();
        else if (this.shouldIssueRequest() && !this.request) {
            this.request = new FetchRequest(this, FetchMethod.get, this.location);
            this.request.perform();
        }
    }
    simulateRequest() {
        if (this.response) {
            this.startRequest();
            this.recordResponse();
            this.finishRequest();
        }
    }
    startRequest() {
        this.recordTimingMetric(TimingMetric.requestStart);
        this.adapter.visitRequestStarted(this);
    }
    recordResponse(response = this.response) {
        this.response = response;
        if (response) {
            const { statusCode  } = response;
            if (isSuccessful(statusCode)) this.adapter.visitRequestCompleted(this);
            else this.adapter.visitRequestFailedWithStatusCode(this, statusCode);
        }
    }
    finishRequest() {
        this.recordTimingMetric(TimingMetric.requestEnd);
        this.adapter.visitRequestFinished(this);
    }
    loadResponse() {
        if (this.response) {
            const { statusCode , responseHTML  } = this.response;
            this.render(async ()=>{
                this.cacheSnapshot();
                if (this.view.renderPromise) await this.view.renderPromise;
                if (isSuccessful(statusCode) && responseHTML != null) {
                    await this.view.renderPage(PageSnapshot.fromHTMLString(responseHTML), false, this.willRender);
                    this.adapter.visitRendered(this);
                    this.complete();
                } else {
                    await this.view.renderError(PageSnapshot.fromHTMLString(responseHTML));
                    this.adapter.visitRendered(this);
                    this.fail();
                }
            });
        }
    }
    getCachedSnapshot() {
        const snapshot = this.view.getCachedSnapshotForLocation(this.location) || this.getPreloadedSnapshot();
        if (snapshot && (!getAnchor(this.location) || snapshot.hasAnchor(getAnchor(this.location)))) {
            if (this.action == "restore" || snapshot.isPreviewable) return snapshot;
        }
    }
    getPreloadedSnapshot() {
        if (this.snapshotHTML) return PageSnapshot.fromHTMLString(this.snapshotHTML);
    }
    hasCachedSnapshot() {
        return this.getCachedSnapshot() != null;
    }
    loadCachedSnapshot() {
        const snapshot = this.getCachedSnapshot();
        if (snapshot) {
            const isPreview = this.shouldIssueRequest();
            this.render(async ()=>{
                this.cacheSnapshot();
                if (this.isSamePage) this.adapter.visitRendered(this);
                else {
                    if (this.view.renderPromise) await this.view.renderPromise;
                    await this.view.renderPage(snapshot, isPreview, this.willRender);
                    this.adapter.visitRendered(this);
                    if (!isPreview) this.complete();
                }
            });
        }
    }
    followRedirect() {
        var _a;
        if (this.redirectedToLocation && !this.followedRedirect && ((_a = this.response) === null || _a === void 0 ? void 0 : _a.redirected)) {
            this.adapter.visitProposedToLocation(this.redirectedToLocation, {
                action: "replace",
                response: this.response
            });
            this.followedRedirect = true;
        }
    }
    goToSamePageAnchor() {
        if (this.isSamePage) this.render(async ()=>{
            this.cacheSnapshot();
            this.adapter.visitRendered(this);
        });
    }
    requestStarted() {
        this.startRequest();
    }
    requestPreventedHandlingResponse(request, response) {}
    async requestSucceededWithResponse(request, response) {
        const responseHTML = await response.responseHTML;
        const { redirected , statusCode  } = response;
        if (responseHTML == undefined) this.recordResponse({
            statusCode: SystemStatusCode.contentTypeMismatch,
            redirected
        });
        else {
            this.redirectedToLocation = response.redirected ? response.location : undefined;
            this.recordResponse({
                statusCode: statusCode,
                responseHTML,
                redirected
            });
        }
    }
    async requestFailedWithResponse(request, response) {
        const responseHTML = await response.responseHTML;
        const { redirected , statusCode  } = response;
        if (responseHTML == undefined) this.recordResponse({
            statusCode: SystemStatusCode.contentTypeMismatch,
            redirected
        });
        else this.recordResponse({
            statusCode: statusCode,
            responseHTML,
            redirected
        });
    }
    requestErrored(request, error) {
        this.recordResponse({
            statusCode: SystemStatusCode.networkFailure,
            redirected: false
        });
    }
    requestFinished() {
        this.finishRequest();
    }
    performScroll() {
        if (!this.scrolled) {
            if (this.action == "restore") this.scrollToRestoredPosition() || this.scrollToAnchor() || this.view.scrollToTop();
            else this.scrollToAnchor() || this.view.scrollToTop();
            if (this.isSamePage) this.delegate.visitScrolledToSamePageLocation(this.view.lastRenderedLocation, this.location);
            this.scrolled = true;
        }
    }
    scrollToRestoredPosition() {
        const { scrollPosition  } = this.restorationData;
        if (scrollPosition) {
            this.view.scrollToPosition(scrollPosition);
            return true;
        }
    }
    scrollToAnchor() {
        const anchor = getAnchor(this.location);
        if (anchor != null) {
            this.view.scrollToAnchor(anchor);
            return true;
        }
    }
    recordTimingMetric(metric) {
        this.timingMetrics[metric] = new Date().getTime();
    }
    getTimingMetrics() {
        return Object.assign({}, this.timingMetrics);
    }
    getHistoryMethodForAction(action) {
        switch(action){
            case "replace":
                return history.replaceState;
            case "advance":
            case "restore":
                return history.pushState;
        }
    }
    hasPreloadedResponse() {
        return typeof this.response == "object";
    }
    shouldIssueRequest() {
        if (this.isSamePage) return false;
        else if (this.action == "restore") return !this.hasCachedSnapshot();
        else return this.willRender;
    }
    cacheSnapshot() {
        if (!this.snapshotCached) {
            this.view.cacheSnapshot().then((snapshot)=>snapshot && this.visitCachedSnapshot(snapshot));
            this.snapshotCached = true;
        }
    }
    async render(callback) {
        this.cancelRender();
        await new Promise((resolve)=>{
            this.frame = requestAnimationFrame(()=>resolve());
        });
        await callback();
        delete this.frame;
        this.performScroll();
    }
    cancelRender() {
        if (this.frame) {
            cancelAnimationFrame(this.frame);
            delete this.frame;
        }
    }
    constructor(delegate, location1, restorationIdentifier, options = {}){
        this.identifier = uuid();
        this.timingMetrics = {};
        this.followedRedirect = false;
        this.historyChanged = false;
        this.scrolled = false;
        this.snapshotCached = false;
        this.state = VisitState.initialized;
        this.delegate = delegate;
        this.location = location1;
        this.restorationIdentifier = restorationIdentifier || uuid();
        const { action , historyChanged , referrer , snapshotHTML , response , visitCachedSnapshot , willRender  } = Object.assign(Object.assign({}, defaultOptions), options);
        this.action = action;
        this.historyChanged = historyChanged;
        this.referrer = referrer;
        this.snapshotHTML = snapshotHTML;
        this.response = response;
        this.isSamePage = this.delegate.locationWithActionIsSamePage(this.location, this.action);
        this.visitCachedSnapshot = visitCachedSnapshot;
        this.willRender = willRender;
        this.scrolled = !willRender;
    }
}
function isSuccessful(statusCode) {
    return statusCode >= 200 && statusCode < 300;
}
class BrowserAdapter {
    visitProposedToLocation(location1, options) {
        this.navigator.startVisit(location1, uuid(), options);
    }
    visitStarted(visit) {
        visit.loadCachedSnapshot();
        visit.issueRequest();
        visit.changeHistory();
        visit.goToSamePageAnchor();
    }
    visitRequestStarted(visit) {
        this.progressBar.setValue(0);
        if (visit.hasCachedSnapshot() || visit.action != "restore") this.showVisitProgressBarAfterDelay();
        else this.showProgressBar();
    }
    visitRequestCompleted(visit) {
        visit.loadResponse();
    }
    visitRequestFailedWithStatusCode(visit, statusCode) {
        switch(statusCode){
            case SystemStatusCode.networkFailure:
            case SystemStatusCode.timeoutFailure:
            case SystemStatusCode.contentTypeMismatch:
                return this.reload();
            default:
                return visit.loadResponse();
        }
    }
    visitRequestFinished(visit) {
        this.progressBar.setValue(1);
        this.hideVisitProgressBar();
    }
    visitCompleted(visit) {}
    pageInvalidated() {
        this.reload();
    }
    visitFailed(visit) {}
    visitRendered(visit) {}
    formSubmissionStarted(formSubmission) {
        this.progressBar.setValue(0);
        this.showFormProgressBarAfterDelay();
    }
    formSubmissionFinished(formSubmission) {
        this.progressBar.setValue(1);
        this.hideFormProgressBar();
    }
    showVisitProgressBarAfterDelay() {
        this.visitProgressBarTimeout = window.setTimeout(this.showProgressBar, this.session.progressBarDelay);
    }
    hideVisitProgressBar() {
        this.progressBar.hide();
        if (this.visitProgressBarTimeout != null) {
            window.clearTimeout(this.visitProgressBarTimeout);
            delete this.visitProgressBarTimeout;
        }
    }
    showFormProgressBarAfterDelay() {
        if (this.formProgressBarTimeout == null) this.formProgressBarTimeout = window.setTimeout(this.showProgressBar, this.session.progressBarDelay);
    }
    hideFormProgressBar() {
        this.progressBar.hide();
        if (this.formProgressBarTimeout != null) {
            window.clearTimeout(this.formProgressBarTimeout);
            delete this.formProgressBarTimeout;
        }
    }
    reload() {
        window.location.reload();
    }
    get navigator() {
        return this.session.navigator;
    }
    constructor(session){
        this.progressBar = new ProgressBar;
        this.showProgressBar = ()=>{
            this.progressBar.show();
        };
        this.session = session;
    }
}
class CacheObserver {
    start() {
        if (!this.started) {
            this.started = true;
            addEventListener("turbo:before-cache", this.removeStaleElements, false);
        }
    }
    stop() {
        if (this.started) {
            this.started = false;
            removeEventListener("turbo:before-cache", this.removeStaleElements, false);
        }
    }
    removeStaleElements() {
        const staleElements = [
            ...document.querySelectorAll('[data-turbo-cache="false"]')
        ];
        for (const element of staleElements)element.remove();
    }
    constructor(){
        this.started = false;
    }
}
class FormSubmitObserver {
    start() {
        if (!this.started) {
            addEventListener("submit", this.submitCaptured, true);
            this.started = true;
        }
    }
    stop() {
        if (this.started) {
            removeEventListener("submit", this.submitCaptured, true);
            this.started = false;
        }
    }
    constructor(delegate){
        this.started = false;
        this.submitCaptured = ()=>{
            removeEventListener("submit", this.submitBubbled, false);
            addEventListener("submit", this.submitBubbled, false);
        };
        this.submitBubbled = (event)=>{
            if (!event.defaultPrevented) {
                const form = event.target instanceof HTMLFormElement ? event.target : undefined;
                const submitter = event.submitter || undefined;
                if (form) {
                    const method = (submitter === null || submitter === void 0 ? void 0 : submitter.getAttribute("formmethod")) || form.getAttribute("method");
                    if (method != "dialog" && this.delegate.willSubmitForm(form, submitter)) {
                        event.preventDefault();
                        this.delegate.formSubmitted(form, submitter);
                    }
                }
            }
        };
        this.delegate = delegate;
    }
}
class FrameRedirector {
    start() {
        this.linkInterceptor.start();
        this.formInterceptor.start();
    }
    stop() {
        this.linkInterceptor.stop();
        this.formInterceptor.stop();
    }
    shouldInterceptLinkClick(element, url) {
        return this.shouldRedirect(element);
    }
    linkClickIntercepted(element, url) {
        const frame = this.findFrameElement(element);
        if (frame) frame.delegate.linkClickIntercepted(element, url);
    }
    shouldInterceptFormSubmission(element, submitter) {
        return this.shouldSubmit(element, submitter);
    }
    formSubmissionIntercepted(element, submitter) {
        const frame = this.findFrameElement(element, submitter);
        if (frame) {
            frame.removeAttribute("reloadable");
            frame.delegate.formSubmissionIntercepted(element, submitter);
        }
    }
    shouldSubmit(form, submitter) {
        var _a;
        const action = getAction(form, submitter);
        const meta = this.element.ownerDocument.querySelector(`meta[name="turbo-root"]`);
        const rootLocation = expandURL((_a = meta === null || meta === void 0 ? void 0 : meta.content) !== null && _a !== void 0 ? _a : "/");
        return this.shouldRedirect(form, submitter) && locationIsVisitable(action, rootLocation);
    }
    shouldRedirect(element, submitter) {
        const frame = this.findFrameElement(element, submitter);
        return frame ? frame != element.closest("turbo-frame") : false;
    }
    findFrameElement(element, submitter) {
        const id = (submitter === null || submitter === void 0 ? void 0 : submitter.getAttribute("data-turbo-frame")) || element.getAttribute("data-turbo-frame");
        if (id && id != "_top") {
            const frame = this.element.querySelector(`#${id}:not([disabled])`);
            if (frame instanceof FrameElement) return frame;
        }
    }
    constructor(element){
        this.element = element;
        this.linkInterceptor = new LinkInterceptor(this, element);
        this.formInterceptor = new FormInterceptor(this, element);
    }
}
class History {
    start() {
        if (!this.started) {
            addEventListener("popstate", this.onPopState, false);
            addEventListener("load", this.onPageLoad, false);
            this.started = true;
            this.replace(new URL(window.location.href));
        }
    }
    stop() {
        if (this.started) {
            removeEventListener("popstate", this.onPopState, false);
            removeEventListener("load", this.onPageLoad, false);
            this.started = false;
        }
    }
    push(location1, restorationIdentifier) {
        this.update(history.pushState, location1, restorationIdentifier);
    }
    replace(location1, restorationIdentifier) {
        this.update(history.replaceState, location1, restorationIdentifier);
    }
    update(method, location1, restorationIdentifier = uuid()) {
        const state = {
            turbo: {
                restorationIdentifier
            }
        };
        method.call(history, state, "", location1.href);
        this.location = location1;
        this.restorationIdentifier = restorationIdentifier;
    }
    getRestorationDataForIdentifier(restorationIdentifier) {
        return this.restorationData[restorationIdentifier] || {};
    }
    updateRestorationData(additionalData) {
        const { restorationIdentifier  } = this;
        const restorationData = this.restorationData[restorationIdentifier];
        this.restorationData[restorationIdentifier] = Object.assign(Object.assign({}, restorationData), additionalData);
    }
    assumeControlOfScrollRestoration() {
        var _a;
        if (!this.previousScrollRestoration) {
            this.previousScrollRestoration = (_a = history.scrollRestoration) !== null && _a !== void 0 ? _a : "auto";
            history.scrollRestoration = "manual";
        }
    }
    relinquishControlOfScrollRestoration() {
        if (this.previousScrollRestoration) {
            history.scrollRestoration = this.previousScrollRestoration;
            delete this.previousScrollRestoration;
        }
    }
    shouldHandlePopState() {
        return this.pageIsLoaded();
    }
    pageIsLoaded() {
        return this.pageLoaded || document.readyState == "complete";
    }
    constructor(delegate){
        this.restorationIdentifier = uuid();
        this.restorationData = {};
        this.started = false;
        this.pageLoaded = false;
        this.onPopState = (event)=>{
            if (this.shouldHandlePopState()) {
                const { turbo  } = event.state || {};
                if (turbo) {
                    this.location = new URL(window.location.href);
                    const { restorationIdentifier  } = turbo;
                    this.restorationIdentifier = restorationIdentifier;
                    this.delegate.historyPoppedToLocationWithRestorationIdentifier(this.location, restorationIdentifier);
                }
            }
        };
        this.onPageLoad = async (event)=>{
            await nextMicrotask();
            this.pageLoaded = true;
        };
        this.delegate = delegate;
    }
}
class LinkClickObserver {
    start() {
        if (!this.started) {
            addEventListener("click", this.clickCaptured, true);
            this.started = true;
        }
    }
    stop() {
        if (this.started) {
            removeEventListener("click", this.clickCaptured, true);
            this.started = false;
        }
    }
    clickEventIsSignificant(event) {
        return !(event.target && event.target.isContentEditable || event.defaultPrevented || event.which > 1 || event.altKey || event.ctrlKey || event.metaKey || event.shiftKey);
    }
    findLinkFromClickTarget(target) {
        if (target instanceof Element) return target.closest("a[href]:not([target^=_]):not([download])");
    }
    getLocationForLink(link) {
        return expandURL(link.getAttribute("href") || "");
    }
    constructor(delegate){
        this.started = false;
        this.clickCaptured = ()=>{
            removeEventListener("click", this.clickBubbled, false);
            addEventListener("click", this.clickBubbled, false);
        };
        this.clickBubbled = (event)=>{
            if (this.clickEventIsSignificant(event)) {
                const target = event.composedPath && event.composedPath()[0] || event.target;
                const link = this.findLinkFromClickTarget(target);
                if (link) {
                    const location1 = this.getLocationForLink(link);
                    if (this.delegate.willFollowLinkToLocation(link, location1)) {
                        event.preventDefault();
                        this.delegate.followedLinkToLocation(link, location1);
                    }
                }
            }
        };
        this.delegate = delegate;
    }
}
function isAction(action) {
    return action == "advance" || action == "replace" || action == "restore";
}
class Navigator {
    proposeVisit(location1, options = {}) {
        if (this.delegate.allowsVisitingLocationWithAction(location1, options.action)) {
            if (locationIsVisitable(location1, this.view.snapshot.rootLocation)) this.delegate.visitProposedToLocation(location1, options);
            else window.location.href = location1.toString();
        }
    }
    startVisit(locatable, restorationIdentifier, options = {}) {
        this.stop();
        this.currentVisit = new Visit(this, expandURL(locatable), restorationIdentifier, Object.assign({
            referrer: this.location
        }, options));
        this.currentVisit.start();
    }
    submitForm(form, submitter) {
        this.stop();
        this.formSubmission = new FormSubmission(this, form, submitter, true);
        this.formSubmission.start();
    }
    stop() {
        if (this.formSubmission) {
            this.formSubmission.stop();
            delete this.formSubmission;
        }
        if (this.currentVisit) {
            this.currentVisit.cancel();
            delete this.currentVisit;
        }
    }
    get adapter() {
        return this.delegate.adapter;
    }
    get view() {
        return this.delegate.view;
    }
    get history() {
        return this.delegate.history;
    }
    formSubmissionStarted(formSubmission) {
        if (typeof this.adapter.formSubmissionStarted === "function") this.adapter.formSubmissionStarted(formSubmission);
    }
    async formSubmissionSucceededWithResponse(formSubmission, fetchResponse) {
        if (formSubmission == this.formSubmission) {
            const responseHTML = await fetchResponse.responseHTML;
            if (responseHTML) {
                if (formSubmission.method != FetchMethod.get) this.view.clearSnapshotCache();
                const { statusCode , redirected  } = fetchResponse;
                const action = this.getActionForFormSubmission(formSubmission);
                const visitOptions = {
                    action,
                    response: {
                        statusCode,
                        responseHTML,
                        redirected
                    }
                };
                this.proposeVisit(fetchResponse.location, visitOptions);
            }
        }
    }
    async formSubmissionFailedWithResponse(formSubmission, fetchResponse) {
        const responseHTML = await fetchResponse.responseHTML;
        if (responseHTML) {
            const snapshot = PageSnapshot.fromHTMLString(responseHTML);
            if (fetchResponse.serverError) await this.view.renderError(snapshot);
            else await this.view.renderPage(snapshot);
            this.view.scrollToTop();
            this.view.clearSnapshotCache();
        }
    }
    formSubmissionErrored(formSubmission, error) {
        console.error(error);
    }
    formSubmissionFinished(formSubmission) {
        if (typeof this.adapter.formSubmissionFinished === "function") this.adapter.formSubmissionFinished(formSubmission);
    }
    visitStarted(visit) {
        this.delegate.visitStarted(visit);
    }
    visitCompleted(visit) {
        this.delegate.visitCompleted(visit);
    }
    locationWithActionIsSamePage(location1, action) {
        const anchor = getAnchor(location1);
        const currentAnchor = getAnchor(this.view.lastRenderedLocation);
        const isRestorationToTop = action === "restore" && typeof anchor === "undefined";
        return action !== "replace" && getRequestURL(location1) === getRequestURL(this.view.lastRenderedLocation) && (isRestorationToTop || anchor != null && anchor !== currentAnchor);
    }
    visitScrolledToSamePageLocation(oldURL, newURL) {
        this.delegate.visitScrolledToSamePageLocation(oldURL, newURL);
    }
    get location() {
        return this.history.location;
    }
    get restorationIdentifier() {
        return this.history.restorationIdentifier;
    }
    getActionForFormSubmission(formSubmission) {
        const { formElement , submitter  } = formSubmission;
        const action = getAttribute("data-turbo-action", submitter, formElement);
        return isAction(action) ? action : "advance";
    }
    constructor(delegate){
        this.delegate = delegate;
    }
}
var PageStage;
(function(PageStage) {
    PageStage[PageStage["initial"] = 0] = "initial";
    PageStage[PageStage["loading"] = 1] = "loading";
    PageStage[PageStage["interactive"] = 2] = "interactive";
    PageStage[PageStage["complete"] = 3] = "complete";
})(PageStage || (PageStage = {}));
class PageObserver {
    start() {
        if (!this.started) {
            if (this.stage == PageStage.initial) this.stage = PageStage.loading;
            document.addEventListener("readystatechange", this.interpretReadyState, false);
            addEventListener("pagehide", this.pageWillUnload, false);
            this.started = true;
        }
    }
    stop() {
        if (this.started) {
            document.removeEventListener("readystatechange", this.interpretReadyState, false);
            removeEventListener("pagehide", this.pageWillUnload, false);
            this.started = false;
        }
    }
    pageIsInteractive() {
        if (this.stage == PageStage.loading) {
            this.stage = PageStage.interactive;
            this.delegate.pageBecameInteractive();
        }
    }
    pageIsComplete() {
        this.pageIsInteractive();
        if (this.stage == PageStage.interactive) {
            this.stage = PageStage.complete;
            this.delegate.pageLoaded();
        }
    }
    get readyState() {
        return document.readyState;
    }
    constructor(delegate){
        this.stage = PageStage.initial;
        this.started = false;
        this.interpretReadyState = ()=>{
            const { readyState  } = this;
            if (readyState == "interactive") this.pageIsInteractive();
            else if (readyState == "complete") this.pageIsComplete();
        };
        this.pageWillUnload = ()=>{
            this.delegate.pageWillUnload();
        };
        this.delegate = delegate;
    }
}
class ScrollObserver {
    start() {
        if (!this.started) {
            addEventListener("scroll", this.onScroll, false);
            this.onScroll();
            this.started = true;
        }
    }
    stop() {
        if (this.started) {
            removeEventListener("scroll", this.onScroll, false);
            this.started = false;
        }
    }
    updatePosition(position) {
        this.delegate.scrollPositionChanged(position);
    }
    constructor(delegate){
        this.started = false;
        this.onScroll = ()=>{
            this.updatePosition({
                x: window.pageXOffset,
                y: window.pageYOffset
            });
        };
        this.delegate = delegate;
    }
}
class StreamObserver {
    start() {
        if (!this.started) {
            this.started = true;
            addEventListener("turbo:before-fetch-response", this.inspectFetchResponse, false);
        }
    }
    stop() {
        if (this.started) {
            this.started = false;
            removeEventListener("turbo:before-fetch-response", this.inspectFetchResponse, false);
        }
    }
    connectStreamSource(source) {
        if (!this.streamSourceIsConnected(source)) {
            this.sources.add(source);
            source.addEventListener("message", this.receiveMessageEvent, false);
        }
    }
    disconnectStreamSource(source) {
        if (this.streamSourceIsConnected(source)) {
            this.sources.delete(source);
            source.removeEventListener("message", this.receiveMessageEvent, false);
        }
    }
    streamSourceIsConnected(source) {
        return this.sources.has(source);
    }
    async receiveMessageResponse(response) {
        const html = await response.responseHTML;
        if (html) this.receiveMessageHTML(html);
    }
    receiveMessageHTML(html) {
        this.delegate.receivedMessageFromStream(new StreamMessage(html));
    }
    constructor(delegate){
        this.sources = new Set;
        this.started = false;
        this.inspectFetchResponse = (event)=>{
            const response = fetchResponseFromEvent(event);
            if (response && fetchResponseIsStream(response)) {
                event.preventDefault();
                this.receiveMessageResponse(response);
            }
        };
        this.receiveMessageEvent = (event)=>{
            if (this.started && typeof event.data == "string") this.receiveMessageHTML(event.data);
        };
        this.delegate = delegate;
    }
}
function fetchResponseFromEvent(event) {
    var _a;
    const fetchResponse = (_a = event.detail) === null || _a === void 0 ? void 0 : _a.fetchResponse;
    if (fetchResponse instanceof FetchResponse) return fetchResponse;
}
function fetchResponseIsStream(response) {
    var _a;
    const contentType = (_a = response.contentType) !== null && _a !== void 0 ? _a : "";
    return contentType.startsWith(StreamMessage.contentType);
}
class ErrorRenderer extends Renderer {
    async render() {
        this.replaceHeadAndBody();
        this.activateScriptElements();
    }
    replaceHeadAndBody() {
        const { documentElement , head , body  } = document;
        documentElement.replaceChild(this.newHead, head);
        documentElement.replaceChild(this.newElement, body);
    }
    activateScriptElements() {
        for (const replaceableElement of this.scriptElements){
            const parentNode = replaceableElement.parentNode;
            if (parentNode) {
                const element = this.createScriptElement(replaceableElement);
                parentNode.replaceChild(element, replaceableElement);
            }
        }
    }
    get newHead() {
        return this.newSnapshot.headSnapshot.element;
    }
    get scriptElements() {
        return [
            ...document.documentElement.querySelectorAll("script")
        ];
    }
}
class PageRenderer extends Renderer {
    get shouldRender() {
        return this.newSnapshot.isVisitable && this.trackedElementsAreIdentical;
    }
    prepareToRender() {
        this.mergeHead();
    }
    async render() {
        if (this.willRender) this.replaceBody();
    }
    finishRendering() {
        super.finishRendering();
        if (!this.isPreview) this.focusFirstAutofocusableElement();
    }
    get currentHeadSnapshot() {
        return this.currentSnapshot.headSnapshot;
    }
    get newHeadSnapshot() {
        return this.newSnapshot.headSnapshot;
    }
    get newElement() {
        return this.newSnapshot.element;
    }
    mergeHead() {
        this.copyNewHeadStylesheetElements();
        this.copyNewHeadScriptElements();
        this.removeCurrentHeadProvisionalElements();
        this.copyNewHeadProvisionalElements();
    }
    replaceBody() {
        this.preservingPermanentElements(()=>{
            this.activateNewBody();
            this.assignNewBody();
        });
    }
    get trackedElementsAreIdentical() {
        return this.currentHeadSnapshot.trackedElementSignature == this.newHeadSnapshot.trackedElementSignature;
    }
    copyNewHeadStylesheetElements() {
        for (const element of this.newHeadStylesheetElements)document.head.appendChild(element);
    }
    copyNewHeadScriptElements() {
        for (const element of this.newHeadScriptElements)document.head.appendChild(this.createScriptElement(element));
    }
    removeCurrentHeadProvisionalElements() {
        for (const element of this.currentHeadProvisionalElements)document.head.removeChild(element);
    }
    copyNewHeadProvisionalElements() {
        for (const element of this.newHeadProvisionalElements)document.head.appendChild(element);
    }
    activateNewBody() {
        document.adoptNode(this.newElement);
        this.activateNewBodyScriptElements();
    }
    activateNewBodyScriptElements() {
        for (const inertScriptElement of this.newBodyScriptElements){
            const activatedScriptElement = this.createScriptElement(inertScriptElement);
            inertScriptElement.replaceWith(activatedScriptElement);
        }
    }
    assignNewBody() {
        if (document.body && this.newElement instanceof HTMLBodyElement) document.body.replaceWith(this.newElement);
        else document.documentElement.appendChild(this.newElement);
    }
    get newHeadStylesheetElements() {
        return this.newHeadSnapshot.getStylesheetElementsNotInSnapshot(this.currentHeadSnapshot);
    }
    get newHeadScriptElements() {
        return this.newHeadSnapshot.getScriptElementsNotInSnapshot(this.currentHeadSnapshot);
    }
    get currentHeadProvisionalElements() {
        return this.currentHeadSnapshot.provisionalElements;
    }
    get newHeadProvisionalElements() {
        return this.newHeadSnapshot.provisionalElements;
    }
    get newBodyScriptElements() {
        return this.newElement.querySelectorAll("script");
    }
}
class SnapshotCache {
    has(location1) {
        return toCacheKey(location1) in this.snapshots;
    }
    get(location1) {
        if (this.has(location1)) {
            const snapshot = this.read(location1);
            this.touch(location1);
            return snapshot;
        }
    }
    put(location1, snapshot) {
        this.write(location1, snapshot);
        this.touch(location1);
        return snapshot;
    }
    clear() {
        this.snapshots = {};
    }
    read(location1) {
        return this.snapshots[toCacheKey(location1)];
    }
    write(location1, snapshot) {
        this.snapshots[toCacheKey(location1)] = snapshot;
    }
    touch(location1) {
        const key = toCacheKey(location1);
        const index = this.keys.indexOf(key);
        if (index > -1) this.keys.splice(index, 1);
        this.keys.unshift(key);
        this.trim();
    }
    trim() {
        for (const key of this.keys.splice(this.size))delete this.snapshots[key];
    }
    constructor(size){
        this.keys = [];
        this.snapshots = {};
        this.size = size;
    }
}
class PageView extends View {
    renderPage(snapshot, isPreview = false, willRender = true) {
        const renderer = new PageRenderer(this.snapshot, snapshot, isPreview, willRender);
        return this.render(renderer);
    }
    renderError(snapshot) {
        const renderer = new ErrorRenderer(this.snapshot, snapshot, false);
        return this.render(renderer);
    }
    clearSnapshotCache() {
        this.snapshotCache.clear();
    }
    async cacheSnapshot() {
        if (this.shouldCacheSnapshot) {
            this.delegate.viewWillCacheSnapshot();
            const { snapshot , lastRenderedLocation: location1  } = this;
            await nextEventLoopTick();
            const cachedSnapshot = snapshot.clone();
            this.snapshotCache.put(location1, cachedSnapshot);
            return cachedSnapshot;
        }
    }
    getCachedSnapshotForLocation(location1) {
        return this.snapshotCache.get(location1);
    }
    get snapshot() {
        return PageSnapshot.fromElement(this.element);
    }
    get shouldCacheSnapshot() {
        return this.snapshot.isCacheable;
    }
    constructor(){
        super(...arguments);
        this.snapshotCache = new SnapshotCache(10);
        this.lastRenderedLocation = new URL(location.href);
    }
}
class Session {
    start() {
        if (!this.started) {
            this.pageObserver.start();
            this.cacheObserver.start();
            this.linkClickObserver.start();
            this.formSubmitObserver.start();
            this.scrollObserver.start();
            this.streamObserver.start();
            this.frameRedirector.start();
            this.history.start();
            this.started = true;
            this.enabled = true;
        }
    }
    disable() {
        this.enabled = false;
    }
    stop() {
        if (this.started) {
            this.pageObserver.stop();
            this.cacheObserver.stop();
            this.linkClickObserver.stop();
            this.formSubmitObserver.stop();
            this.scrollObserver.stop();
            this.streamObserver.stop();
            this.frameRedirector.stop();
            this.history.stop();
            this.started = false;
        }
    }
    registerAdapter(adapter) {
        this.adapter = adapter;
    }
    visit(location1, options = {}) {
        this.navigator.proposeVisit(expandURL(location1), options);
    }
    connectStreamSource(source) {
        this.streamObserver.connectStreamSource(source);
    }
    disconnectStreamSource(source) {
        this.streamObserver.disconnectStreamSource(source);
    }
    renderStreamMessage(message) {
        document.documentElement.appendChild(StreamMessage.wrap(message).fragment);
    }
    clearCache() {
        this.view.clearSnapshotCache();
    }
    setProgressBarDelay(delay) {
        this.progressBarDelay = delay;
    }
    get location() {
        return this.history.location;
    }
    get restorationIdentifier() {
        return this.history.restorationIdentifier;
    }
    historyPoppedToLocationWithRestorationIdentifier(location1, restorationIdentifier) {
        if (this.enabled) this.navigator.startVisit(location1, restorationIdentifier, {
            action: "restore",
            historyChanged: true
        });
        else this.adapter.pageInvalidated();
    }
    scrollPositionChanged(position) {
        this.history.updateRestorationData({
            scrollPosition: position
        });
    }
    willFollowLinkToLocation(link, location1) {
        return this.elementDriveEnabled(link) && locationIsVisitable(location1, this.snapshot.rootLocation) && this.applicationAllowsFollowingLinkToLocation(link, location1);
    }
    followedLinkToLocation(link, location1) {
        const action = this.getActionForLink(link);
        this.convertLinkWithMethodClickToFormSubmission(link) || this.visit(location1.href, {
            action
        });
    }
    convertLinkWithMethodClickToFormSubmission(link) {
        const linkMethod = link.getAttribute("data-turbo-method");
        if (linkMethod) {
            const form = document.createElement("form");
            form.method = linkMethod;
            form.action = link.getAttribute("href") || "undefined";
            form.hidden = true;
            if (link.hasAttribute("data-turbo-confirm")) form.setAttribute("data-turbo-confirm", link.getAttribute("data-turbo-confirm"));
            const frame = this.getTargetFrameForLink(link);
            if (frame) {
                form.setAttribute("data-turbo-frame", frame);
                form.addEventListener("turbo:submit-start", ()=>form.remove());
            } else form.addEventListener("submit", ()=>form.remove());
            document.body.appendChild(form);
            return dispatch("submit", {
                cancelable: true,
                target: form
            });
        } else return false;
    }
    allowsVisitingLocationWithAction(location1, action) {
        return this.locationWithActionIsSamePage(location1, action) || this.applicationAllowsVisitingLocation(location1);
    }
    visitProposedToLocation(location1, options) {
        extendURLWithDeprecatedProperties(location1);
        this.adapter.visitProposedToLocation(location1, options);
    }
    visitStarted(visit) {
        extendURLWithDeprecatedProperties(visit.location);
        if (!visit.silent) this.notifyApplicationAfterVisitingLocation(visit.location, visit.action);
    }
    visitCompleted(visit) {
        this.notifyApplicationAfterPageLoad(visit.getTimingMetrics());
    }
    locationWithActionIsSamePage(location1, action) {
        return this.navigator.locationWithActionIsSamePage(location1, action);
    }
    visitScrolledToSamePageLocation(oldURL, newURL) {
        this.notifyApplicationAfterVisitingSamePageLocation(oldURL, newURL);
    }
    willSubmitForm(form, submitter) {
        const action = getAction(form, submitter);
        return this.elementDriveEnabled(form) && (!submitter || this.elementDriveEnabled(submitter)) && locationIsVisitable(expandURL(action), this.snapshot.rootLocation);
    }
    formSubmitted(form, submitter) {
        this.navigator.submitForm(form, submitter);
    }
    pageBecameInteractive() {
        this.view.lastRenderedLocation = this.location;
        this.notifyApplicationAfterPageLoad();
    }
    pageLoaded() {
        this.history.assumeControlOfScrollRestoration();
    }
    pageWillUnload() {
        this.history.relinquishControlOfScrollRestoration();
    }
    receivedMessageFromStream(message) {
        this.renderStreamMessage(message);
    }
    viewWillCacheSnapshot() {
        var _a;
        if (!((_a = this.navigator.currentVisit) === null || _a === void 0 ? void 0 : _a.silent)) this.notifyApplicationBeforeCachingSnapshot();
    }
    allowsImmediateRender({ element  }, resume) {
        const event = this.notifyApplicationBeforeRender(element, resume);
        return !event.defaultPrevented;
    }
    viewRenderedSnapshot(snapshot, isPreview) {
        this.view.lastRenderedLocation = this.history.location;
        this.notifyApplicationAfterRender();
    }
    viewInvalidated() {
        this.adapter.pageInvalidated();
    }
    frameLoaded(frame) {
        this.notifyApplicationAfterFrameLoad(frame);
    }
    frameRendered(fetchResponse, frame) {
        this.notifyApplicationAfterFrameRender(fetchResponse, frame);
    }
    applicationAllowsFollowingLinkToLocation(link, location1) {
        const event = this.notifyApplicationAfterClickingLinkToLocation(link, location1);
        return !event.defaultPrevented;
    }
    applicationAllowsVisitingLocation(location1) {
        const event = this.notifyApplicationBeforeVisitingLocation(location1);
        return !event.defaultPrevented;
    }
    notifyApplicationAfterClickingLinkToLocation(link, location1) {
        return dispatch("turbo:click", {
            target: link,
            detail: {
                url: location1.href
            },
            cancelable: true
        });
    }
    notifyApplicationBeforeVisitingLocation(location1) {
        return dispatch("turbo:before-visit", {
            detail: {
                url: location1.href
            },
            cancelable: true
        });
    }
    notifyApplicationAfterVisitingLocation(location1, action) {
        markAsBusy(document.documentElement);
        return dispatch("turbo:visit", {
            detail: {
                url: location1.href,
                action
            }
        });
    }
    notifyApplicationBeforeCachingSnapshot() {
        return dispatch("turbo:before-cache");
    }
    notifyApplicationBeforeRender(newBody, resume) {
        return dispatch("turbo:before-render", {
            detail: {
                newBody,
                resume
            },
            cancelable: true
        });
    }
    notifyApplicationAfterRender() {
        return dispatch("turbo:render");
    }
    notifyApplicationAfterPageLoad(timing = {}) {
        clearBusyState(document.documentElement);
        return dispatch("turbo:load", {
            detail: {
                url: this.location.href,
                timing
            }
        });
    }
    notifyApplicationAfterVisitingSamePageLocation(oldURL, newURL) {
        dispatchEvent(new HashChangeEvent("hashchange", {
            oldURL: oldURL.toString(),
            newURL: newURL.toString()
        }));
    }
    notifyApplicationAfterFrameLoad(frame) {
        return dispatch("turbo:frame-load", {
            target: frame
        });
    }
    notifyApplicationAfterFrameRender(fetchResponse, frame) {
        return dispatch("turbo:frame-render", {
            detail: {
                fetchResponse
            },
            target: frame,
            cancelable: true
        });
    }
    elementDriveEnabled(element) {
        const container = element === null || element === void 0 ? void 0 : element.closest("[data-turbo]");
        if (this.drive) {
            if (container) return container.getAttribute("data-turbo") != "false";
            else return true;
        } else {
            if (container) return container.getAttribute("data-turbo") == "true";
            else return false;
        }
    }
    getActionForLink(link) {
        const action = link.getAttribute("data-turbo-action");
        return isAction(action) ? action : "advance";
    }
    getTargetFrameForLink(link) {
        const frame = link.getAttribute("data-turbo-frame");
        if (frame) return frame;
        else {
            const container = link.closest("turbo-frame");
            if (container) return container.id;
        }
    }
    get snapshot() {
        return this.view.snapshot;
    }
    constructor(){
        this.navigator = new Navigator(this);
        this.history = new History(this);
        this.view = new PageView(this, document.documentElement);
        this.adapter = new BrowserAdapter(this);
        this.pageObserver = new PageObserver(this);
        this.cacheObserver = new CacheObserver();
        this.linkClickObserver = new LinkClickObserver(this);
        this.formSubmitObserver = new FormSubmitObserver(this);
        this.scrollObserver = new ScrollObserver(this);
        this.streamObserver = new StreamObserver(this);
        this.frameRedirector = new FrameRedirector(document.documentElement);
        this.drive = true;
        this.enabled = true;
        this.progressBarDelay = 500;
        this.started = false;
    }
}
function extendURLWithDeprecatedProperties(url) {
    Object.defineProperties(url, deprecatedLocationPropertyDescriptors);
}
const deprecatedLocationPropertyDescriptors = {
    absoluteURL: {
        get () {
            return this.toString();
        }
    }
};
const session = new Session;
const { navigator: navigator$1  } = session;
function start() {
    session.start();
}
function registerAdapter(adapter) {
    session.registerAdapter(adapter);
}
function visit(location1, options) {
    session.visit(location1, options);
}
function connectStreamSource(source) {
    session.connectStreamSource(source);
}
function disconnectStreamSource(source) {
    session.disconnectStreamSource(source);
}
function renderStreamMessage(message) {
    session.renderStreamMessage(message);
}
function clearCache() {
    session.clearCache();
}
function setProgressBarDelay(delay) {
    session.setProgressBarDelay(delay);
}
function setConfirmMethod(confirmMethod) {
    FormSubmission.confirmMethod = confirmMethod;
}
var Turbo = /*#__PURE__*/ Object.freeze({
    __proto__: null,
    navigator: navigator$1,
    session: session,
    PageRenderer: PageRenderer,
    PageSnapshot: PageSnapshot,
    start: start,
    registerAdapter: registerAdapter,
    visit: visit,
    connectStreamSource: connectStreamSource,
    disconnectStreamSource: disconnectStreamSource,
    renderStreamMessage: renderStreamMessage,
    clearCache: clearCache,
    setProgressBarDelay: setProgressBarDelay,
    setConfirmMethod: setConfirmMethod
});
class FrameController {
    connect() {
        if (!this.connected) {
            this.connected = true;
            this.reloadable = false;
            if (this.loadingStyle == FrameLoadingStyle.lazy) this.appearanceObserver.start();
            this.linkInterceptor.start();
            this.formInterceptor.start();
            this.sourceURLChanged();
        }
    }
    disconnect() {
        if (this.connected) {
            this.connected = false;
            this.appearanceObserver.stop();
            this.linkInterceptor.stop();
            this.formInterceptor.stop();
        }
    }
    disabledChanged() {
        if (this.loadingStyle == FrameLoadingStyle.eager) this.loadSourceURL();
    }
    sourceURLChanged() {
        if (this.loadingStyle == FrameLoadingStyle.eager || this.hasBeenLoaded) this.loadSourceURL();
    }
    loadingStyleChanged() {
        if (this.loadingStyle == FrameLoadingStyle.lazy) this.appearanceObserver.start();
        else {
            this.appearanceObserver.stop();
            this.loadSourceURL();
        }
    }
    async loadSourceURL() {
        if (!this.settingSourceURL && this.enabled && this.isActive && (this.reloadable || this.sourceURL != this.currentURL)) {
            const previousURL = this.currentURL;
            this.currentURL = this.sourceURL;
            if (this.sourceURL) try {
                this.element.loaded = this.visit(expandURL(this.sourceURL));
                this.appearanceObserver.stop();
                await this.element.loaded;
                this.hasBeenLoaded = true;
            } catch (error) {
                this.currentURL = previousURL;
                throw error;
            }
        }
    }
    async loadResponse(fetchResponse) {
        if (fetchResponse.redirected || fetchResponse.succeeded && fetchResponse.isHTML) this.sourceURL = fetchResponse.response.url;
        try {
            const html = await fetchResponse.responseHTML;
            if (html) {
                const { body  } = parseHTMLDocument(html);
                const snapshot = new Snapshot(await this.extractForeignFrameElement(body));
                const renderer = new FrameRenderer(this.view.snapshot, snapshot, false, false);
                if (this.view.renderPromise) await this.view.renderPromise;
                await this.view.render(renderer);
                session.frameRendered(fetchResponse, this.element);
                session.frameLoaded(this.element);
                this.fetchResponseLoaded(fetchResponse);
            }
        } catch (error) {
            console.error(error);
            this.view.invalidate();
        } finally{
            this.fetchResponseLoaded = ()=>{};
        }
    }
    elementAppearedInViewport(element) {
        this.loadSourceURL();
    }
    shouldInterceptLinkClick(element, url) {
        if (element.hasAttribute("data-turbo-method")) return false;
        else return this.shouldInterceptNavigation(element);
    }
    linkClickIntercepted(element, url) {
        this.reloadable = true;
        this.navigateFrame(element, url);
    }
    shouldInterceptFormSubmission(element, submitter) {
        return this.shouldInterceptNavigation(element, submitter);
    }
    formSubmissionIntercepted(element, submitter) {
        if (this.formSubmission) this.formSubmission.stop();
        this.reloadable = false;
        this.formSubmission = new FormSubmission(this, element, submitter);
        const { fetchRequest  } = this.formSubmission;
        this.prepareHeadersForRequest(fetchRequest.headers, fetchRequest);
        this.formSubmission.start();
    }
    prepareHeadersForRequest(headers, request) {
        headers["Turbo-Frame"] = this.id;
    }
    requestStarted(request) {
        markAsBusy(this.element);
    }
    requestPreventedHandlingResponse(request, response) {
        this.resolveVisitPromise();
    }
    async requestSucceededWithResponse(request, response) {
        await this.loadResponse(response);
        this.resolveVisitPromise();
    }
    requestFailedWithResponse(request, response) {
        console.error(response);
        this.resolveVisitPromise();
    }
    requestErrored(request, error) {
        console.error(error);
        this.resolveVisitPromise();
    }
    requestFinished(request) {
        clearBusyState(this.element);
    }
    formSubmissionStarted({ formElement  }) {
        markAsBusy(formElement, this.findFrameElement(formElement));
    }
    formSubmissionSucceededWithResponse(formSubmission, response) {
        const frame = this.findFrameElement(formSubmission.formElement, formSubmission.submitter);
        this.proposeVisitIfNavigatedWithAction(frame, formSubmission.formElement, formSubmission.submitter);
        frame.delegate.loadResponse(response);
    }
    formSubmissionFailedWithResponse(formSubmission, fetchResponse) {
        this.element.delegate.loadResponse(fetchResponse);
    }
    formSubmissionErrored(formSubmission, error) {
        console.error(error);
    }
    formSubmissionFinished({ formElement  }) {
        clearBusyState(formElement, this.findFrameElement(formElement));
    }
    allowsImmediateRender(snapshot, resume) {
        return true;
    }
    viewRenderedSnapshot(snapshot, isPreview) {}
    viewInvalidated() {}
    async visit(url) {
        var _a;
        const request = new FetchRequest(this, FetchMethod.get, url, new URLSearchParams, this.element);
        (_a = this.currentFetchRequest) === null || _a === void 0 || _a.cancel();
        this.currentFetchRequest = request;
        return new Promise((resolve)=>{
            this.resolveVisitPromise = ()=>{
                this.resolveVisitPromise = ()=>{};
                this.currentFetchRequest = null;
                resolve();
            };
            request.perform();
        });
    }
    navigateFrame(element, url, submitter) {
        const frame = this.findFrameElement(element, submitter);
        this.proposeVisitIfNavigatedWithAction(frame, element, submitter);
        frame.setAttribute("reloadable", "");
        frame.src = url;
    }
    proposeVisitIfNavigatedWithAction(frame, element, submitter) {
        const action = getAttribute("data-turbo-action", submitter, element, frame);
        if (isAction(action)) {
            const { visitCachedSnapshot  } = new SnapshotSubstitution(frame);
            frame.delegate.fetchResponseLoaded = (fetchResponse)=>{
                if (frame.src) {
                    const { statusCode , redirected  } = fetchResponse;
                    const responseHTML = frame.ownerDocument.documentElement.outerHTML;
                    const response = {
                        statusCode,
                        redirected,
                        responseHTML
                    };
                    session.visit(frame.src, {
                        action,
                        response,
                        visitCachedSnapshot,
                        willRender: false
                    });
                }
            };
        }
    }
    findFrameElement(element, submitter) {
        var _a;
        const id = getAttribute("data-turbo-frame", submitter, element) || this.element.getAttribute("target");
        return (_a = getFrameElementById(id)) !== null && _a !== void 0 ? _a : this.element;
    }
    async extractForeignFrameElement(container) {
        let element;
        const id = CSS.escape(this.id);
        try {
            if (element = activateElement(container.querySelector(`turbo-frame#${id}`), this.currentURL)) return element;
            if (element = activateElement(container.querySelector(`turbo-frame[src][recurse~=${id}]`), this.currentURL)) {
                await element.loaded;
                return await this.extractForeignFrameElement(element);
            }
            console.error(`Response has no matching <turbo-frame id="${id}"> element`);
        } catch (error) {
            console.error(error);
        }
        return new FrameElement();
    }
    formActionIsVisitable(form, submitter) {
        const action = getAction(form, submitter);
        return locationIsVisitable(expandURL(action), this.rootLocation);
    }
    shouldInterceptNavigation(element, submitter) {
        const id = getAttribute("data-turbo-frame", submitter, element) || this.element.getAttribute("target");
        if (element instanceof HTMLFormElement && !this.formActionIsVisitable(element, submitter)) return false;
        if (!this.enabled || id == "_top") return false;
        if (id) {
            const frameElement = getFrameElementById(id);
            if (frameElement) return !frameElement.disabled;
        }
        if (!session.elementDriveEnabled(element)) return false;
        if (submitter && !session.elementDriveEnabled(submitter)) return false;
        return true;
    }
    get id() {
        return this.element.id;
    }
    get enabled() {
        return !this.element.disabled;
    }
    get sourceURL() {
        if (this.element.src) return this.element.src;
    }
    get reloadable() {
        const frame = this.findFrameElement(this.element);
        return frame.hasAttribute("reloadable");
    }
    set reloadable(value) {
        const frame = this.findFrameElement(this.element);
        if (value) frame.setAttribute("reloadable", "");
        else frame.removeAttribute("reloadable");
    }
    set sourceURL(sourceURL) {
        this.settingSourceURL = true;
        this.element.src = sourceURL !== null && sourceURL !== void 0 ? sourceURL : null;
        this.currentURL = this.element.src;
        this.settingSourceURL = false;
    }
    get loadingStyle() {
        return this.element.loading;
    }
    get isLoading() {
        return this.formSubmission !== undefined || this.resolveVisitPromise() !== undefined;
    }
    get isActive() {
        return this.element.isActive && this.connected;
    }
    get rootLocation() {
        var _a;
        const meta = this.element.ownerDocument.querySelector(`meta[name="turbo-root"]`);
        const root = (_a = meta === null || meta === void 0 ? void 0 : meta.content) !== null && _a !== void 0 ? _a : "/";
        return expandURL(root);
    }
    constructor(element){
        this.fetchResponseLoaded = (fetchResponse)=>{};
        this.currentFetchRequest = null;
        this.resolveVisitPromise = ()=>{};
        this.connected = false;
        this.hasBeenLoaded = false;
        this.settingSourceURL = false;
        this.element = element;
        this.view = new FrameView(this, this.element);
        this.appearanceObserver = new AppearanceObserver(this, this.element);
        this.linkInterceptor = new LinkInterceptor(this, this.element);
        this.formInterceptor = new FormInterceptor(this, this.element);
    }
}
class SnapshotSubstitution {
    constructor(element){
        this.visitCachedSnapshot = ({ element  })=>{
            var _a;
            const { id , clone  } = this;
            (_a = element.querySelector("#" + id)) === null || _a === void 0 || _a.replaceWith(clone);
        };
        this.clone = element.cloneNode(true);
        this.id = element.id;
    }
}
function getFrameElementById(id) {
    if (id != null) {
        const element = document.getElementById(id);
        if (element instanceof FrameElement) return element;
    }
}
function activateElement(element, currentURL) {
    if (element) {
        const src = element.getAttribute("src");
        if (src != null && currentURL != null && urlsAreEqual(src, currentURL)) throw new Error(`Matching <turbo-frame id="${element.id}"> element has a source URL which references itself`);
        if (element.ownerDocument !== document) element = document.importNode(element, true);
        if (element instanceof FrameElement) {
            element.connectedCallback();
            element.disconnectedCallback();
            return element;
        }
    }
}
const StreamActions = {
    after () {
        this.targetElements.forEach((e)=>{
            var _a;
            return (_a = e.parentElement) === null || _a === void 0 ? void 0 : _a.insertBefore(this.templateContent, e.nextSibling);
        });
    },
    append () {
        this.removeDuplicateTargetChildren();
        this.targetElements.forEach((e)=>e.append(this.templateContent));
    },
    before () {
        this.targetElements.forEach((e)=>{
            var _a;
            return (_a = e.parentElement) === null || _a === void 0 ? void 0 : _a.insertBefore(this.templateContent, e);
        });
    },
    prepend () {
        this.removeDuplicateTargetChildren();
        this.targetElements.forEach((e)=>e.prepend(this.templateContent));
    },
    remove () {
        this.targetElements.forEach((e)=>e.remove());
    },
    replace () {
        this.targetElements.forEach((e)=>e.replaceWith(this.templateContent));
    },
    update () {
        this.targetElements.forEach((e)=>{
            e.innerHTML = "";
            e.append(this.templateContent);
        });
    }
};
class StreamElement extends HTMLElement {
    async connectedCallback() {
        try {
            await this.render();
        } catch (error) {
            console.error(error);
        } finally{
            this.disconnect();
        }
    }
    async render() {
        var _a;
        return (_a = this.renderPromise) !== null && _a !== void 0 ? _a : this.renderPromise = (async ()=>{
            if (this.dispatchEvent(this.beforeRenderEvent)) {
                await nextAnimationFrame();
                this.performAction();
            }
        })();
    }
    disconnect() {
        try {
            this.remove();
        } catch (_a) {}
    }
    removeDuplicateTargetChildren() {
        this.duplicateChildren.forEach((c)=>c.remove());
    }
    get duplicateChildren() {
        var _a;
        const existingChildren = this.targetElements.flatMap((e)=>[
                ...e.children
            ]).filter((c)=>!!c.id);
        const newChildrenIds = [
            ...(_a = this.templateContent) === null || _a === void 0 ? void 0 : _a.children
        ].filter((c)=>!!c.id).map((c)=>c.id);
        return existingChildren.filter((c)=>newChildrenIds.includes(c.id));
    }
    get performAction() {
        if (this.action) {
            const actionFunction = StreamActions[this.action];
            if (actionFunction) return actionFunction;
            this.raise("unknown action");
        }
        this.raise("action attribute is missing");
    }
    get targetElements() {
        if (this.target) return this.targetElementsById;
        else if (this.targets) return this.targetElementsByQuery;
        else this.raise("target or targets attribute is missing");
    }
    get templateContent() {
        return this.templateElement.content.cloneNode(true);
    }
    get templateElement() {
        if (this.firstElementChild instanceof HTMLTemplateElement) return this.firstElementChild;
        this.raise("first child element must be a <template> element");
    }
    get action() {
        return this.getAttribute("action");
    }
    get target() {
        return this.getAttribute("target");
    }
    get targets() {
        return this.getAttribute("targets");
    }
    raise(message) {
        throw new Error(`${this.description}: ${message}`);
    }
    get description() {
        var _a, _b;
        return (_b = ((_a = this.outerHTML.match(/<[^>]+>/)) !== null && _a !== void 0 ? _a : [])[0]) !== null && _b !== void 0 ? _b : "<turbo-stream>";
    }
    get beforeRenderEvent() {
        return new CustomEvent("turbo:before-stream-render", {
            bubbles: true,
            cancelable: true
        });
    }
    get targetElementsById() {
        var _a;
        const element = (_a = this.ownerDocument) === null || _a === void 0 ? void 0 : _a.getElementById(this.target);
        if (element !== null) return [
            element
        ];
        else return [];
    }
    get targetElementsByQuery() {
        var _a;
        const elements = (_a = this.ownerDocument) === null || _a === void 0 ? void 0 : _a.querySelectorAll(this.targets);
        if (elements.length !== 0) return Array.prototype.slice.call(elements);
        else return [];
    }
}
FrameElement.delegateConstructor = FrameController;
customElements.define("turbo-frame", FrameElement);
customElements.define("turbo-stream", StreamElement);
(()=>{
    let element = document.currentScript;
    if (!element) return;
    if (element.hasAttribute("data-turbo-suppress-warning")) return;
    while(element = element.parentElement){
        if (element == document.body) return console.warn(unindent(t1 || (t1 = _`
        You are loading Turbo from a <script> element inside the <body> element. This is probably not what you meant to do!

        Load your application’s JavaScript bundle inside the <head> element instead. <script> elements in <body> are evaluated with each page change.

        For more information, see: https://turbo.hotwired.dev/handbook/building#working-with-script-elements

        ——
        Suppress this warning by adding a "data-turbo-suppress-warning" attribute to: %s
      `)), element.outerHTML);
    }
})();
window.Turbo = Turbo;
start();

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"8TR10":[function(require,module,exports) {
var global = arguments[3];
function camelize(value) {
    return value.replace(/(?:[_-])([a-z0-9])/g, (_, char)=>char.toUpperCase());
}
function capitalize(value) {
    return value.charAt(0).toUpperCase() + value.slice(1);
}
function dasherize(value) {
    return value.replace(/([A-Z])/g, (_, char)=>`-${char.toLowerCase()}`);
}
function readInheritableStaticArrayValues(constructor, propertyName) {
    const ancestors = getAncestorsForConstructor(constructor);
    return Array.from(ancestors.reduce((values, constructor2)=>{
        getOwnStaticArrayValues(constructor2, propertyName).forEach((name)=>values.add(name));
        return values;
    }, /* @__PURE__ */ new Set()));
}
function readInheritableStaticObjectPairs(constructor, propertyName) {
    const ancestors = getAncestorsForConstructor(constructor);
    return ancestors.reduce((pairs, constructor2)=>{
        pairs.push(...getOwnStaticObjectPairs(constructor2, propertyName));
        return pairs;
    }, []);
}
function getAncestorsForConstructor(constructor) {
    const ancestors = [];
    while(constructor){
        ancestors.push(constructor);
        constructor = Object.getPrototypeOf(constructor);
    }
    return ancestors.reverse();
}
function getOwnStaticArrayValues(constructor, propertyName) {
    const definition = constructor[propertyName];
    return Array.isArray(definition) ? definition : [];
}
function getOwnStaticObjectPairs(constructor, propertyName) {
    const definition = constructor[propertyName];
    return definition ? Object.keys(definition).map((key)=>[
            key,
            definition[key]
        ]) : [];
}
(()=>{
    function extendWithReflect(constructor) {
        function extended() {
            return Reflect.construct(constructor, arguments, new.target);
        }
        extended.prototype = Object.create(constructor.prototype, {
            constructor: {
                value: extended
            }
        });
        Reflect.setPrototypeOf(extended, constructor);
        return extended;
    }
    function testReflectExtension() {
        const a = function() {
            this.a.call(this);
        };
        const b = extendWithReflect(a);
        b.prototype.a = function() {};
        return new b();
    }
    try {
        testReflectExtension();
        return extendWithReflect;
    } catch (error) {
        return (constructor)=>class extended extends constructor {
            };
    }
})();
function ClassPropertiesBlessing(constructor) {
    const classes = readInheritableStaticArrayValues(constructor, "classes");
    return classes.reduce((properties, classDefinition)=>{
        return Object.assign(properties, propertiesForClassDefinition(classDefinition));
    }, {});
}
function propertiesForClassDefinition(key) {
    return {
        [`${key}Class`]: {
            get () {
                const { classes  } = this;
                if (classes.has(key)) return classes.get(key);
                else {
                    const attribute = classes.getAttributeName(key);
                    throw new Error(`Missing attribute "${attribute}"`);
                }
            }
        },
        [`${key}Classes`]: {
            get () {
                return this.classes.getAll(key);
            }
        },
        [`has${capitalize(key)}Class`]: {
            get () {
                return this.classes.has(key);
            }
        }
    };
}
function TargetPropertiesBlessing(constructor) {
    const targets = readInheritableStaticArrayValues(constructor, "targets");
    return targets.reduce((properties, targetDefinition)=>{
        return Object.assign(properties, propertiesForTargetDefinition(targetDefinition));
    }, {});
}
function propertiesForTargetDefinition(name) {
    return {
        [`${name}Target`]: {
            get () {
                const target = this.targets.find(name);
                if (target) return target;
                else throw new Error(`Missing target element "${name}" for "${this.identifier}" controller`);
            }
        },
        [`${name}Targets`]: {
            get () {
                return this.targets.findAll(name);
            }
        },
        [`has${capitalize(name)}Target`]: {
            get () {
                return this.targets.has(name);
            }
        }
    };
}
function ValuePropertiesBlessing(constructor) {
    const valueDefinitionPairs = readInheritableStaticObjectPairs(constructor, "values");
    const propertyDescriptorMap = {
        valueDescriptorMap: {
            get () {
                return valueDefinitionPairs.reduce((result, valueDefinitionPair)=>{
                    const valueDescriptor = parseValueDefinitionPair(valueDefinitionPair, this.identifier);
                    const attributeName = this.data.getAttributeNameForKey(valueDescriptor.key);
                    return Object.assign(result, {
                        [attributeName]: valueDescriptor
                    });
                }, {});
            }
        }
    };
    return valueDefinitionPairs.reduce((properties, valueDefinitionPair)=>{
        return Object.assign(properties, propertiesForValueDefinitionPair(valueDefinitionPair));
    }, propertyDescriptorMap);
}
function propertiesForValueDefinitionPair(valueDefinitionPair, controller) {
    const definition = parseValueDefinitionPair(valueDefinitionPair, controller);
    const { key , name , reader: read , writer: write  } = definition;
    return {
        [name]: {
            get () {
                const value = this.data.get(key);
                if (value !== null) return read(value);
                else return definition.defaultValue;
            },
            set (value) {
                if (value === void 0) this.data.delete(key);
                else this.data.set(key, write(value));
            }
        },
        [`has${capitalize(name)}`]: {
            get () {
                return this.data.has(key) || definition.hasCustomDefaultValue;
            }
        }
    };
}
function parseValueDefinitionPair([token, typeDefinition], controller) {
    return valueDescriptorForTokenAndTypeDefinition({
        controller,
        token,
        typeDefinition
    });
}
function parseValueTypeConstant(constant) {
    switch(constant){
        case Array:
            return "array";
        case Boolean:
            return "boolean";
        case Number:
            return "number";
        case Object:
            return "object";
        case String:
            return "string";
    }
}
function parseValueTypeDefault(defaultValue) {
    switch(typeof defaultValue){
        case "boolean":
            return "boolean";
        case "number":
            return "number";
        case "string":
            return "string";
    }
    if (Array.isArray(defaultValue)) return "array";
    if (Object.prototype.toString.call(defaultValue) === "[object Object]") return "object";
}
function parseValueTypeObject(payload) {
    const typeFromObject = parseValueTypeConstant(payload.typeObject.type);
    if (!typeFromObject) return;
    const defaultValueType = parseValueTypeDefault(payload.typeObject.default);
    if (typeFromObject !== defaultValueType) {
        const propertyPath = payload.controller ? `${payload.controller}.${payload.token}` : payload.token;
        throw new Error(`The specified default value for the Stimulus Value "${propertyPath}" must match the defined type "${typeFromObject}". The provided default value of "${payload.typeObject.default}" is of type "${defaultValueType}".`);
    }
    return typeFromObject;
}
function parseValueTypeDefinition(payload) {
    const typeFromObject = parseValueTypeObject({
        controller: payload.controller,
        token: payload.token,
        typeObject: payload.typeDefinition
    });
    const typeFromDefaultValue = parseValueTypeDefault(payload.typeDefinition);
    const typeFromConstant = parseValueTypeConstant(payload.typeDefinition);
    const type = typeFromObject || typeFromDefaultValue || typeFromConstant;
    if (type) return type;
    const propertyPath = payload.controller ? `${payload.controller}.${payload.typeDefinition}` : payload.token;
    throw new Error(`Unknown value type "${propertyPath}" for "${payload.token}" value`);
}
function defaultValueForDefinition(typeDefinition) {
    const constant = parseValueTypeConstant(typeDefinition);
    if (constant) return defaultValuesByType[constant];
    const defaultValue = typeDefinition.default;
    if (defaultValue !== void 0) return defaultValue;
    return typeDefinition;
}
function valueDescriptorForTokenAndTypeDefinition(payload) {
    const key = `${dasherize(payload.token)}-value`;
    const type = parseValueTypeDefinition(payload);
    return {
        type,
        key,
        name: camelize(key),
        get defaultValue () {
            return defaultValueForDefinition(payload.typeDefinition);
        },
        get hasCustomDefaultValue () {
            return parseValueTypeDefault(payload.typeDefinition) !== void 0;
        },
        reader: readers[type],
        writer: writers[type] || writers.default
    };
}
const defaultValuesByType = {
    get array () {
        return [];
    },
    boolean: false,
    number: 0,
    get object () {
        return {};
    },
    string: ""
};
const readers = {
    array (value) {
        const array = JSON.parse(value);
        if (!Array.isArray(array)) throw new TypeError(`expected value of type "array" but instead got value "${value}" of type "${parseValueTypeDefault(array)}"`);
        return array;
    },
    boolean (value) {
        return !(value == "0" || String(value).toLowerCase() == "false");
    },
    number (value) {
        return Number(value);
    },
    object (value) {
        const object = JSON.parse(value);
        if (object === null || typeof object != "object" || Array.isArray(object)) throw new TypeError(`expected value of type "object" but instead got value "${value}" of type "${parseValueTypeDefault(object)}"`);
        return object;
    },
    string (value) {
        return value;
    }
};
const writers = {
    default: writeString,
    array: writeJSON,
    object: writeJSON
};
function writeJSON(value) {
    return JSON.stringify(value);
}
function writeString(value) {
    return `${value}`;
}
class Controller {
    static get shouldLoad() {
        return true;
    }
    get application() {
        return this.context.application;
    }
    get scope() {
        return this.context.scope;
    }
    get element() {
        return this.scope.element;
    }
    get identifier() {
        return this.scope.identifier;
    }
    get targets() {
        return this.scope.targets;
    }
    get classes() {
        return this.scope.classes;
    }
    get data() {
        return this.scope.data;
    }
    initialize() {}
    connect() {}
    disconnect() {}
    dispatch(eventName, { target =this.element , detail ={} , prefix =this.identifier , bubbles =true , cancelable =true  } = {}) {
        const type = prefix ? `${prefix}:${eventName}` : eventName;
        const event = new CustomEvent(type, {
            detail,
            bubbles,
            cancelable
        });
        target.dispatchEvent(event);
        return event;
    }
    constructor(context){
        this.context = context;
    }
}
Controller.blessings = [
    ClassPropertiesBlessing,
    TargetPropertiesBlessing,
    ValuePropertiesBlessing
];
Controller.targets = [];
Controller.values = {};
var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
var lodash = {
    exports: {}
};
/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */ (function(module2, exports) {
    (function() {
        var undefined$1;
        var VERSION = "4.17.21";
        var LARGE_ARRAY_SIZE = 200;
        var CORE_ERROR_TEXT = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.", FUNC_ERROR_TEXT = "Expected a function", INVALID_TEMPL_VAR_ERROR_TEXT = "Invalid `variable` option passed into `_.template`";
        var HASH_UNDEFINED = "__lodash_hash_undefined__";
        var MAX_MEMOIZE_SIZE = 500;
        var PLACEHOLDER = "__lodash_placeholder__";
        var CLONE_DEEP_FLAG = 1, CLONE_FLAT_FLAG = 2, CLONE_SYMBOLS_FLAG = 4;
        var COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2;
        var WRAP_BIND_FLAG = 1, WRAP_BIND_KEY_FLAG = 2, WRAP_CURRY_BOUND_FLAG = 4, WRAP_CURRY_FLAG = 8, WRAP_CURRY_RIGHT_FLAG = 16, WRAP_PARTIAL_FLAG = 32, WRAP_PARTIAL_RIGHT_FLAG = 64, WRAP_ARY_FLAG = 128, WRAP_REARG_FLAG = 256, WRAP_FLIP_FLAG = 512;
        var DEFAULT_TRUNC_LENGTH = 30, DEFAULT_TRUNC_OMISSION = "...";
        var HOT_COUNT = 800, HOT_SPAN = 16;
        var LAZY_FILTER_FLAG = 1, LAZY_MAP_FLAG = 2, LAZY_WHILE_FLAG = 3;
        var INFINITY = 1 / 0, MAX_SAFE_INTEGER = 9007199254740991, MAX_INTEGER = 17976931348623157e292, NAN = 0 / 0;
        var MAX_ARRAY_LENGTH = 4294967295, MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1, HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;
        var wrapFlags = [
            [
                "ary",
                WRAP_ARY_FLAG
            ],
            [
                "bind",
                WRAP_BIND_FLAG
            ],
            [
                "bindKey",
                WRAP_BIND_KEY_FLAG
            ],
            [
                "curry",
                WRAP_CURRY_FLAG
            ],
            [
                "curryRight",
                WRAP_CURRY_RIGHT_FLAG
            ],
            [
                "flip",
                WRAP_FLIP_FLAG
            ],
            [
                "partial",
                WRAP_PARTIAL_FLAG
            ],
            [
                "partialRight",
                WRAP_PARTIAL_RIGHT_FLAG
            ],
            [
                "rearg",
                WRAP_REARG_FLAG
            ]
        ];
        var argsTag = "[object Arguments]", arrayTag = "[object Array]", asyncTag = "[object AsyncFunction]", boolTag = "[object Boolean]", dateTag = "[object Date]", domExcTag = "[object DOMException]", errorTag = "[object Error]", funcTag = "[object Function]", genTag = "[object GeneratorFunction]", mapTag = "[object Map]", numberTag = "[object Number]", nullTag = "[object Null]", objectTag = "[object Object]", promiseTag = "[object Promise]", proxyTag = "[object Proxy]", regexpTag = "[object RegExp]", setTag = "[object Set]", stringTag = "[object String]", symbolTag = "[object Symbol]", undefinedTag = "[object Undefined]", weakMapTag = "[object WeakMap]", weakSetTag = "[object WeakSet]";
        var arrayBufferTag = "[object ArrayBuffer]", dataViewTag = "[object DataView]", float32Tag = "[object Float32Array]", float64Tag = "[object Float64Array]", int8Tag = "[object Int8Array]", int16Tag = "[object Int16Array]", int32Tag = "[object Int32Array]", uint8Tag = "[object Uint8Array]", uint8ClampedTag = "[object Uint8ClampedArray]", uint16Tag = "[object Uint16Array]", uint32Tag = "[object Uint32Array]";
        var reEmptyStringLeading = /\b__p \+= '';/g, reEmptyStringMiddle = /\b(__p \+=) '' \+/g, reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
        var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g, reUnescapedHtml = /[&<>"']/g, reHasEscapedHtml = RegExp(reEscapedHtml.source), reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
        var reEscape = /<%-([\s\S]+?)%>/g, reEvaluate = /<%([\s\S]+?)%>/g, reInterpolate = /<%=([\s\S]+?)%>/g;
        var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, reIsPlainProp = /^\w*$/, rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
        var reRegExpChar = /[\\^$.*+?()[\]{}|]/g, reHasRegExpChar = RegExp(reRegExpChar.source);
        var reTrimStart = /^\s+/;
        var reWhitespace = /\s/;
        var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/, reSplitDetails = /,? & /;
        var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
        var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;
        var reEscapeChar = /\\(\\)?/g;
        var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
        var reFlags = /\w*$/;
        var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
        var reIsBinary = /^0b[01]+$/i;
        var reIsHostCtor = /^\[object .+?Constructor\]$/;
        var reIsOctal = /^0o[0-7]+$/i;
        var reIsUint = /^(?:0|[1-9]\d*)$/;
        var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
        var reNoMatch = /($^)/;
        var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
        var rsAstralRange = "\ud800-\udfff", rsComboMarksRange = "\\u0300-\\u036f", reComboHalfMarksRange = "\\ufe20-\\ufe2f", rsComboSymbolsRange = "\\u20d0-\\u20ff", rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange, rsDingbatRange = "\\u2700-\\u27bf", rsLowerRange = "a-z\\xdf-\\xf6\\xf8-\\xff", rsMathOpRange = "\\xac\\xb1\\xd7\\xf7", rsNonCharRange = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", rsPunctuationRange = "\\u2000-\\u206f", rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", rsUpperRange = "A-Z\\xc0-\\xd6\\xd8-\\xde", rsVarRange = "\\ufe0e\\ufe0f", rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
        var rsApos = "['’]", rsAstral = "[" + rsAstralRange + "]", rsBreak = "[" + rsBreakRange + "]", rsCombo = "[" + rsComboRange + "]", rsDigits = "\\d+", rsDingbat = "[" + rsDingbatRange + "]", rsLower = "[" + rsLowerRange + "]", rsMisc = "[^" + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + "]", rsFitz = "\ud83c[\udffb-\udfff]", rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")", rsNonAstral = "[^" + rsAstralRange + "]", rsRegional = "(?:\ud83c[\udde6-\uddff]){2}", rsSurrPair = "[\ud800-\udbff][\udc00-\udfff]", rsUpper = "[" + rsUpperRange + "]", rsZWJ = "\\u200d";
        var rsMiscLower = "(?:" + rsLower + "|" + rsMisc + ")", rsMiscUpper = "(?:" + rsUpper + "|" + rsMisc + ")", rsOptContrLower = "(?:" + rsApos + "(?:d|ll|m|re|s|t|ve))?", rsOptContrUpper = "(?:" + rsApos + "(?:D|LL|M|RE|S|T|VE))?", reOptMod = rsModifier + "?", rsOptVar = "[" + rsVarRange + "]?", rsOptJoin = "(?:" + rsZWJ + "(?:" + [
            rsNonAstral,
            rsRegional,
            rsSurrPair
        ].join("|") + ")" + rsOptVar + reOptMod + ")*", rsOrdLower = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", rsOrdUpper = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", rsSeq = rsOptVar + reOptMod + rsOptJoin, rsEmoji = "(?:" + [
            rsDingbat,
            rsRegional,
            rsSurrPair
        ].join("|") + ")" + rsSeq, rsSymbol = "(?:" + [
            rsNonAstral + rsCombo + "?",
            rsCombo,
            rsRegional,
            rsSurrPair,
            rsAstral
        ].join("|") + ")";
        var reApos = RegExp(rsApos, "g");
        var reComboMark = RegExp(rsCombo, "g");
        var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
        var reUnicodeWord = RegExp([
            rsUpper + "?" + rsLower + "+" + rsOptContrLower + "(?=" + [
                rsBreak,
                rsUpper,
                "$"
            ].join("|") + ")",
            rsMiscUpper + "+" + rsOptContrUpper + "(?=" + [
                rsBreak,
                rsUpper + rsMiscLower,
                "$"
            ].join("|") + ")",
            rsUpper + "?" + rsMiscLower + "+" + rsOptContrLower,
            rsUpper + "+" + rsOptContrUpper,
            rsOrdUpper,
            rsOrdLower,
            rsDigits,
            rsEmoji
        ].join("|"), "g");
        var reHasUnicode = RegExp("[" + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + "]");
        var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
        var contextProps = [
            "Array",
            "Buffer",
            "DataView",
            "Date",
            "Error",
            "Float32Array",
            "Float64Array",
            "Function",
            "Int8Array",
            "Int16Array",
            "Int32Array",
            "Map",
            "Math",
            "Object",
            "Promise",
            "RegExp",
            "Set",
            "String",
            "Symbol",
            "TypeError",
            "Uint8Array",
            "Uint8ClampedArray",
            "Uint16Array",
            "Uint32Array",
            "WeakMap",
            "_",
            "clearTimeout",
            "isFinite",
            "parseInt",
            "setTimeout"
        ];
        var templateCounter = -1;
        var typedArrayTags = {};
        typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
        typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
        var cloneableTags = {};
        cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
        cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
        var deburredLetters = {
            "\xc0": "A",
            "\xc1": "A",
            "\xc2": "A",
            "\xc3": "A",
            "\xc4": "A",
            "\xc5": "A",
            "\xe0": "a",
            "\xe1": "a",
            "\xe2": "a",
            "\xe3": "a",
            "\xe4": "a",
            "\xe5": "a",
            "\xc7": "C",
            "\xe7": "c",
            "\xd0": "D",
            "\xf0": "d",
            "\xc8": "E",
            "\xc9": "E",
            "\xca": "E",
            "\xcb": "E",
            "\xe8": "e",
            "\xe9": "e",
            "\xea": "e",
            "\xeb": "e",
            "\xcc": "I",
            "\xcd": "I",
            "\xce": "I",
            "\xcf": "I",
            "\xec": "i",
            "\xed": "i",
            "\xee": "i",
            "\xef": "i",
            "\xd1": "N",
            "\xf1": "n",
            "\xd2": "O",
            "\xd3": "O",
            "\xd4": "O",
            "\xd5": "O",
            "\xd6": "O",
            "\xd8": "O",
            "\xf2": "o",
            "\xf3": "o",
            "\xf4": "o",
            "\xf5": "o",
            "\xf6": "o",
            "\xf8": "o",
            "\xd9": "U",
            "\xda": "U",
            "\xdb": "U",
            "\xdc": "U",
            "\xf9": "u",
            "\xfa": "u",
            "\xfb": "u",
            "\xfc": "u",
            "\xdd": "Y",
            "\xfd": "y",
            "\xff": "y",
            "\xc6": "Ae",
            "\xe6": "ae",
            "\xde": "Th",
            "\xfe": "th",
            "\xdf": "ss",
            "Ā": "A",
            "Ă": "A",
            "Ą": "A",
            "ā": "a",
            "ă": "a",
            "ą": "a",
            "Ć": "C",
            "Ĉ": "C",
            "Ċ": "C",
            "Č": "C",
            "ć": "c",
            "ĉ": "c",
            "ċ": "c",
            "č": "c",
            "Ď": "D",
            "Đ": "D",
            "ď": "d",
            "đ": "d",
            "Ē": "E",
            "Ĕ": "E",
            "Ė": "E",
            "Ę": "E",
            "Ě": "E",
            "ē": "e",
            "ĕ": "e",
            "ė": "e",
            "ę": "e",
            "ě": "e",
            "Ĝ": "G",
            "Ğ": "G",
            "Ġ": "G",
            "Ģ": "G",
            "ĝ": "g",
            "ğ": "g",
            "ġ": "g",
            "ģ": "g",
            "Ĥ": "H",
            "Ħ": "H",
            "ĥ": "h",
            "ħ": "h",
            "Ĩ": "I",
            "Ī": "I",
            "Ĭ": "I",
            "Į": "I",
            "İ": "I",
            "ĩ": "i",
            "ī": "i",
            "ĭ": "i",
            "į": "i",
            "ı": "i",
            "Ĵ": "J",
            "ĵ": "j",
            "Ķ": "K",
            "ķ": "k",
            "ĸ": "k",
            "Ĺ": "L",
            "Ļ": "L",
            "Ľ": "L",
            "Ŀ": "L",
            "Ł": "L",
            "ĺ": "l",
            "ļ": "l",
            "ľ": "l",
            "ŀ": "l",
            "ł": "l",
            "Ń": "N",
            "Ņ": "N",
            "Ň": "N",
            "Ŋ": "N",
            "ń": "n",
            "ņ": "n",
            "ň": "n",
            "ŋ": "n",
            "Ō": "O",
            "Ŏ": "O",
            "Ő": "O",
            "ō": "o",
            "ŏ": "o",
            "ő": "o",
            "Ŕ": "R",
            "Ŗ": "R",
            "Ř": "R",
            "ŕ": "r",
            "ŗ": "r",
            "ř": "r",
            "Ś": "S",
            "Ŝ": "S",
            "Ş": "S",
            "Š": "S",
            "ś": "s",
            "ŝ": "s",
            "ş": "s",
            "š": "s",
            "Ţ": "T",
            "Ť": "T",
            "Ŧ": "T",
            "ţ": "t",
            "ť": "t",
            "ŧ": "t",
            "Ũ": "U",
            "Ū": "U",
            "Ŭ": "U",
            "Ů": "U",
            "Ű": "U",
            "Ų": "U",
            "ũ": "u",
            "ū": "u",
            "ŭ": "u",
            "ů": "u",
            "ű": "u",
            "ų": "u",
            "Ŵ": "W",
            "ŵ": "w",
            "Ŷ": "Y",
            "ŷ": "y",
            "Ÿ": "Y",
            "Ź": "Z",
            "Ż": "Z",
            "Ž": "Z",
            "ź": "z",
            "ż": "z",
            "ž": "z",
            "Ĳ": "IJ",
            "ĳ": "ij",
            "Œ": "Oe",
            "œ": "oe",
            "ŉ": "'n",
            "ſ": "s"
        };
        var htmlEscapes = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&quot;",
            "'": "&#39;"
        };
        var htmlUnescapes = {
            "&amp;": "&",
            "&lt;": "<",
            "&gt;": ">",
            "&quot;": '"',
            "&#39;": "'"
        };
        var stringEscapes = {
            "\\": "\\",
            "'": "'",
            "\n": "n",
            "\r": "r",
            "\u2028": "u2028",
            "\u2029": "u2029"
        };
        var freeParseFloat = parseFloat, freeParseInt = parseInt;
        var freeGlobal = typeof commonjsGlobal == "object" && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;
        var freeSelf = typeof self == "object" && self && self.Object === Object && self;
        var root = freeGlobal || freeSelf || Function("return this")();
        var freeExports = exports && !exports.nodeType && exports;
        var freeModule = freeExports && true && module2 && !module2.nodeType && module2;
        var moduleExports = freeModule && freeModule.exports === freeExports;
        var freeProcess = moduleExports && freeGlobal.process;
        var nodeUtil = function() {
            try {
                var types = freeModule && freeModule.require && freeModule.require("util").types;
                if (types) return types;
                return freeProcess && freeProcess.binding && freeProcess.binding("util");
            } catch (e) {}
        }();
        var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer, nodeIsDate = nodeUtil && nodeUtil.isDate, nodeIsMap = nodeUtil && nodeUtil.isMap, nodeIsRegExp = nodeUtil && nodeUtil.isRegExp, nodeIsSet = nodeUtil && nodeUtil.isSet, nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
        function apply(func, thisArg, args) {
            switch(args.length){
                case 0:
                    return func.call(thisArg);
                case 1:
                    return func.call(thisArg, args[0]);
                case 2:
                    return func.call(thisArg, args[0], args[1]);
                case 3:
                    return func.call(thisArg, args[0], args[1], args[2]);
            }
            return func.apply(thisArg, args);
        }
        function arrayAggregator(array, setter, iteratee, accumulator) {
            var index = -1, length = array == null ? 0 : array.length;
            while(++index < length){
                var value = array[index];
                setter(accumulator, value, iteratee(value), array);
            }
            return accumulator;
        }
        function arrayEach(array, iteratee) {
            var index = -1, length = array == null ? 0 : array.length;
            while(++index < length){
                if (iteratee(array[index], index, array) === false) break;
            }
            return array;
        }
        function arrayEachRight(array, iteratee) {
            var length = array == null ? 0 : array.length;
            while(length--){
                if (iteratee(array[length], length, array) === false) break;
            }
            return array;
        }
        function arrayEvery(array, predicate) {
            var index = -1, length = array == null ? 0 : array.length;
            while(++index < length){
                if (!predicate(array[index], index, array)) return false;
            }
            return true;
        }
        function arrayFilter(array, predicate) {
            var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
            while(++index < length){
                var value = array[index];
                if (predicate(value, index, array)) result[resIndex++] = value;
            }
            return result;
        }
        function arrayIncludes(array, value) {
            var length = array == null ? 0 : array.length;
            return !!length && baseIndexOf(array, value, 0) > -1;
        }
        function arrayIncludesWith(array, value, comparator) {
            var index = -1, length = array == null ? 0 : array.length;
            while(++index < length){
                if (comparator(value, array[index])) return true;
            }
            return false;
        }
        function arrayMap(array, iteratee) {
            var index = -1, length = array == null ? 0 : array.length, result = Array(length);
            while(++index < length)result[index] = iteratee(array[index], index, array);
            return result;
        }
        function arrayPush(array, values) {
            var index = -1, length = values.length, offset = array.length;
            while(++index < length)array[offset + index] = values[index];
            return array;
        }
        function arrayReduce(array, iteratee, accumulator, initAccum) {
            var index = -1, length = array == null ? 0 : array.length;
            if (initAccum && length) accumulator = array[++index];
            while(++index < length)accumulator = iteratee(accumulator, array[index], index, array);
            return accumulator;
        }
        function arrayReduceRight(array, iteratee, accumulator, initAccum) {
            var length = array == null ? 0 : array.length;
            if (initAccum && length) accumulator = array[--length];
            while(length--)accumulator = iteratee(accumulator, array[length], length, array);
            return accumulator;
        }
        function arraySome(array, predicate) {
            var index = -1, length = array == null ? 0 : array.length;
            while(++index < length){
                if (predicate(array[index], index, array)) return true;
            }
            return false;
        }
        var asciiSize = baseProperty("length");
        function asciiToArray(string) {
            return string.split("");
        }
        function asciiWords(string) {
            return string.match(reAsciiWord) || [];
        }
        function baseFindKey(collection, predicate, eachFunc) {
            var result;
            eachFunc(collection, function(value, key, collection2) {
                if (predicate(value, key, collection2)) {
                    result = key;
                    return false;
                }
            });
            return result;
        }
        function baseFindIndex(array, predicate, fromIndex, fromRight) {
            var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
            while(fromRight ? index-- : ++index < length){
                if (predicate(array[index], index, array)) return index;
            }
            return -1;
        }
        function baseIndexOf(array, value, fromIndex) {
            return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
        }
        function baseIndexOfWith(array, value, fromIndex, comparator) {
            var index = fromIndex - 1, length = array.length;
            while(++index < length){
                if (comparator(array[index], value)) return index;
            }
            return -1;
        }
        function baseIsNaN(value) {
            return value !== value;
        }
        function baseMean(array, iteratee) {
            var length = array == null ? 0 : array.length;
            return length ? baseSum(array, iteratee) / length : NAN;
        }
        function baseProperty(key) {
            return function(object) {
                return object == null ? undefined$1 : object[key];
            };
        }
        function basePropertyOf(object) {
            return function(key) {
                return object == null ? undefined$1 : object[key];
            };
        }
        function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
            eachFunc(collection, function(value, index, collection2) {
                accumulator = initAccum ? (initAccum = false, value) : iteratee(accumulator, value, index, collection2);
            });
            return accumulator;
        }
        function baseSortBy(array, comparer) {
            var length = array.length;
            array.sort(comparer);
            while(length--)array[length] = array[length].value;
            return array;
        }
        function baseSum(array, iteratee) {
            var result, index = -1, length = array.length;
            while(++index < length){
                var current = iteratee(array[index]);
                if (current !== undefined$1) result = result === undefined$1 ? current : result + current;
            }
            return result;
        }
        function baseTimes(n, iteratee) {
            var index = -1, result = Array(n);
            while(++index < n)result[index] = iteratee(index);
            return result;
        }
        function baseToPairs(object, props) {
            return arrayMap(props, function(key) {
                return [
                    key,
                    object[key]
                ];
            });
        }
        function baseTrim(string) {
            return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, "") : string;
        }
        function baseUnary(func) {
            return function(value) {
                return func(value);
            };
        }
        function baseValues(object, props) {
            return arrayMap(props, function(key) {
                return object[key];
            });
        }
        function cacheHas(cache, key) {
            return cache.has(key);
        }
        function charsStartIndex(strSymbols, chrSymbols) {
            var index = -1, length = strSymbols.length;
            while(++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1);
            return index;
        }
        function charsEndIndex(strSymbols, chrSymbols) {
            var index = strSymbols.length;
            while((index--) && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1);
            return index;
        }
        function countHolders(array, placeholder) {
            var length = array.length, result = 0;
            while(length--)if (array[length] === placeholder) ++result;
            return result;
        }
        var deburrLetter = basePropertyOf(deburredLetters);
        var escapeHtmlChar = basePropertyOf(htmlEscapes);
        function escapeStringChar(chr) {
            return "\\" + stringEscapes[chr];
        }
        function getValue(object, key) {
            return object == null ? undefined$1 : object[key];
        }
        function hasUnicode(string) {
            return reHasUnicode.test(string);
        }
        function hasUnicodeWord(string) {
            return reHasUnicodeWord.test(string);
        }
        function iteratorToArray(iterator) {
            var data, result = [];
            while(!(data = iterator.next()).done)result.push(data.value);
            return result;
        }
        function mapToArray(map) {
            var index = -1, result = Array(map.size);
            map.forEach(function(value, key) {
                result[++index] = [
                    key,
                    value
                ];
            });
            return result;
        }
        function overArg(func, transform) {
            return function(arg) {
                return func(transform(arg));
            };
        }
        function replaceHolders(array, placeholder) {
            var index = -1, length = array.length, resIndex = 0, result = [];
            while(++index < length){
                var value = array[index];
                if (value === placeholder || value === PLACEHOLDER) {
                    array[index] = PLACEHOLDER;
                    result[resIndex++] = index;
                }
            }
            return result;
        }
        function setToArray(set) {
            var index = -1, result = Array(set.size);
            set.forEach(function(value) {
                result[++index] = value;
            });
            return result;
        }
        function setToPairs(set) {
            var index = -1, result = Array(set.size);
            set.forEach(function(value) {
                result[++index] = [
                    value,
                    value
                ];
            });
            return result;
        }
        function strictIndexOf(array, value, fromIndex) {
            var index = fromIndex - 1, length = array.length;
            while(++index < length){
                if (array[index] === value) return index;
            }
            return -1;
        }
        function strictLastIndexOf(array, value, fromIndex) {
            var index = fromIndex + 1;
            while(index--){
                if (array[index] === value) return index;
            }
            return index;
        }
        function stringSize(string) {
            return hasUnicode(string) ? unicodeSize(string) : asciiSize(string);
        }
        function stringToArray(string) {
            return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
        }
        function trimmedEndIndex(string) {
            var index = string.length;
            while(index-- && reWhitespace.test(string.charAt(index)));
            return index;
        }
        var unescapeHtmlChar = basePropertyOf(htmlUnescapes);
        function unicodeSize(string) {
            var result = reUnicode.lastIndex = 0;
            while(reUnicode.test(string))++result;
            return result;
        }
        function unicodeToArray(string) {
            return string.match(reUnicode) || [];
        }
        function unicodeWords(string) {
            return string.match(reUnicodeWord) || [];
        }
        var runInContext = function runInContext2(context) {
            context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));
            var Array2 = context.Array, Date = context.Date, Error2 = context.Error, Function2 = context.Function, Math2 = context.Math, Object2 = context.Object, RegExp2 = context.RegExp, String2 = context.String, TypeError2 = context.TypeError;
            var arrayProto = Array2.prototype, funcProto = Function2.prototype, objectProto = Object2.prototype;
            var coreJsData = context["__core-js_shared__"];
            var funcToString = funcProto.toString;
            var hasOwnProperty = objectProto.hasOwnProperty;
            var idCounter = 0;
            var maskSrcKey = function() {
                var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
                return uid ? "Symbol(src)_1." + uid : "";
            }();
            var nativeObjectToString = objectProto.toString;
            var objectCtorString = funcToString.call(Object2);
            var oldDash = root._;
            var reIsNative = RegExp2("^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
            var Buffer = moduleExports ? context.Buffer : undefined$1, Symbol = context.Symbol, Uint8Array2 = context.Uint8Array, allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined$1, getPrototype = overArg(Object2.getPrototypeOf, Object2), objectCreate = Object2.create, propertyIsEnumerable = objectProto.propertyIsEnumerable, splice = arrayProto.splice, spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined$1, symIterator = Symbol ? Symbol.iterator : undefined$1, symToStringTag = Symbol ? Symbol.toStringTag : undefined$1;
            var defineProperty = function() {
                try {
                    var func = getNative(Object2, "defineProperty");
                    func({}, "", {});
                    return func;
                } catch (e) {}
            }();
            var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout, ctxNow = Date && Date.now !== root.Date.now && Date.now, ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;
            var nativeCeil = Math2.ceil, nativeFloor = Math2.floor, nativeGetSymbols = Object2.getOwnPropertySymbols, nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined$1, nativeIsFinite = context.isFinite, nativeJoin = arrayProto.join, nativeKeys = overArg(Object2.keys, Object2), nativeMax = Math2.max, nativeMin = Math2.min, nativeNow = Date.now, nativeParseInt = context.parseInt, nativeRandom = Math2.random, nativeReverse = arrayProto.reverse;
            var DataView = getNative(context, "DataView"), Map = getNative(context, "Map"), Promise = getNative(context, "Promise"), Set2 = getNative(context, "Set"), WeakMap = getNative(context, "WeakMap"), nativeCreate = getNative(Object2, "create");
            var metaMap = WeakMap && new WeakMap();
            var realNames = {};
            var dataViewCtorString = toSource(DataView), mapCtorString = toSource(Map), promiseCtorString = toSource(Promise), setCtorString = toSource(Set2), weakMapCtorString = toSource(WeakMap);
            var symbolProto = Symbol ? Symbol.prototype : undefined$1, symbolValueOf = symbolProto ? symbolProto.valueOf : undefined$1, symbolToString = symbolProto ? symbolProto.toString : undefined$1;
            function lodash2(value) {
                if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
                    if (value instanceof LodashWrapper) return value;
                    if (hasOwnProperty.call(value, "__wrapped__")) return wrapperClone(value);
                }
                return new LodashWrapper(value);
            }
            var baseCreate = function() {
                function object() {}
                return function(proto) {
                    if (!isObject(proto)) return {};
                    if (objectCreate) return objectCreate(proto);
                    object.prototype = proto;
                    var result2 = new object();
                    object.prototype = undefined$1;
                    return result2;
                };
            }();
            function baseLodash() {}
            function LodashWrapper(value, chainAll) {
                this.__wrapped__ = value;
                this.__actions__ = [];
                this.__chain__ = !!chainAll;
                this.__index__ = 0;
                this.__values__ = undefined$1;
            }
            lodash2.templateSettings = {
                "escape": reEscape,
                "evaluate": reEvaluate,
                "interpolate": reInterpolate,
                "variable": "",
                "imports": {
                    "_": lodash2
                }
            };
            lodash2.prototype = baseLodash.prototype;
            lodash2.prototype.constructor = lodash2;
            LodashWrapper.prototype = baseCreate(baseLodash.prototype);
            LodashWrapper.prototype.constructor = LodashWrapper;
            function LazyWrapper(value) {
                this.__wrapped__ = value;
                this.__actions__ = [];
                this.__dir__ = 1;
                this.__filtered__ = false;
                this.__iteratees__ = [];
                this.__takeCount__ = MAX_ARRAY_LENGTH;
                this.__views__ = [];
            }
            function lazyClone() {
                var result2 = new LazyWrapper(this.__wrapped__);
                result2.__actions__ = copyArray(this.__actions__);
                result2.__dir__ = this.__dir__;
                result2.__filtered__ = this.__filtered__;
                result2.__iteratees__ = copyArray(this.__iteratees__);
                result2.__takeCount__ = this.__takeCount__;
                result2.__views__ = copyArray(this.__views__);
                return result2;
            }
            function lazyReverse() {
                if (this.__filtered__) {
                    var result2 = new LazyWrapper(this);
                    result2.__dir__ = -1;
                    result2.__filtered__ = true;
                } else {
                    result2 = this.clone();
                    result2.__dir__ *= -1;
                }
                return result2;
            }
            function lazyValue() {
                var array = this.__wrapped__.value(), dir = this.__dir__, isArr = isArray(array), isRight = dir < 0, arrLength = isArr ? array.length : 0, view = getView(0, arrLength, this.__views__), start = view.start, end = view.end, length = end - start, index = isRight ? end : start - 1, iteratees = this.__iteratees__, iterLength = iteratees.length, resIndex = 0, takeCount = nativeMin(length, this.__takeCount__);
                if (!isArr || !isRight && arrLength == length && takeCount == length) return baseWrapperValue(array, this.__actions__);
                var result2 = [];
                outer: while((length--) && resIndex < takeCount){
                    index += dir;
                    var iterIndex = -1, value = array[index];
                    while(++iterIndex < iterLength){
                        var data = iteratees[iterIndex], iteratee2 = data.iteratee, type = data.type, computed = iteratee2(value);
                        if (type == LAZY_MAP_FLAG) value = computed;
                        else if (!computed) {
                            if (type == LAZY_FILTER_FLAG) continue outer;
                            else break outer;
                        }
                    }
                    result2[resIndex++] = value;
                }
                return result2;
            }
            LazyWrapper.prototype = baseCreate(baseLodash.prototype);
            LazyWrapper.prototype.constructor = LazyWrapper;
            function Hash(entries) {
                var index = -1, length = entries == null ? 0 : entries.length;
                this.clear();
                while(++index < length){
                    var entry = entries[index];
                    this.set(entry[0], entry[1]);
                }
            }
            function hashClear() {
                this.__data__ = nativeCreate ? nativeCreate(null) : {};
                this.size = 0;
            }
            function hashDelete(key) {
                var result2 = this.has(key) && delete this.__data__[key];
                this.size -= result2 ? 1 : 0;
                return result2;
            }
            function hashGet(key) {
                var data = this.__data__;
                if (nativeCreate) {
                    var result2 = data[key];
                    return result2 === HASH_UNDEFINED ? undefined$1 : result2;
                }
                return hasOwnProperty.call(data, key) ? data[key] : undefined$1;
            }
            function hashHas(key) {
                var data = this.__data__;
                return nativeCreate ? data[key] !== undefined$1 : hasOwnProperty.call(data, key);
            }
            function hashSet(key, value) {
                var data = this.__data__;
                this.size += this.has(key) ? 0 : 1;
                data[key] = nativeCreate && value === undefined$1 ? HASH_UNDEFINED : value;
                return this;
            }
            Hash.prototype.clear = hashClear;
            Hash.prototype["delete"] = hashDelete;
            Hash.prototype.get = hashGet;
            Hash.prototype.has = hashHas;
            Hash.prototype.set = hashSet;
            function ListCache(entries) {
                var index = -1, length = entries == null ? 0 : entries.length;
                this.clear();
                while(++index < length){
                    var entry = entries[index];
                    this.set(entry[0], entry[1]);
                }
            }
            function listCacheClear() {
                this.__data__ = [];
                this.size = 0;
            }
            function listCacheDelete(key) {
                var data = this.__data__, index = assocIndexOf(data, key);
                if (index < 0) return false;
                var lastIndex = data.length - 1;
                if (index == lastIndex) data.pop();
                else splice.call(data, index, 1);
                --this.size;
                return true;
            }
            function listCacheGet(key) {
                var data = this.__data__, index = assocIndexOf(data, key);
                return index < 0 ? undefined$1 : data[index][1];
            }
            function listCacheHas(key) {
                return assocIndexOf(this.__data__, key) > -1;
            }
            function listCacheSet(key, value) {
                var data = this.__data__, index = assocIndexOf(data, key);
                if (index < 0) {
                    ++this.size;
                    data.push([
                        key,
                        value
                    ]);
                } else data[index][1] = value;
                return this;
            }
            ListCache.prototype.clear = listCacheClear;
            ListCache.prototype["delete"] = listCacheDelete;
            ListCache.prototype.get = listCacheGet;
            ListCache.prototype.has = listCacheHas;
            ListCache.prototype.set = listCacheSet;
            function MapCache(entries) {
                var index = -1, length = entries == null ? 0 : entries.length;
                this.clear();
                while(++index < length){
                    var entry = entries[index];
                    this.set(entry[0], entry[1]);
                }
            }
            function mapCacheClear() {
                this.size = 0;
                this.__data__ = {
                    "hash": new Hash(),
                    "map": new (Map || ListCache)(),
                    "string": new Hash()
                };
            }
            function mapCacheDelete(key) {
                var result2 = getMapData(this, key)["delete"](key);
                this.size -= result2 ? 1 : 0;
                return result2;
            }
            function mapCacheGet(key) {
                return getMapData(this, key).get(key);
            }
            function mapCacheHas(key) {
                return getMapData(this, key).has(key);
            }
            function mapCacheSet(key, value) {
                var data = getMapData(this, key), size2 = data.size;
                data.set(key, value);
                this.size += data.size == size2 ? 0 : 1;
                return this;
            }
            MapCache.prototype.clear = mapCacheClear;
            MapCache.prototype["delete"] = mapCacheDelete;
            MapCache.prototype.get = mapCacheGet;
            MapCache.prototype.has = mapCacheHas;
            MapCache.prototype.set = mapCacheSet;
            function SetCache(values2) {
                var index = -1, length = values2 == null ? 0 : values2.length;
                this.__data__ = new MapCache();
                while(++index < length)this.add(values2[index]);
            }
            function setCacheAdd(value) {
                this.__data__.set(value, HASH_UNDEFINED);
                return this;
            }
            function setCacheHas(value) {
                return this.__data__.has(value);
            }
            SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
            SetCache.prototype.has = setCacheHas;
            function Stack(entries) {
                var data = this.__data__ = new ListCache(entries);
                this.size = data.size;
            }
            function stackClear() {
                this.__data__ = new ListCache();
                this.size = 0;
            }
            function stackDelete(key) {
                var data = this.__data__, result2 = data["delete"](key);
                this.size = data.size;
                return result2;
            }
            function stackGet(key) {
                return this.__data__.get(key);
            }
            function stackHas(key) {
                return this.__data__.has(key);
            }
            function stackSet(key, value) {
                var data = this.__data__;
                if (data instanceof ListCache) {
                    var pairs = data.__data__;
                    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
                        pairs.push([
                            key,
                            value
                        ]);
                        this.size = ++data.size;
                        return this;
                    }
                    data = this.__data__ = new MapCache(pairs);
                }
                data.set(key, value);
                this.size = data.size;
                return this;
            }
            Stack.prototype.clear = stackClear;
            Stack.prototype["delete"] = stackDelete;
            Stack.prototype.get = stackGet;
            Stack.prototype.has = stackHas;
            Stack.prototype.set = stackSet;
            function arrayLikeKeys(value, inherited) {
                var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result2 = skipIndexes ? baseTimes(value.length, String2) : [], length = result2.length;
                for(var key in value)if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (key == "length" || isBuff && (key == "offset" || key == "parent") || isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || isIndex(key, length)))) result2.push(key);
                return result2;
            }
            function arraySample(array) {
                var length = array.length;
                return length ? array[baseRandom(0, length - 1)] : undefined$1;
            }
            function arraySampleSize(array, n) {
                return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
            }
            function arrayShuffle(array) {
                return shuffleSelf(copyArray(array));
            }
            function assignMergeValue(object, key, value) {
                if (value !== undefined$1 && !eq(object[key], value) || value === undefined$1 && !(key in object)) baseAssignValue(object, key, value);
            }
            function assignValue(object, key, value) {
                var objValue = object[key];
                if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined$1 && !(key in object)) baseAssignValue(object, key, value);
            }
            function assocIndexOf(array, key) {
                var length = array.length;
                while(length--){
                    if (eq(array[length][0], key)) return length;
                }
                return -1;
            }
            function baseAggregator(collection, setter, iteratee2, accumulator) {
                baseEach(collection, function(value, key, collection2) {
                    setter(accumulator, value, iteratee2(value), collection2);
                });
                return accumulator;
            }
            function baseAssign(object, source) {
                return object && copyObject(source, keys(source), object);
            }
            function baseAssignIn(object, source) {
                return object && copyObject(source, keysIn(source), object);
            }
            function baseAssignValue(object, key, value) {
                if (key == "__proto__" && defineProperty) defineProperty(object, key, {
                    "configurable": true,
                    "enumerable": true,
                    "value": value,
                    "writable": true
                });
                else object[key] = value;
            }
            function baseAt(object, paths) {
                var index = -1, length = paths.length, result2 = Array2(length), skip = object == null;
                while(++index < length)result2[index] = skip ? undefined$1 : get(object, paths[index]);
                return result2;
            }
            function baseClamp(number, lower, upper) {
                if (number === number) {
                    if (upper !== undefined$1) number = number <= upper ? number : upper;
                    if (lower !== undefined$1) number = number >= lower ? number : lower;
                }
                return number;
            }
            function baseClone(value, bitmask, customizer, key, object, stack) {
                var result2, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
                if (customizer) result2 = object ? customizer(value, key, object, stack) : customizer(value);
                if (result2 !== undefined$1) return result2;
                if (!isObject(value)) return value;
                var isArr = isArray(value);
                if (isArr) {
                    result2 = initCloneArray(value);
                    if (!isDeep) return copyArray(value, result2);
                } else {
                    var tag = getTag(value), isFunc = tag == funcTag || tag == genTag;
                    if (isBuffer(value)) return cloneBuffer(value, isDeep);
                    if (tag == objectTag || tag == argsTag || isFunc && !object) {
                        result2 = isFlat || isFunc ? {} : initCloneObject(value);
                        if (!isDeep) return isFlat ? copySymbolsIn(value, baseAssignIn(result2, value)) : copySymbols(value, baseAssign(result2, value));
                    } else {
                        if (!cloneableTags[tag]) return object ? value : {};
                        result2 = initCloneByTag(value, tag, isDeep);
                    }
                }
                stack || (stack = new Stack());
                var stacked = stack.get(value);
                if (stacked) return stacked;
                stack.set(value, result2);
                if (isSet(value)) value.forEach(function(subValue) {
                    result2.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
                });
                else if (isMap(value)) value.forEach(function(subValue, key2) {
                    result2.set(key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
                });
                var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
                var props = isArr ? undefined$1 : keysFunc(value);
                arrayEach(props || value, function(subValue, key2) {
                    if (props) {
                        key2 = subValue;
                        subValue = value[key2];
                    }
                    assignValue(result2, key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
                });
                return result2;
            }
            function baseConforms(source) {
                var props = keys(source);
                return function(object) {
                    return baseConformsTo(object, source, props);
                };
            }
            function baseConformsTo(object, source, props) {
                var length = props.length;
                if (object == null) return !length;
                object = Object2(object);
                while(length--){
                    var key = props[length], predicate = source[key], value = object[key];
                    if (value === undefined$1 && !(key in object) || !predicate(value)) return false;
                }
                return true;
            }
            function baseDelay(func, wait, args) {
                if (typeof func != "function") throw new TypeError2(FUNC_ERROR_TEXT);
                return setTimeout2(function() {
                    func.apply(undefined$1, args);
                }, wait);
            }
            function baseDifference(array, values2, iteratee2, comparator) {
                var index = -1, includes2 = arrayIncludes, isCommon = true, length = array.length, result2 = [], valuesLength = values2.length;
                if (!length) return result2;
                if (iteratee2) values2 = arrayMap(values2, baseUnary(iteratee2));
                if (comparator) {
                    includes2 = arrayIncludesWith;
                    isCommon = false;
                } else if (values2.length >= LARGE_ARRAY_SIZE) {
                    includes2 = cacheHas;
                    isCommon = false;
                    values2 = new SetCache(values2);
                }
                outer: while(++index < length){
                    var value = array[index], computed = iteratee2 == null ? value : iteratee2(value);
                    value = comparator || value !== 0 ? value : 0;
                    if (isCommon && computed === computed) {
                        var valuesIndex = valuesLength;
                        while(valuesIndex--){
                            if (values2[valuesIndex] === computed) continue outer;
                        }
                        result2.push(value);
                    } else if (!includes2(values2, computed, comparator)) result2.push(value);
                }
                return result2;
            }
            var baseEach = createBaseEach(baseForOwn);
            var baseEachRight = createBaseEach(baseForOwnRight, true);
            function baseEvery(collection, predicate) {
                var result2 = true;
                baseEach(collection, function(value, index, collection2) {
                    result2 = !!predicate(value, index, collection2);
                    return result2;
                });
                return result2;
            }
            function baseExtremum(array, iteratee2, comparator) {
                var index = -1, length = array.length;
                while(++index < length){
                    var value = array[index], current = iteratee2(value);
                    if (current != null && (computed === undefined$1 ? current === current && !isSymbol(current) : comparator(current, computed))) var computed = current, result2 = value;
                }
                return result2;
            }
            function baseFill(array, value, start, end) {
                var length = array.length;
                start = toInteger(start);
                if (start < 0) start = -start > length ? 0 : length + start;
                end = end === undefined$1 || end > length ? length : toInteger(end);
                if (end < 0) end += length;
                end = start > end ? 0 : toLength(end);
                while(start < end)array[start++] = value;
                return array;
            }
            function baseFilter(collection, predicate) {
                var result2 = [];
                baseEach(collection, function(value, index, collection2) {
                    if (predicate(value, index, collection2)) result2.push(value);
                });
                return result2;
            }
            function baseFlatten(array, depth, predicate, isStrict, result2) {
                var index = -1, length = array.length;
                predicate || (predicate = isFlattenable);
                result2 || (result2 = []);
                while(++index < length){
                    var value = array[index];
                    if (depth > 0 && predicate(value)) {
                        if (depth > 1) baseFlatten(value, depth - 1, predicate, isStrict, result2);
                        else arrayPush(result2, value);
                    } else if (!isStrict) result2[result2.length] = value;
                }
                return result2;
            }
            var baseFor = createBaseFor();
            var baseForRight = createBaseFor(true);
            function baseForOwn(object, iteratee2) {
                return object && baseFor(object, iteratee2, keys);
            }
            function baseForOwnRight(object, iteratee2) {
                return object && baseForRight(object, iteratee2, keys);
            }
            function baseFunctions(object, props) {
                return arrayFilter(props, function(key) {
                    return isFunction(object[key]);
                });
            }
            function baseGet(object, path) {
                path = castPath(path, object);
                var index = 0, length = path.length;
                while(object != null && index < length)object = object[toKey(path[index++])];
                return index && index == length ? object : undefined$1;
            }
            function baseGetAllKeys(object, keysFunc, symbolsFunc) {
                var result2 = keysFunc(object);
                return isArray(object) ? result2 : arrayPush(result2, symbolsFunc(object));
            }
            function baseGetTag(value) {
                if (value == null) return value === undefined$1 ? undefinedTag : nullTag;
                return symToStringTag && symToStringTag in Object2(value) ? getRawTag(value) : objectToString(value);
            }
            function baseGt(value, other) {
                return value > other;
            }
            function baseHas(object, key) {
                return object != null && hasOwnProperty.call(object, key);
            }
            function baseHasIn(object, key) {
                return object != null && key in Object2(object);
            }
            function baseInRange(number, start, end) {
                return number >= nativeMin(start, end) && number < nativeMax(start, end);
            }
            function baseIntersection(arrays, iteratee2, comparator) {
                var includes2 = comparator ? arrayIncludesWith : arrayIncludes, length = arrays[0].length, othLength = arrays.length, othIndex = othLength, caches = Array2(othLength), maxLength = Infinity, result2 = [];
                while(othIndex--){
                    var array = arrays[othIndex];
                    if (othIndex && iteratee2) array = arrayMap(array, baseUnary(iteratee2));
                    maxLength = nativeMin(array.length, maxLength);
                    caches[othIndex] = !comparator && (iteratee2 || length >= 120 && array.length >= 120) ? new SetCache(othIndex && array) : undefined$1;
                }
                array = arrays[0];
                var index = -1, seen = caches[0];
                outer: while(++index < length && result2.length < maxLength){
                    var value = array[index], computed = iteratee2 ? iteratee2(value) : value;
                    value = comparator || value !== 0 ? value : 0;
                    if (!(seen ? cacheHas(seen, computed) : includes2(result2, computed, comparator))) {
                        othIndex = othLength;
                        while(--othIndex){
                            var cache = caches[othIndex];
                            if (!(cache ? cacheHas(cache, computed) : includes2(arrays[othIndex], computed, comparator))) continue outer;
                        }
                        if (seen) seen.push(computed);
                        result2.push(value);
                    }
                }
                return result2;
            }
            function baseInverter(object, setter, iteratee2, accumulator) {
                baseForOwn(object, function(value, key, object2) {
                    setter(accumulator, iteratee2(value), key, object2);
                });
                return accumulator;
            }
            function baseInvoke(object, path, args) {
                path = castPath(path, object);
                object = parent(object, path);
                var func = object == null ? object : object[toKey(last(path))];
                return func == null ? undefined$1 : apply(func, object, args);
            }
            function baseIsArguments(value) {
                return isObjectLike(value) && baseGetTag(value) == argsTag;
            }
            function baseIsArrayBuffer(value) {
                return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
            }
            function baseIsDate(value) {
                return isObjectLike(value) && baseGetTag(value) == dateTag;
            }
            function baseIsEqual(value, other, bitmask, customizer, stack) {
                if (value === other) return true;
                if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) return value !== value && other !== other;
                return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
            }
            function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
                var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
                objTag = objTag == argsTag ? objectTag : objTag;
                othTag = othTag == argsTag ? objectTag : othTag;
                var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
                if (isSameTag && isBuffer(object)) {
                    if (!isBuffer(other)) return false;
                    objIsArr = true;
                    objIsObj = false;
                }
                if (isSameTag && !objIsObj) {
                    stack || (stack = new Stack());
                    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
                }
                if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
                    var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
                    if (objIsWrapped || othIsWrapped) {
                        var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
                        stack || (stack = new Stack());
                        return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
                    }
                }
                if (!isSameTag) return false;
                stack || (stack = new Stack());
                return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
            }
            function baseIsMap(value) {
                return isObjectLike(value) && getTag(value) == mapTag;
            }
            function baseIsMatch(object, source, matchData, customizer) {
                var index = matchData.length, length = index, noCustomizer = !customizer;
                if (object == null) return !length;
                object = Object2(object);
                while(index--){
                    var data = matchData[index];
                    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) return false;
                }
                while(++index < length){
                    data = matchData[index];
                    var key = data[0], objValue = object[key], srcValue = data[1];
                    if (noCustomizer && data[2]) {
                        if (objValue === undefined$1 && !(key in object)) return false;
                    } else {
                        var stack = new Stack();
                        if (customizer) var result2 = customizer(objValue, srcValue, key, object, source, stack);
                        if (!(result2 === undefined$1 ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result2)) return false;
                    }
                }
                return true;
            }
            function baseIsNative(value) {
                if (!isObject(value) || isMasked(value)) return false;
                var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
                return pattern.test(toSource(value));
            }
            function baseIsRegExp(value) {
                return isObjectLike(value) && baseGetTag(value) == regexpTag;
            }
            function baseIsSet(value) {
                return isObjectLike(value) && getTag(value) == setTag;
            }
            function baseIsTypedArray(value) {
                return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
            }
            function baseIteratee(value) {
                if (typeof value == "function") return value;
                if (value == null) return identity;
                if (typeof value == "object") return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
                return property(value);
            }
            function baseKeys(object) {
                if (!isPrototype(object)) return nativeKeys(object);
                var result2 = [];
                for(var key in Object2(object))if (hasOwnProperty.call(object, key) && key != "constructor") result2.push(key);
                return result2;
            }
            function baseKeysIn(object) {
                if (!isObject(object)) return nativeKeysIn(object);
                var isProto = isPrototype(object), result2 = [];
                for(var key in object)if (!(key == "constructor" && (isProto || !hasOwnProperty.call(object, key)))) result2.push(key);
                return result2;
            }
            function baseLt(value, other) {
                return value < other;
            }
            function baseMap(collection, iteratee2) {
                var index = -1, result2 = isArrayLike(collection) ? Array2(collection.length) : [];
                baseEach(collection, function(value, key, collection2) {
                    result2[++index] = iteratee2(value, key, collection2);
                });
                return result2;
            }
            function baseMatches(source) {
                var matchData = getMatchData(source);
                if (matchData.length == 1 && matchData[0][2]) return matchesStrictComparable(matchData[0][0], matchData[0][1]);
                return function(object) {
                    return object === source || baseIsMatch(object, source, matchData);
                };
            }
            function baseMatchesProperty(path, srcValue) {
                if (isKey(path) && isStrictComparable(srcValue)) return matchesStrictComparable(toKey(path), srcValue);
                return function(object) {
                    var objValue = get(object, path);
                    return objValue === undefined$1 && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
                };
            }
            function baseMerge(object, source, srcIndex, customizer, stack) {
                if (object === source) return;
                baseFor(source, function(srcValue, key) {
                    stack || (stack = new Stack());
                    if (isObject(srcValue)) baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
                    else {
                        var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + "", object, source, stack) : undefined$1;
                        if (newValue === undefined$1) newValue = srcValue;
                        assignMergeValue(object, key, newValue);
                    }
                }, keysIn);
            }
            function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
                var objValue = safeGet(object, key), srcValue = safeGet(source, key), stacked = stack.get(srcValue);
                if (stacked) {
                    assignMergeValue(object, key, stacked);
                    return;
                }
                var newValue = customizer ? customizer(objValue, srcValue, key + "", object, source, stack) : undefined$1;
                var isCommon = newValue === undefined$1;
                if (isCommon) {
                    var isArr = isArray(srcValue), isBuff = !isArr && isBuffer(srcValue), isTyped = !isArr && !isBuff && isTypedArray(srcValue);
                    newValue = srcValue;
                    if (isArr || isBuff || isTyped) {
                        if (isArray(objValue)) newValue = objValue;
                        else if (isArrayLikeObject(objValue)) newValue = copyArray(objValue);
                        else if (isBuff) {
                            isCommon = false;
                            newValue = cloneBuffer(srcValue, true);
                        } else if (isTyped) {
                            isCommon = false;
                            newValue = cloneTypedArray(srcValue, true);
                        } else newValue = [];
                    } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
                        newValue = objValue;
                        if (isArguments(objValue)) newValue = toPlainObject(objValue);
                        else if (!isObject(objValue) || isFunction(objValue)) newValue = initCloneObject(srcValue);
                    } else isCommon = false;
                }
                if (isCommon) {
                    stack.set(srcValue, newValue);
                    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
                    stack["delete"](srcValue);
                }
                assignMergeValue(object, key, newValue);
            }
            function baseNth(array, n) {
                var length = array.length;
                if (!length) return;
                n += n < 0 ? length : 0;
                return isIndex(n, length) ? array[n] : undefined$1;
            }
            function baseOrderBy(collection, iteratees, orders) {
                if (iteratees.length) iteratees = arrayMap(iteratees, function(iteratee2) {
                    if (isArray(iteratee2)) return function(value) {
                        return baseGet(value, iteratee2.length === 1 ? iteratee2[0] : iteratee2);
                    };
                    return iteratee2;
                });
                else iteratees = [
                    identity
                ];
                var index = -1;
                iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
                var result2 = baseMap(collection, function(value, key, collection2) {
                    var criteria = arrayMap(iteratees, function(iteratee2) {
                        return iteratee2(value);
                    });
                    return {
                        "criteria": criteria,
                        "index": ++index,
                        "value": value
                    };
                });
                return baseSortBy(result2, function(object, other) {
                    return compareMultiple(object, other, orders);
                });
            }
            function basePick(object, paths) {
                return basePickBy(object, paths, function(value, path) {
                    return hasIn(object, path);
                });
            }
            function basePickBy(object, paths, predicate) {
                var index = -1, length = paths.length, result2 = {};
                while(++index < length){
                    var path = paths[index], value = baseGet(object, path);
                    if (predicate(value, path)) baseSet(result2, castPath(path, object), value);
                }
                return result2;
            }
            function basePropertyDeep(path) {
                return function(object) {
                    return baseGet(object, path);
                };
            }
            function basePullAll(array, values2, iteratee2, comparator) {
                var indexOf2 = comparator ? baseIndexOfWith : baseIndexOf, index = -1, length = values2.length, seen = array;
                if (array === values2) values2 = copyArray(values2);
                if (iteratee2) seen = arrayMap(array, baseUnary(iteratee2));
                while(++index < length){
                    var fromIndex = 0, value = values2[index], computed = iteratee2 ? iteratee2(value) : value;
                    while((fromIndex = indexOf2(seen, computed, fromIndex, comparator)) > -1){
                        if (seen !== array) splice.call(seen, fromIndex, 1);
                        splice.call(array, fromIndex, 1);
                    }
                }
                return array;
            }
            function basePullAt(array, indexes) {
                var length = array ? indexes.length : 0, lastIndex = length - 1;
                while(length--){
                    var index = indexes[length];
                    if (length == lastIndex || index !== previous) {
                        var previous = index;
                        if (isIndex(index)) splice.call(array, index, 1);
                        else baseUnset(array, index);
                    }
                }
                return array;
            }
            function baseRandom(lower, upper) {
                return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
            }
            function baseRange(start, end, step, fromRight) {
                var index = -1, length = nativeMax(nativeCeil((end - start) / (step || 1)), 0), result2 = Array2(length);
                while(length--){
                    result2[fromRight ? length : ++index] = start;
                    start += step;
                }
                return result2;
            }
            function baseRepeat(string, n) {
                var result2 = "";
                if (!string || n < 1 || n > MAX_SAFE_INTEGER) return result2;
                do {
                    if (n % 2) result2 += string;
                    n = nativeFloor(n / 2);
                    if (n) string += string;
                }while (n);
                return result2;
            }
            function baseRest(func, start) {
                return setToString(overRest(func, start, identity), func + "");
            }
            function baseSample(collection) {
                return arraySample(values(collection));
            }
            function baseSampleSize(collection, n) {
                var array = values(collection);
                return shuffleSelf(array, baseClamp(n, 0, array.length));
            }
            function baseSet(object, path, value, customizer) {
                if (!isObject(object)) return object;
                path = castPath(path, object);
                var index = -1, length = path.length, lastIndex = length - 1, nested = object;
                while(nested != null && ++index < length){
                    var key = toKey(path[index]), newValue = value;
                    if (key === "__proto__" || key === "constructor" || key === "prototype") return object;
                    if (index != lastIndex) {
                        var objValue = nested[key];
                        newValue = customizer ? customizer(objValue, key, nested) : undefined$1;
                        if (newValue === undefined$1) newValue = isObject(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {};
                    }
                    assignValue(nested, key, newValue);
                    nested = nested[key];
                }
                return object;
            }
            var baseSetData = !metaMap ? identity : function(func, data) {
                metaMap.set(func, data);
                return func;
            };
            var baseSetToString = !defineProperty ? identity : function(func, string) {
                return defineProperty(func, "toString", {
                    "configurable": true,
                    "enumerable": false,
                    "value": constant(string),
                    "writable": true
                });
            };
            function baseShuffle(collection) {
                return shuffleSelf(values(collection));
            }
            function baseSlice(array, start, end) {
                var index = -1, length = array.length;
                if (start < 0) start = -start > length ? 0 : length + start;
                end = end > length ? length : end;
                if (end < 0) end += length;
                length = start > end ? 0 : end - start >>> 0;
                start >>>= 0;
                var result2 = Array2(length);
                while(++index < length)result2[index] = array[index + start];
                return result2;
            }
            function baseSome(collection, predicate) {
                var result2;
                baseEach(collection, function(value, index, collection2) {
                    result2 = predicate(value, index, collection2);
                    return !result2;
                });
                return !!result2;
            }
            function baseSortedIndex(array, value, retHighest) {
                var low = 0, high = array == null ? low : array.length;
                if (typeof value == "number" && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
                    while(low < high){
                        var mid = low + high >>> 1, computed = array[mid];
                        if (computed !== null && !isSymbol(computed) && (retHighest ? computed <= value : computed < value)) low = mid + 1;
                        else high = mid;
                    }
                    return high;
                }
                return baseSortedIndexBy(array, value, identity, retHighest);
            }
            function baseSortedIndexBy(array, value, iteratee2, retHighest) {
                var low = 0, high = array == null ? 0 : array.length;
                if (high === 0) return 0;
                value = iteratee2(value);
                var valIsNaN = value !== value, valIsNull = value === null, valIsSymbol = isSymbol(value), valIsUndefined = value === undefined$1;
                while(low < high){
                    var mid = nativeFloor((low + high) / 2), computed = iteratee2(array[mid]), othIsDefined = computed !== undefined$1, othIsNull = computed === null, othIsReflexive = computed === computed, othIsSymbol = isSymbol(computed);
                    if (valIsNaN) var setLow = retHighest || othIsReflexive;
                    else if (valIsUndefined) setLow = othIsReflexive && (retHighest || othIsDefined);
                    else if (valIsNull) setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
                    else if (valIsSymbol) setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
                    else if (othIsNull || othIsSymbol) setLow = false;
                    else setLow = retHighest ? computed <= value : computed < value;
                    if (setLow) low = mid + 1;
                    else high = mid;
                }
                return nativeMin(high, MAX_ARRAY_INDEX);
            }
            function baseSortedUniq(array, iteratee2) {
                var index = -1, length = array.length, resIndex = 0, result2 = [];
                while(++index < length){
                    var value = array[index], computed = iteratee2 ? iteratee2(value) : value;
                    if (!index || !eq(computed, seen)) {
                        var seen = computed;
                        result2[resIndex++] = value === 0 ? 0 : value;
                    }
                }
                return result2;
            }
            function baseToNumber(value) {
                if (typeof value == "number") return value;
                if (isSymbol(value)) return NAN;
                return +value;
            }
            function baseToString(value) {
                if (typeof value == "string") return value;
                if (isArray(value)) return arrayMap(value, baseToString) + "";
                if (isSymbol(value)) return symbolToString ? symbolToString.call(value) : "";
                var result2 = value + "";
                return result2 == "0" && 1 / value == -INFINITY ? "-0" : result2;
            }
            function baseUniq(array, iteratee2, comparator) {
                var index = -1, includes2 = arrayIncludes, length = array.length, isCommon = true, result2 = [], seen = result2;
                if (comparator) {
                    isCommon = false;
                    includes2 = arrayIncludesWith;
                } else if (length >= LARGE_ARRAY_SIZE) {
                    var set2 = iteratee2 ? null : createSet(array);
                    if (set2) return setToArray(set2);
                    isCommon = false;
                    includes2 = cacheHas;
                    seen = new SetCache();
                } else seen = iteratee2 ? [] : result2;
                outer: while(++index < length){
                    var value = array[index], computed = iteratee2 ? iteratee2(value) : value;
                    value = comparator || value !== 0 ? value : 0;
                    if (isCommon && computed === computed) {
                        var seenIndex = seen.length;
                        while(seenIndex--){
                            if (seen[seenIndex] === computed) continue outer;
                        }
                        if (iteratee2) seen.push(computed);
                        result2.push(value);
                    } else if (!includes2(seen, computed, comparator)) {
                        if (seen !== result2) seen.push(computed);
                        result2.push(value);
                    }
                }
                return result2;
            }
            function baseUnset(object, path) {
                path = castPath(path, object);
                object = parent(object, path);
                return object == null || delete object[toKey(last(path))];
            }
            function baseUpdate(object, path, updater, customizer) {
                return baseSet(object, path, updater(baseGet(object, path)), customizer);
            }
            function baseWhile(array, predicate, isDrop, fromRight) {
                var length = array.length, index = fromRight ? length : -1;
                while((fromRight ? index-- : ++index < length) && predicate(array[index], index, array));
                return isDrop ? baseSlice(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice(array, fromRight ? index + 1 : 0, fromRight ? length : index);
            }
            function baseWrapperValue(value, actions) {
                var result2 = value;
                if (result2 instanceof LazyWrapper) result2 = result2.value();
                return arrayReduce(actions, function(result3, action) {
                    return action.func.apply(action.thisArg, arrayPush([
                        result3
                    ], action.args));
                }, result2);
            }
            function baseXor(arrays, iteratee2, comparator) {
                var length = arrays.length;
                if (length < 2) return length ? baseUniq(arrays[0]) : [];
                var index = -1, result2 = Array2(length);
                while(++index < length){
                    var array = arrays[index], othIndex = -1;
                    while(++othIndex < length)if (othIndex != index) result2[index] = baseDifference(result2[index] || array, arrays[othIndex], iteratee2, comparator);
                }
                return baseUniq(baseFlatten(result2, 1), iteratee2, comparator);
            }
            function baseZipObject(props, values2, assignFunc) {
                var index = -1, length = props.length, valsLength = values2.length, result2 = {};
                while(++index < length){
                    var value = index < valsLength ? values2[index] : undefined$1;
                    assignFunc(result2, props[index], value);
                }
                return result2;
            }
            function castArrayLikeObject(value) {
                return isArrayLikeObject(value) ? value : [];
            }
            function castFunction(value) {
                return typeof value == "function" ? value : identity;
            }
            function castPath(value, object) {
                if (isArray(value)) return value;
                return isKey(value, object) ? [
                    value
                ] : stringToPath(toString(value));
            }
            var castRest = baseRest;
            function castSlice(array, start, end) {
                var length = array.length;
                end = end === undefined$1 ? length : end;
                return !start && end >= length ? array : baseSlice(array, start, end);
            }
            var clearTimeout = ctxClearTimeout || function(id) {
                return root.clearTimeout(id);
            };
            function cloneBuffer(buffer, isDeep) {
                if (isDeep) return buffer.slice();
                var length = buffer.length, result2 = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
                buffer.copy(result2);
                return result2;
            }
            function cloneArrayBuffer(arrayBuffer) {
                var result2 = new arrayBuffer.constructor(arrayBuffer.byteLength);
                new Uint8Array2(result2).set(new Uint8Array2(arrayBuffer));
                return result2;
            }
            function cloneDataView(dataView, isDeep) {
                var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
                return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
            }
            function cloneRegExp(regexp) {
                var result2 = new regexp.constructor(regexp.source, reFlags.exec(regexp));
                result2.lastIndex = regexp.lastIndex;
                return result2;
            }
            function cloneSymbol(symbol) {
                return symbolValueOf ? Object2(symbolValueOf.call(symbol)) : {};
            }
            function cloneTypedArray(typedArray, isDeep) {
                var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
                return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
            }
            function compareAscending(value, other) {
                if (value !== other) {
                    var valIsDefined = value !== undefined$1, valIsNull = value === null, valIsReflexive = value === value, valIsSymbol = isSymbol(value);
                    var othIsDefined = other !== undefined$1, othIsNull = other === null, othIsReflexive = other === other, othIsSymbol = isSymbol(other);
                    if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) return 1;
                    if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) return -1;
                }
                return 0;
            }
            function compareMultiple(object, other, orders) {
                var index = -1, objCriteria = object.criteria, othCriteria = other.criteria, length = objCriteria.length, ordersLength = orders.length;
                while(++index < length){
                    var result2 = compareAscending(objCriteria[index], othCriteria[index]);
                    if (result2) {
                        if (index >= ordersLength) return result2;
                        var order = orders[index];
                        return result2 * (order == "desc" ? -1 : 1);
                    }
                }
                return object.index - other.index;
            }
            function composeArgs(args, partials, holders, isCurried) {
                var argsIndex = -1, argsLength = args.length, holdersLength = holders.length, leftIndex = -1, leftLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result2 = Array2(leftLength + rangeLength), isUncurried = !isCurried;
                while(++leftIndex < leftLength)result2[leftIndex] = partials[leftIndex];
                while(++argsIndex < holdersLength)if (isUncurried || argsIndex < argsLength) result2[holders[argsIndex]] = args[argsIndex];
                while(rangeLength--)result2[leftIndex++] = args[argsIndex++];
                return result2;
            }
            function composeArgsRight(args, partials, holders, isCurried) {
                var argsIndex = -1, argsLength = args.length, holdersIndex = -1, holdersLength = holders.length, rightIndex = -1, rightLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result2 = Array2(rangeLength + rightLength), isUncurried = !isCurried;
                while(++argsIndex < rangeLength)result2[argsIndex] = args[argsIndex];
                var offset = argsIndex;
                while(++rightIndex < rightLength)result2[offset + rightIndex] = partials[rightIndex];
                while(++holdersIndex < holdersLength)if (isUncurried || argsIndex < argsLength) result2[offset + holders[holdersIndex]] = args[argsIndex++];
                return result2;
            }
            function copyArray(source, array) {
                var index = -1, length = source.length;
                array || (array = Array2(length));
                while(++index < length)array[index] = source[index];
                return array;
            }
            function copyObject(source, props, object, customizer) {
                var isNew = !object;
                object || (object = {});
                var index = -1, length = props.length;
                while(++index < length){
                    var key = props[index];
                    var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined$1;
                    if (newValue === undefined$1) newValue = source[key];
                    if (isNew) baseAssignValue(object, key, newValue);
                    else assignValue(object, key, newValue);
                }
                return object;
            }
            function copySymbols(source, object) {
                return copyObject(source, getSymbols(source), object);
            }
            function copySymbolsIn(source, object) {
                return copyObject(source, getSymbolsIn(source), object);
            }
            function createAggregator(setter, initializer) {
                return function(collection, iteratee2) {
                    var func = isArray(collection) ? arrayAggregator : baseAggregator, accumulator = initializer ? initializer() : {};
                    return func(collection, setter, getIteratee(iteratee2, 2), accumulator);
                };
            }
            function createAssigner(assigner) {
                return baseRest(function(object, sources) {
                    var index = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : undefined$1, guard = length > 2 ? sources[2] : undefined$1;
                    customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : undefined$1;
                    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
                        customizer = length < 3 ? undefined$1 : customizer;
                        length = 1;
                    }
                    object = Object2(object);
                    while(++index < length){
                        var source = sources[index];
                        if (source) assigner(object, source, index, customizer);
                    }
                    return object;
                });
            }
            function createBaseEach(eachFunc, fromRight) {
                return function(collection, iteratee2) {
                    if (collection == null) return collection;
                    if (!isArrayLike(collection)) return eachFunc(collection, iteratee2);
                    var length = collection.length, index = fromRight ? length : -1, iterable = Object2(collection);
                    while(fromRight ? index-- : ++index < length){
                        if (iteratee2(iterable[index], index, iterable) === false) break;
                    }
                    return collection;
                };
            }
            function createBaseFor(fromRight) {
                return function(object, iteratee2, keysFunc) {
                    var index = -1, iterable = Object2(object), props = keysFunc(object), length = props.length;
                    while(length--){
                        var key = props[fromRight ? length : ++index];
                        if (iteratee2(iterable[key], key, iterable) === false) break;
                    }
                    return object;
                };
            }
            function createBind(func, bitmask, thisArg) {
                var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
                function wrapper() {
                    var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
                    return fn.apply(isBind ? thisArg : this, arguments);
                }
                return wrapper;
            }
            function createCaseFirst(methodName) {
                return function(string) {
                    string = toString(string);
                    var strSymbols = hasUnicode(string) ? stringToArray(string) : undefined$1;
                    var chr = strSymbols ? strSymbols[0] : string.charAt(0);
                    var trailing = strSymbols ? castSlice(strSymbols, 1).join("") : string.slice(1);
                    return chr[methodName]() + trailing;
                };
            }
            function createCompounder(callback) {
                return function(string) {
                    return arrayReduce(words(deburr(string).replace(reApos, "")), callback, "");
                };
            }
            function createCtor(Ctor) {
                return function() {
                    var args = arguments;
                    switch(args.length){
                        case 0:
                            return new Ctor();
                        case 1:
                            return new Ctor(args[0]);
                        case 2:
                            return new Ctor(args[0], args[1]);
                        case 3:
                            return new Ctor(args[0], args[1], args[2]);
                        case 4:
                            return new Ctor(args[0], args[1], args[2], args[3]);
                        case 5:
                            return new Ctor(args[0], args[1], args[2], args[3], args[4]);
                        case 6:
                            return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
                        case 7:
                            return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
                    }
                    var thisBinding = baseCreate(Ctor.prototype), result2 = Ctor.apply(thisBinding, args);
                    return isObject(result2) ? result2 : thisBinding;
                };
            }
            function createCurry(func, bitmask, arity) {
                var Ctor = createCtor(func);
                function wrapper() {
                    var length = arguments.length, args = Array2(length), index = length, placeholder = getHolder(wrapper);
                    while(index--)args[index] = arguments[index];
                    var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders(args, placeholder);
                    length -= holders.length;
                    if (length < arity) return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, undefined$1, args, holders, undefined$1, undefined$1, arity - length);
                    var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
                    return apply(fn, this, args);
                }
                return wrapper;
            }
            function createFind(findIndexFunc) {
                return function(collection, predicate, fromIndex) {
                    var iterable = Object2(collection);
                    if (!isArrayLike(collection)) {
                        var iteratee2 = getIteratee(predicate, 3);
                        collection = keys(collection);
                        predicate = function(key) {
                            return iteratee2(iterable[key], key, iterable);
                        };
                    }
                    var index = findIndexFunc(collection, predicate, fromIndex);
                    return index > -1 ? iterable[iteratee2 ? collection[index] : index] : undefined$1;
                };
            }
            function createFlow(fromRight) {
                return flatRest(function(funcs) {
                    var length = funcs.length, index = length, prereq = LodashWrapper.prototype.thru;
                    if (fromRight) funcs.reverse();
                    while(index--){
                        var func = funcs[index];
                        if (typeof func != "function") throw new TypeError2(FUNC_ERROR_TEXT);
                        if (prereq && !wrapper && getFuncName(func) == "wrapper") var wrapper = new LodashWrapper([], true);
                    }
                    index = wrapper ? index : length;
                    while(++index < length){
                        func = funcs[index];
                        var funcName = getFuncName(func), data = funcName == "wrapper" ? getData(func) : undefined$1;
                        if (data && isLaziable(data[0]) && data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) && !data[4].length && data[9] == 1) wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
                        else wrapper = func.length == 1 && isLaziable(func) ? wrapper[funcName]() : wrapper.thru(func);
                    }
                    return function() {
                        var args = arguments, value = args[0];
                        if (wrapper && args.length == 1 && isArray(value)) return wrapper.plant(value).value();
                        var index2 = 0, result2 = length ? funcs[index2].apply(this, args) : value;
                        while(++index2 < length)result2 = funcs[index2].call(this, result2);
                        return result2;
                    };
                });
            }
            function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary2, arity) {
                var isAry = bitmask & WRAP_ARY_FLAG, isBind = bitmask & WRAP_BIND_FLAG, isBindKey = bitmask & WRAP_BIND_KEY_FLAG, isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG), isFlip = bitmask & WRAP_FLIP_FLAG, Ctor = isBindKey ? undefined$1 : createCtor(func);
                function wrapper() {
                    var length = arguments.length, args = Array2(length), index = length;
                    while(index--)args[index] = arguments[index];
                    if (isCurried) var placeholder = getHolder(wrapper), holdersCount = countHolders(args, placeholder);
                    if (partials) args = composeArgs(args, partials, holders, isCurried);
                    if (partialsRight) args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
                    length -= holdersCount;
                    if (isCurried && length < arity) {
                        var newHolders = replaceHolders(args, placeholder);
                        return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, thisArg, args, newHolders, argPos, ary2, arity - length);
                    }
                    var thisBinding = isBind ? thisArg : this, fn = isBindKey ? thisBinding[func] : func;
                    length = args.length;
                    if (argPos) args = reorder(args, argPos);
                    else if (isFlip && length > 1) args.reverse();
                    if (isAry && ary2 < length) args.length = ary2;
                    if (this && this !== root && this instanceof wrapper) fn = Ctor || createCtor(fn);
                    return fn.apply(thisBinding, args);
                }
                return wrapper;
            }
            function createInverter(setter, toIteratee) {
                return function(object, iteratee2) {
                    return baseInverter(object, setter, toIteratee(iteratee2), {});
                };
            }
            function createMathOperation(operator, defaultValue) {
                return function(value, other) {
                    var result2;
                    if (value === undefined$1 && other === undefined$1) return defaultValue;
                    if (value !== undefined$1) result2 = value;
                    if (other !== undefined$1) {
                        if (result2 === undefined$1) return other;
                        if (typeof value == "string" || typeof other == "string") {
                            value = baseToString(value);
                            other = baseToString(other);
                        } else {
                            value = baseToNumber(value);
                            other = baseToNumber(other);
                        }
                        result2 = operator(value, other);
                    }
                    return result2;
                };
            }
            function createOver(arrayFunc) {
                return flatRest(function(iteratees) {
                    iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
                    return baseRest(function(args) {
                        var thisArg = this;
                        return arrayFunc(iteratees, function(iteratee2) {
                            return apply(iteratee2, thisArg, args);
                        });
                    });
                });
            }
            function createPadding(length, chars) {
                chars = chars === undefined$1 ? " " : baseToString(chars);
                var charsLength = chars.length;
                if (charsLength < 2) return charsLength ? baseRepeat(chars, length) : chars;
                var result2 = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
                return hasUnicode(chars) ? castSlice(stringToArray(result2), 0, length).join("") : result2.slice(0, length);
            }
            function createPartial(func, bitmask, thisArg, partials) {
                var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
                function wrapper() {
                    var argsIndex = -1, argsLength = arguments.length, leftIndex = -1, leftLength = partials.length, args = Array2(leftLength + argsLength), fn = this && this !== root && this instanceof wrapper ? Ctor : func;
                    while(++leftIndex < leftLength)args[leftIndex] = partials[leftIndex];
                    while(argsLength--)args[leftIndex++] = arguments[++argsIndex];
                    return apply(fn, isBind ? thisArg : this, args);
                }
                return wrapper;
            }
            function createRange(fromRight) {
                return function(start, end, step) {
                    if (step && typeof step != "number" && isIterateeCall(start, end, step)) end = step = undefined$1;
                    start = toFinite(start);
                    if (end === undefined$1) {
                        end = start;
                        start = 0;
                    } else end = toFinite(end);
                    step = step === undefined$1 ? start < end ? 1 : -1 : toFinite(step);
                    return baseRange(start, end, step, fromRight);
                };
            }
            function createRelationalOperation(operator) {
                return function(value, other) {
                    if (!(typeof value == "string" && typeof other == "string")) {
                        value = toNumber(value);
                        other = toNumber(other);
                    }
                    return operator(value, other);
                };
            }
            function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary2, arity) {
                var isCurry = bitmask & WRAP_CURRY_FLAG, newHolders = isCurry ? holders : undefined$1, newHoldersRight = isCurry ? undefined$1 : holders, newPartials = isCurry ? partials : undefined$1, newPartialsRight = isCurry ? undefined$1 : partials;
                bitmask |= isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG;
                bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);
                if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
                var newData = [
                    func,
                    bitmask,
                    thisArg,
                    newPartials,
                    newHolders,
                    newPartialsRight,
                    newHoldersRight,
                    argPos,
                    ary2,
                    arity
                ];
                var result2 = wrapFunc.apply(undefined$1, newData);
                if (isLaziable(func)) setData(result2, newData);
                result2.placeholder = placeholder;
                return setWrapToString(result2, func, bitmask);
            }
            function createRound(methodName) {
                var func = Math2[methodName];
                return function(number, precision) {
                    number = toNumber(number);
                    precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
                    if (precision && nativeIsFinite(number)) {
                        var pair = (toString(number) + "e").split("e"), value = func(pair[0] + "e" + (+pair[1] + precision));
                        pair = (toString(value) + "e").split("e");
                        return +(pair[0] + "e" + (+pair[1] - precision));
                    }
                    return func(number);
                };
            }
            var createSet = !(Set2 && 1 / setToArray(new Set2([
                ,
                -0
            ]))[1] == INFINITY) ? noop : function(values2) {
                return new Set2(values2);
            };
            function createToPairs(keysFunc) {
                return function(object) {
                    var tag = getTag(object);
                    if (tag == mapTag) return mapToArray(object);
                    if (tag == setTag) return setToPairs(object);
                    return baseToPairs(object, keysFunc(object));
                };
            }
            function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary2, arity) {
                var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
                if (!isBindKey && typeof func != "function") throw new TypeError2(FUNC_ERROR_TEXT);
                var length = partials ? partials.length : 0;
                if (!length) {
                    bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
                    partials = holders = undefined$1;
                }
                ary2 = ary2 === undefined$1 ? ary2 : nativeMax(toInteger(ary2), 0);
                arity = arity === undefined$1 ? arity : toInteger(arity);
                length -= holders ? holders.length : 0;
                if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
                    var partialsRight = partials, holdersRight = holders;
                    partials = holders = undefined$1;
                }
                var data = isBindKey ? undefined$1 : getData(func);
                var newData = [
                    func,
                    bitmask,
                    thisArg,
                    partials,
                    holders,
                    partialsRight,
                    holdersRight,
                    argPos,
                    ary2,
                    arity
                ];
                if (data) mergeData(newData, data);
                func = newData[0];
                bitmask = newData[1];
                thisArg = newData[2];
                partials = newData[3];
                holders = newData[4];
                arity = newData[9] = newData[9] === undefined$1 ? isBindKey ? 0 : func.length : nativeMax(newData[9] - length, 0);
                if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
                if (!bitmask || bitmask == WRAP_BIND_FLAG) var result2 = createBind(func, bitmask, thisArg);
                else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) result2 = createCurry(func, bitmask, arity);
                else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) result2 = createPartial(func, bitmask, thisArg, partials);
                else result2 = createHybrid.apply(undefined$1, newData);
                var setter = data ? baseSetData : setData;
                return setWrapToString(setter(result2, newData), func, bitmask);
            }
            function customDefaultsAssignIn(objValue, srcValue, key, object) {
                if (objValue === undefined$1 || eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key)) return srcValue;
                return objValue;
            }
            function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
                if (isObject(objValue) && isObject(srcValue)) {
                    stack.set(srcValue, objValue);
                    baseMerge(objValue, srcValue, undefined$1, customDefaultsMerge, stack);
                    stack["delete"](srcValue);
                }
                return objValue;
            }
            function customOmitClone(value) {
                return isPlainObject(value) ? undefined$1 : value;
            }
            function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
                var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
                if (arrLength != othLength && !(isPartial && othLength > arrLength)) return false;
                var arrStacked = stack.get(array);
                var othStacked = stack.get(other);
                if (arrStacked && othStacked) return arrStacked == other && othStacked == array;
                var index = -1, result2 = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined$1;
                stack.set(array, other);
                stack.set(other, array);
                while(++index < arrLength){
                    var arrValue = array[index], othValue = other[index];
                    if (customizer) var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
                    if (compared !== undefined$1) {
                        if (compared) continue;
                        result2 = false;
                        break;
                    }
                    if (seen) {
                        if (!arraySome(other, function(othValue2, othIndex) {
                            if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) return seen.push(othIndex);
                        })) {
                            result2 = false;
                            break;
                        }
                    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                        result2 = false;
                        break;
                    }
                }
                stack["delete"](array);
                stack["delete"](other);
                return result2;
            }
            function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
                switch(tag){
                    case dataViewTag:
                        if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) return false;
                        object = object.buffer;
                        other = other.buffer;
                    case arrayBufferTag:
                        if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array2(object), new Uint8Array2(other))) return false;
                        return true;
                    case boolTag:
                    case dateTag:
                    case numberTag:
                        return eq(+object, +other);
                    case errorTag:
                        return object.name == other.name && object.message == other.message;
                    case regexpTag:
                    case stringTag:
                        return object == other + "";
                    case mapTag:
                        var convert = mapToArray;
                    case setTag:
                        var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
                        convert || (convert = setToArray);
                        if (object.size != other.size && !isPartial) return false;
                        var stacked = stack.get(object);
                        if (stacked) return stacked == other;
                        bitmask |= COMPARE_UNORDERED_FLAG;
                        stack.set(object, other);
                        var result2 = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
                        stack["delete"](object);
                        return result2;
                    case symbolTag:
                        if (symbolValueOf) return symbolValueOf.call(object) == symbolValueOf.call(other);
                }
                return false;
            }
            function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
                var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
                if (objLength != othLength && !isPartial) return false;
                var index = objLength;
                while(index--){
                    var key = objProps[index];
                    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) return false;
                }
                var objStacked = stack.get(object);
                var othStacked = stack.get(other);
                if (objStacked && othStacked) return objStacked == other && othStacked == object;
                var result2 = true;
                stack.set(object, other);
                stack.set(other, object);
                var skipCtor = isPartial;
                while(++index < objLength){
                    key = objProps[index];
                    var objValue = object[key], othValue = other[key];
                    if (customizer) var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
                    if (!(compared === undefined$1 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
                        result2 = false;
                        break;
                    }
                    skipCtor || (skipCtor = key == "constructor");
                }
                if (result2 && !skipCtor) {
                    var objCtor = object.constructor, othCtor = other.constructor;
                    if (objCtor != othCtor && "constructor" in object && "constructor" in other && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) result2 = false;
                }
                stack["delete"](object);
                stack["delete"](other);
                return result2;
            }
            function flatRest(func) {
                return setToString(overRest(func, undefined$1, flatten), func + "");
            }
            function getAllKeys(object) {
                return baseGetAllKeys(object, keys, getSymbols);
            }
            function getAllKeysIn(object) {
                return baseGetAllKeys(object, keysIn, getSymbolsIn);
            }
            var getData = !metaMap ? noop : function(func) {
                return metaMap.get(func);
            };
            function getFuncName(func) {
                var result2 = func.name + "", array = realNames[result2], length = hasOwnProperty.call(realNames, result2) ? array.length : 0;
                while(length--){
                    var data = array[length], otherFunc = data.func;
                    if (otherFunc == null || otherFunc == func) return data.name;
                }
                return result2;
            }
            function getHolder(func) {
                var object = hasOwnProperty.call(lodash2, "placeholder") ? lodash2 : func;
                return object.placeholder;
            }
            function getIteratee() {
                var result2 = lodash2.iteratee || iteratee;
                result2 = result2 === iteratee ? baseIteratee : result2;
                return arguments.length ? result2(arguments[0], arguments[1]) : result2;
            }
            function getMapData(map2, key) {
                var data = map2.__data__;
                return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
            }
            function getMatchData(object) {
                var result2 = keys(object), length = result2.length;
                while(length--){
                    var key = result2[length], value = object[key];
                    result2[length] = [
                        key,
                        value,
                        isStrictComparable(value)
                    ];
                }
                return result2;
            }
            function getNative(object, key) {
                var value = getValue(object, key);
                return baseIsNative(value) ? value : undefined$1;
            }
            function getRawTag(value) {
                var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
                try {
                    value[symToStringTag] = undefined$1;
                    var unmasked = true;
                } catch (e) {}
                var result2 = nativeObjectToString.call(value);
                if (unmasked) {
                    if (isOwn) value[symToStringTag] = tag;
                    else delete value[symToStringTag];
                }
                return result2;
            }
            var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
                if (object == null) return [];
                object = Object2(object);
                return arrayFilter(nativeGetSymbols(object), function(symbol) {
                    return propertyIsEnumerable.call(object, symbol);
                });
            };
            var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
                var result2 = [];
                while(object){
                    arrayPush(result2, getSymbols(object));
                    object = getPrototype(object);
                }
                return result2;
            };
            var getTag = baseGetTag;
            if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set2 && getTag(new Set2()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) getTag = function(value) {
                var result2 = baseGetTag(value), Ctor = result2 == objectTag ? value.constructor : undefined$1, ctorString = Ctor ? toSource(Ctor) : "";
                if (ctorString) switch(ctorString){
                    case dataViewCtorString:
                        return dataViewTag;
                    case mapCtorString:
                        return mapTag;
                    case promiseCtorString:
                        return promiseTag;
                    case setCtorString:
                        return setTag;
                    case weakMapCtorString:
                        return weakMapTag;
                }
                return result2;
            };
            function getView(start, end, transforms) {
                var index = -1, length = transforms.length;
                while(++index < length){
                    var data = transforms[index], size2 = data.size;
                    switch(data.type){
                        case "drop":
                            start += size2;
                            break;
                        case "dropRight":
                            end -= size2;
                            break;
                        case "take":
                            end = nativeMin(end, start + size2);
                            break;
                        case "takeRight":
                            start = nativeMax(start, end - size2);
                            break;
                    }
                }
                return {
                    "start": start,
                    "end": end
                };
            }
            function getWrapDetails(source) {
                var match = source.match(reWrapDetails);
                return match ? match[1].split(reSplitDetails) : [];
            }
            function hasPath(object, path, hasFunc) {
                path = castPath(path, object);
                var index = -1, length = path.length, result2 = false;
                while(++index < length){
                    var key = toKey(path[index]);
                    if (!(result2 = object != null && hasFunc(object, key))) break;
                    object = object[key];
                }
                if (result2 || ++index != length) return result2;
                length = object == null ? 0 : object.length;
                return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
            }
            function initCloneArray(array) {
                var length = array.length, result2 = new array.constructor(length);
                if (length && typeof array[0] == "string" && hasOwnProperty.call(array, "index")) {
                    result2.index = array.index;
                    result2.input = array.input;
                }
                return result2;
            }
            function initCloneObject(object) {
                return typeof object.constructor == "function" && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
            }
            function initCloneByTag(object, tag, isDeep) {
                var Ctor = object.constructor;
                switch(tag){
                    case arrayBufferTag:
                        return cloneArrayBuffer(object);
                    case boolTag:
                    case dateTag:
                        return new Ctor(+object);
                    case dataViewTag:
                        return cloneDataView(object, isDeep);
                    case float32Tag:
                    case float64Tag:
                    case int8Tag:
                    case int16Tag:
                    case int32Tag:
                    case uint8Tag:
                    case uint8ClampedTag:
                    case uint16Tag:
                    case uint32Tag:
                        return cloneTypedArray(object, isDeep);
                    case mapTag:
                        return new Ctor();
                    case numberTag:
                    case stringTag:
                        return new Ctor(object);
                    case regexpTag:
                        return cloneRegExp(object);
                    case setTag:
                        return new Ctor();
                    case symbolTag:
                        return cloneSymbol(object);
                }
            }
            function insertWrapDetails(source, details) {
                var length = details.length;
                if (!length) return source;
                var lastIndex = length - 1;
                details[lastIndex] = (length > 1 ? "& " : "") + details[lastIndex];
                details = details.join(length > 2 ? ", " : " ");
                return source.replace(reWrapComment, "{\n/* [wrapped with " + details + "] */\n");
            }
            function isFlattenable(value) {
                return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
            }
            function isIndex(value, length) {
                var type = typeof value;
                length = length == null ? MAX_SAFE_INTEGER : length;
                return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
            }
            function isIterateeCall(value, index, object) {
                if (!isObject(object)) return false;
                var type = typeof index;
                if (type == "number" ? isArrayLike(object) && isIndex(index, object.length) : type == "string" && index in object) return eq(object[index], value);
                return false;
            }
            function isKey(value, object) {
                if (isArray(value)) return false;
                var type = typeof value;
                if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol(value)) return true;
                return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object2(object);
            }
            function isKeyable(value) {
                var type = typeof value;
                return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
            }
            function isLaziable(func) {
                var funcName = getFuncName(func), other = lodash2[funcName];
                if (typeof other != "function" || !(funcName in LazyWrapper.prototype)) return false;
                if (func === other) return true;
                var data = getData(other);
                return !!data && func === data[0];
            }
            function isMasked(func) {
                return !!maskSrcKey && maskSrcKey in func;
            }
            var isMaskable = coreJsData ? isFunction : stubFalse;
            function isPrototype(value) {
                var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
                return value === proto;
            }
            function isStrictComparable(value) {
                return value === value && !isObject(value);
            }
            function matchesStrictComparable(key, srcValue) {
                return function(object) {
                    if (object == null) return false;
                    return object[key] === srcValue && (srcValue !== undefined$1 || key in Object2(object));
                };
            }
            function memoizeCapped(func) {
                var result2 = memoize(func, function(key) {
                    if (cache.size === MAX_MEMOIZE_SIZE) cache.clear();
                    return key;
                });
                var cache = result2.cache;
                return result2;
            }
            function mergeData(data, source) {
                var bitmask = data[1], srcBitmask = source[1], newBitmask = bitmask | srcBitmask, isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);
                var isCombo = srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_CURRY_FLAG || srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_REARG_FLAG && data[7].length <= source[8] || srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG;
                if (!(isCommon || isCombo)) return data;
                if (srcBitmask & WRAP_BIND_FLAG) {
                    data[2] = source[2];
                    newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
                }
                var value = source[3];
                if (value) {
                    var partials = data[3];
                    data[3] = partials ? composeArgs(partials, value, source[4]) : value;
                    data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
                }
                value = source[5];
                if (value) {
                    partials = data[5];
                    data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
                    data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
                }
                value = source[7];
                if (value) data[7] = value;
                if (srcBitmask & WRAP_ARY_FLAG) data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
                if (data[9] == null) data[9] = source[9];
                data[0] = source[0];
                data[1] = newBitmask;
                return data;
            }
            function nativeKeysIn(object) {
                var result2 = [];
                if (object != null) for(var key in Object2(object))result2.push(key);
                return result2;
            }
            function objectToString(value) {
                return nativeObjectToString.call(value);
            }
            function overRest(func, start, transform2) {
                start = nativeMax(start === undefined$1 ? func.length - 1 : start, 0);
                return function() {
                    var args = arguments, index = -1, length = nativeMax(args.length - start, 0), array = Array2(length);
                    while(++index < length)array[index] = args[start + index];
                    index = -1;
                    var otherArgs = Array2(start + 1);
                    while(++index < start)otherArgs[index] = args[index];
                    otherArgs[start] = transform2(array);
                    return apply(func, this, otherArgs);
                };
            }
            function parent(object, path) {
                return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
            }
            function reorder(array, indexes) {
                var arrLength = array.length, length = nativeMin(indexes.length, arrLength), oldArray = copyArray(array);
                while(length--){
                    var index = indexes[length];
                    array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined$1;
                }
                return array;
            }
            function safeGet(object, key) {
                if (key === "constructor" && typeof object[key] === "function") return;
                if (key == "__proto__") return;
                return object[key];
            }
            var setData = shortOut(baseSetData);
            var setTimeout2 = ctxSetTimeout || function(func, wait) {
                return root.setTimeout(func, wait);
            };
            var setToString = shortOut(baseSetToString);
            function setWrapToString(wrapper, reference, bitmask) {
                var source = reference + "";
                return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
            }
            function shortOut(func) {
                var count = 0, lastCalled = 0;
                return function() {
                    var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
                    lastCalled = stamp;
                    if (remaining > 0) {
                        if (++count >= HOT_COUNT) return arguments[0];
                    } else count = 0;
                    return func.apply(undefined$1, arguments);
                };
            }
            function shuffleSelf(array, size2) {
                var index = -1, length = array.length, lastIndex = length - 1;
                size2 = size2 === undefined$1 ? length : size2;
                while(++index < size2){
                    var rand = baseRandom(index, lastIndex), value = array[rand];
                    array[rand] = array[index];
                    array[index] = value;
                }
                array.length = size2;
                return array;
            }
            var stringToPath = memoizeCapped(function(string) {
                var result2 = [];
                if (string.charCodeAt(0) === 46) result2.push("");
                string.replace(rePropName, function(match, number, quote, subString) {
                    result2.push(quote ? subString.replace(reEscapeChar, "$1") : number || match);
                });
                return result2;
            });
            function toKey(value) {
                if (typeof value == "string" || isSymbol(value)) return value;
                var result2 = value + "";
                return result2 == "0" && 1 / value == -INFINITY ? "-0" : result2;
            }
            function toSource(func) {
                if (func != null) {
                    try {
                        return funcToString.call(func);
                    } catch (e) {}
                    try {
                        return func + "";
                    } catch (e1) {}
                }
                return "";
            }
            function updateWrapDetails(details, bitmask) {
                arrayEach(wrapFlags, function(pair) {
                    var value = "_." + pair[0];
                    if (bitmask & pair[1] && !arrayIncludes(details, value)) details.push(value);
                });
                return details.sort();
            }
            function wrapperClone(wrapper) {
                if (wrapper instanceof LazyWrapper) return wrapper.clone();
                var result2 = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
                result2.__actions__ = copyArray(wrapper.__actions__);
                result2.__index__ = wrapper.__index__;
                result2.__values__ = wrapper.__values__;
                return result2;
            }
            function chunk(array, size2, guard) {
                if (guard ? isIterateeCall(array, size2, guard) : size2 === undefined$1) size2 = 1;
                else size2 = nativeMax(toInteger(size2), 0);
                var length = array == null ? 0 : array.length;
                if (!length || size2 < 1) return [];
                var index = 0, resIndex = 0, result2 = Array2(nativeCeil(length / size2));
                while(index < length)result2[resIndex++] = baseSlice(array, index, index += size2);
                return result2;
            }
            function compact(array) {
                var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result2 = [];
                while(++index < length){
                    var value = array[index];
                    if (value) result2[resIndex++] = value;
                }
                return result2;
            }
            function concat() {
                var length = arguments.length;
                if (!length) return [];
                var args = Array2(length - 1), array = arguments[0], index = length;
                while(index--)args[index - 1] = arguments[index];
                return arrayPush(isArray(array) ? copyArray(array) : [
                    array
                ], baseFlatten(args, 1));
            }
            var difference = baseRest(function(array, values2) {
                return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject, true)) : [];
            });
            var differenceBy = baseRest(function(array, values2) {
                var iteratee2 = last(values2);
                if (isArrayLikeObject(iteratee2)) iteratee2 = undefined$1;
                return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject, true), getIteratee(iteratee2, 2)) : [];
            });
            var differenceWith = baseRest(function(array, values2) {
                var comparator = last(values2);
                if (isArrayLikeObject(comparator)) comparator = undefined$1;
                return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject, true), undefined$1, comparator) : [];
            });
            function drop(array, n, guard) {
                var length = array == null ? 0 : array.length;
                if (!length) return [];
                n = guard || n === undefined$1 ? 1 : toInteger(n);
                return baseSlice(array, n < 0 ? 0 : n, length);
            }
            function dropRight(array, n, guard) {
                var length = array == null ? 0 : array.length;
                if (!length) return [];
                n = guard || n === undefined$1 ? 1 : toInteger(n);
                n = length - n;
                return baseSlice(array, 0, n < 0 ? 0 : n);
            }
            function dropRightWhile(array, predicate) {
                return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true, true) : [];
            }
            function dropWhile(array, predicate) {
                return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true) : [];
            }
            function fill(array, value, start, end) {
                var length = array == null ? 0 : array.length;
                if (!length) return [];
                if (start && typeof start != "number" && isIterateeCall(array, value, start)) {
                    start = 0;
                    end = length;
                }
                return baseFill(array, value, start, end);
            }
            function findIndex(array, predicate, fromIndex) {
                var length = array == null ? 0 : array.length;
                if (!length) return -1;
                var index = fromIndex == null ? 0 : toInteger(fromIndex);
                if (index < 0) index = nativeMax(length + index, 0);
                return baseFindIndex(array, getIteratee(predicate, 3), index);
            }
            function findLastIndex(array, predicate, fromIndex) {
                var length = array == null ? 0 : array.length;
                if (!length) return -1;
                var index = length - 1;
                if (fromIndex !== undefined$1) {
                    index = toInteger(fromIndex);
                    index = fromIndex < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
                }
                return baseFindIndex(array, getIteratee(predicate, 3), index, true);
            }
            function flatten(array) {
                var length = array == null ? 0 : array.length;
                return length ? baseFlatten(array, 1) : [];
            }
            function flattenDeep(array) {
                var length = array == null ? 0 : array.length;
                return length ? baseFlatten(array, INFINITY) : [];
            }
            function flattenDepth(array, depth) {
                var length = array == null ? 0 : array.length;
                if (!length) return [];
                depth = depth === undefined$1 ? 1 : toInteger(depth);
                return baseFlatten(array, depth);
            }
            function fromPairs(pairs) {
                var index = -1, length = pairs == null ? 0 : pairs.length, result2 = {};
                while(++index < length){
                    var pair = pairs[index];
                    result2[pair[0]] = pair[1];
                }
                return result2;
            }
            function head(array) {
                return array && array.length ? array[0] : undefined$1;
            }
            function indexOf(array, value, fromIndex) {
                var length = array == null ? 0 : array.length;
                if (!length) return -1;
                var index = fromIndex == null ? 0 : toInteger(fromIndex);
                if (index < 0) index = nativeMax(length + index, 0);
                return baseIndexOf(array, value, index);
            }
            function initial(array) {
                var length = array == null ? 0 : array.length;
                return length ? baseSlice(array, 0, -1) : [];
            }
            var intersection = baseRest(function(arrays) {
                var mapped = arrayMap(arrays, castArrayLikeObject);
                return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped) : [];
            });
            var intersectionBy = baseRest(function(arrays) {
                var iteratee2 = last(arrays), mapped = arrayMap(arrays, castArrayLikeObject);
                if (iteratee2 === last(mapped)) iteratee2 = undefined$1;
                else mapped.pop();
                return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, getIteratee(iteratee2, 2)) : [];
            });
            var intersectionWith = baseRest(function(arrays) {
                var comparator = last(arrays), mapped = arrayMap(arrays, castArrayLikeObject);
                comparator = typeof comparator == "function" ? comparator : undefined$1;
                if (comparator) mapped.pop();
                return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, undefined$1, comparator) : [];
            });
            function join(array, separator) {
                return array == null ? "" : nativeJoin.call(array, separator);
            }
            function last(array) {
                var length = array == null ? 0 : array.length;
                return length ? array[length - 1] : undefined$1;
            }
            function lastIndexOf(array, value, fromIndex) {
                var length = array == null ? 0 : array.length;
                if (!length) return -1;
                var index = length;
                if (fromIndex !== undefined$1) {
                    index = toInteger(fromIndex);
                    index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
                }
                return value === value ? strictLastIndexOf(array, value, index) : baseFindIndex(array, baseIsNaN, index, true);
            }
            function nth(array, n) {
                return array && array.length ? baseNth(array, toInteger(n)) : undefined$1;
            }
            var pull = baseRest(pullAll);
            function pullAll(array, values2) {
                return array && array.length && values2 && values2.length ? basePullAll(array, values2) : array;
            }
            function pullAllBy(array, values2, iteratee2) {
                return array && array.length && values2 && values2.length ? basePullAll(array, values2, getIteratee(iteratee2, 2)) : array;
            }
            function pullAllWith(array, values2, comparator) {
                return array && array.length && values2 && values2.length ? basePullAll(array, values2, undefined$1, comparator) : array;
            }
            var pullAt = flatRest(function(array, indexes) {
                var length = array == null ? 0 : array.length, result2 = baseAt(array, indexes);
                basePullAt(array, arrayMap(indexes, function(index) {
                    return isIndex(index, length) ? +index : index;
                }).sort(compareAscending));
                return result2;
            });
            function remove(array, predicate) {
                var result2 = [];
                if (!(array && array.length)) return result2;
                var index = -1, indexes = [], length = array.length;
                predicate = getIteratee(predicate, 3);
                while(++index < length){
                    var value = array[index];
                    if (predicate(value, index, array)) {
                        result2.push(value);
                        indexes.push(index);
                    }
                }
                basePullAt(array, indexes);
                return result2;
            }
            function reverse(array) {
                return array == null ? array : nativeReverse.call(array);
            }
            function slice(array, start, end) {
                var length = array == null ? 0 : array.length;
                if (!length) return [];
                if (end && typeof end != "number" && isIterateeCall(array, start, end)) {
                    start = 0;
                    end = length;
                } else {
                    start = start == null ? 0 : toInteger(start);
                    end = end === undefined$1 ? length : toInteger(end);
                }
                return baseSlice(array, start, end);
            }
            function sortedIndex(array, value) {
                return baseSortedIndex(array, value);
            }
            function sortedIndexBy(array, value, iteratee2) {
                return baseSortedIndexBy(array, value, getIteratee(iteratee2, 2));
            }
            function sortedIndexOf(array, value) {
                var length = array == null ? 0 : array.length;
                if (length) {
                    var index = baseSortedIndex(array, value);
                    if (index < length && eq(array[index], value)) return index;
                }
                return -1;
            }
            function sortedLastIndex(array, value) {
                return baseSortedIndex(array, value, true);
            }
            function sortedLastIndexBy(array, value, iteratee2) {
                return baseSortedIndexBy(array, value, getIteratee(iteratee2, 2), true);
            }
            function sortedLastIndexOf(array, value) {
                var length = array == null ? 0 : array.length;
                if (length) {
                    var index = baseSortedIndex(array, value, true) - 1;
                    if (eq(array[index], value)) return index;
                }
                return -1;
            }
            function sortedUniq(array) {
                return array && array.length ? baseSortedUniq(array) : [];
            }
            function sortedUniqBy(array, iteratee2) {
                return array && array.length ? baseSortedUniq(array, getIteratee(iteratee2, 2)) : [];
            }
            function tail(array) {
                var length = array == null ? 0 : array.length;
                return length ? baseSlice(array, 1, length) : [];
            }
            function take(array, n, guard) {
                if (!(array && array.length)) return [];
                n = guard || n === undefined$1 ? 1 : toInteger(n);
                return baseSlice(array, 0, n < 0 ? 0 : n);
            }
            function takeRight(array, n, guard) {
                var length = array == null ? 0 : array.length;
                if (!length) return [];
                n = guard || n === undefined$1 ? 1 : toInteger(n);
                n = length - n;
                return baseSlice(array, n < 0 ? 0 : n, length);
            }
            function takeRightWhile(array, predicate) {
                return array && array.length ? baseWhile(array, getIteratee(predicate, 3), false, true) : [];
            }
            function takeWhile(array, predicate) {
                return array && array.length ? baseWhile(array, getIteratee(predicate, 3)) : [];
            }
            var union = baseRest(function(arrays) {
                return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
            });
            var unionBy = baseRest(function(arrays) {
                var iteratee2 = last(arrays);
                if (isArrayLikeObject(iteratee2)) iteratee2 = undefined$1;
                return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee2, 2));
            });
            var unionWith = baseRest(function(arrays) {
                var comparator = last(arrays);
                comparator = typeof comparator == "function" ? comparator : undefined$1;
                return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined$1, comparator);
            });
            function uniq(array) {
                return array && array.length ? baseUniq(array) : [];
            }
            function uniqBy(array, iteratee2) {
                return array && array.length ? baseUniq(array, getIteratee(iteratee2, 2)) : [];
            }
            function uniqWith(array, comparator) {
                comparator = typeof comparator == "function" ? comparator : undefined$1;
                return array && array.length ? baseUniq(array, undefined$1, comparator) : [];
            }
            function unzip(array) {
                if (!(array && array.length)) return [];
                var length = 0;
                array = arrayFilter(array, function(group) {
                    if (isArrayLikeObject(group)) {
                        length = nativeMax(group.length, length);
                        return true;
                    }
                });
                return baseTimes(length, function(index) {
                    return arrayMap(array, baseProperty(index));
                });
            }
            function unzipWith(array, iteratee2) {
                if (!(array && array.length)) return [];
                var result2 = unzip(array);
                if (iteratee2 == null) return result2;
                return arrayMap(result2, function(group) {
                    return apply(iteratee2, undefined$1, group);
                });
            }
            var without = baseRest(function(array, values2) {
                return isArrayLikeObject(array) ? baseDifference(array, values2) : [];
            });
            var xor = baseRest(function(arrays) {
                return baseXor(arrayFilter(arrays, isArrayLikeObject));
            });
            var xorBy = baseRest(function(arrays) {
                var iteratee2 = last(arrays);
                if (isArrayLikeObject(iteratee2)) iteratee2 = undefined$1;
                return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee2, 2));
            });
            var xorWith = baseRest(function(arrays) {
                var comparator = last(arrays);
                comparator = typeof comparator == "function" ? comparator : undefined$1;
                return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined$1, comparator);
            });
            var zip = baseRest(unzip);
            function zipObject(props, values2) {
                return baseZipObject(props || [], values2 || [], assignValue);
            }
            function zipObjectDeep(props, values2) {
                return baseZipObject(props || [], values2 || [], baseSet);
            }
            var zipWith = baseRest(function(arrays) {
                var length = arrays.length, iteratee2 = length > 1 ? arrays[length - 1] : undefined$1;
                iteratee2 = typeof iteratee2 == "function" ? (arrays.pop(), iteratee2) : undefined$1;
                return unzipWith(arrays, iteratee2);
            });
            function chain(value) {
                var result2 = lodash2(value);
                result2.__chain__ = true;
                return result2;
            }
            function tap(value, interceptor) {
                interceptor(value);
                return value;
            }
            function thru(value, interceptor) {
                return interceptor(value);
            }
            var wrapperAt = flatRest(function(paths) {
                var length = paths.length, start = length ? paths[0] : 0, value = this.__wrapped__, interceptor = function(object) {
                    return baseAt(object, paths);
                };
                if (length > 1 || this.__actions__.length || !(value instanceof LazyWrapper) || !isIndex(start)) return this.thru(interceptor);
                value = value.slice(start, +start + (length ? 1 : 0));
                value.__actions__.push({
                    "func": thru,
                    "args": [
                        interceptor
                    ],
                    "thisArg": undefined$1
                });
                return new LodashWrapper(value, this.__chain__).thru(function(array) {
                    if (length && !array.length) array.push(undefined$1);
                    return array;
                });
            });
            function wrapperChain() {
                return chain(this);
            }
            function wrapperCommit() {
                return new LodashWrapper(this.value(), this.__chain__);
            }
            function wrapperNext() {
                if (this.__values__ === undefined$1) this.__values__ = toArray(this.value());
                var done = this.__index__ >= this.__values__.length, value = done ? undefined$1 : this.__values__[this.__index__++];
                return {
                    "done": done,
                    "value": value
                };
            }
            function wrapperToIterator() {
                return this;
            }
            function wrapperPlant(value) {
                var result2, parent2 = this;
                while(parent2 instanceof baseLodash){
                    var clone2 = wrapperClone(parent2);
                    clone2.__index__ = 0;
                    clone2.__values__ = undefined$1;
                    if (result2) previous.__wrapped__ = clone2;
                    else result2 = clone2;
                    var previous = clone2;
                    parent2 = parent2.__wrapped__;
                }
                previous.__wrapped__ = value;
                return result2;
            }
            function wrapperReverse() {
                var value = this.__wrapped__;
                if (value instanceof LazyWrapper) {
                    var wrapped = value;
                    if (this.__actions__.length) wrapped = new LazyWrapper(this);
                    wrapped = wrapped.reverse();
                    wrapped.__actions__.push({
                        "func": thru,
                        "args": [
                            reverse
                        ],
                        "thisArg": undefined$1
                    });
                    return new LodashWrapper(wrapped, this.__chain__);
                }
                return this.thru(reverse);
            }
            function wrapperValue() {
                return baseWrapperValue(this.__wrapped__, this.__actions__);
            }
            var countBy = createAggregator(function(result2, value, key) {
                if (hasOwnProperty.call(result2, key)) ++result2[key];
                else baseAssignValue(result2, key, 1);
            });
            function every(collection, predicate, guard) {
                var func = isArray(collection) ? arrayEvery : baseEvery;
                if (guard && isIterateeCall(collection, predicate, guard)) predicate = undefined$1;
                return func(collection, getIteratee(predicate, 3));
            }
            function filter(collection, predicate) {
                var func = isArray(collection) ? arrayFilter : baseFilter;
                return func(collection, getIteratee(predicate, 3));
            }
            var find = createFind(findIndex);
            var findLast = createFind(findLastIndex);
            function flatMap(collection, iteratee2) {
                return baseFlatten(map(collection, iteratee2), 1);
            }
            function flatMapDeep(collection, iteratee2) {
                return baseFlatten(map(collection, iteratee2), INFINITY);
            }
            function flatMapDepth(collection, iteratee2, depth) {
                depth = depth === undefined$1 ? 1 : toInteger(depth);
                return baseFlatten(map(collection, iteratee2), depth);
            }
            function forEach(collection, iteratee2) {
                var func = isArray(collection) ? arrayEach : baseEach;
                return func(collection, getIteratee(iteratee2, 3));
            }
            function forEachRight(collection, iteratee2) {
                var func = isArray(collection) ? arrayEachRight : baseEachRight;
                return func(collection, getIteratee(iteratee2, 3));
            }
            var groupBy = createAggregator(function(result2, value, key) {
                if (hasOwnProperty.call(result2, key)) result2[key].push(value);
                else baseAssignValue(result2, key, [
                    value
                ]);
            });
            function includes(collection, value, fromIndex, guard) {
                collection = isArrayLike(collection) ? collection : values(collection);
                fromIndex = fromIndex && !guard ? toInteger(fromIndex) : 0;
                var length = collection.length;
                if (fromIndex < 0) fromIndex = nativeMax(length + fromIndex, 0);
                return isString(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1;
            }
            var invokeMap = baseRest(function(collection, path, args) {
                var index = -1, isFunc = typeof path == "function", result2 = isArrayLike(collection) ? Array2(collection.length) : [];
                baseEach(collection, function(value) {
                    result2[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
                });
                return result2;
            });
            var keyBy = createAggregator(function(result2, value, key) {
                baseAssignValue(result2, key, value);
            });
            function map(collection, iteratee2) {
                var func = isArray(collection) ? arrayMap : baseMap;
                return func(collection, getIteratee(iteratee2, 3));
            }
            function orderBy(collection, iteratees, orders, guard) {
                if (collection == null) return [];
                if (!isArray(iteratees)) iteratees = iteratees == null ? [] : [
                    iteratees
                ];
                orders = guard ? undefined$1 : orders;
                if (!isArray(orders)) orders = orders == null ? [] : [
                    orders
                ];
                return baseOrderBy(collection, iteratees, orders);
            }
            var partition = createAggregator(function(result2, value, key) {
                result2[key ? 0 : 1].push(value);
            }, function() {
                return [
                    [],
                    []
                ];
            });
            function reduce(collection, iteratee2, accumulator) {
                var func = isArray(collection) ? arrayReduce : baseReduce, initAccum = arguments.length < 3;
                return func(collection, getIteratee(iteratee2, 4), accumulator, initAccum, baseEach);
            }
            function reduceRight(collection, iteratee2, accumulator) {
                var func = isArray(collection) ? arrayReduceRight : baseReduce, initAccum = arguments.length < 3;
                return func(collection, getIteratee(iteratee2, 4), accumulator, initAccum, baseEachRight);
            }
            function reject(collection, predicate) {
                var func = isArray(collection) ? arrayFilter : baseFilter;
                return func(collection, negate(getIteratee(predicate, 3)));
            }
            function sample(collection) {
                var func = isArray(collection) ? arraySample : baseSample;
                return func(collection);
            }
            function sampleSize(collection, n, guard) {
                if (guard ? isIterateeCall(collection, n, guard) : n === undefined$1) n = 1;
                else n = toInteger(n);
                var func = isArray(collection) ? arraySampleSize : baseSampleSize;
                return func(collection, n);
            }
            function shuffle(collection) {
                var func = isArray(collection) ? arrayShuffle : baseShuffle;
                return func(collection);
            }
            function size(collection) {
                if (collection == null) return 0;
                if (isArrayLike(collection)) return isString(collection) ? stringSize(collection) : collection.length;
                var tag = getTag(collection);
                if (tag == mapTag || tag == setTag) return collection.size;
                return baseKeys(collection).length;
            }
            function some(collection, predicate, guard) {
                var func = isArray(collection) ? arraySome : baseSome;
                if (guard && isIterateeCall(collection, predicate, guard)) predicate = undefined$1;
                return func(collection, getIteratee(predicate, 3));
            }
            var sortBy = baseRest(function(collection, iteratees) {
                if (collection == null) return [];
                var length = iteratees.length;
                if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) iteratees = [];
                else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) iteratees = [
                    iteratees[0]
                ];
                return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
            });
            var now = ctxNow || function() {
                return root.Date.now();
            };
            function after(n, func) {
                if (typeof func != "function") throw new TypeError2(FUNC_ERROR_TEXT);
                n = toInteger(n);
                return function() {
                    if (--n < 1) return func.apply(this, arguments);
                };
            }
            function ary(func, n, guard) {
                n = guard ? undefined$1 : n;
                n = func && n == null ? func.length : n;
                return createWrap(func, WRAP_ARY_FLAG, undefined$1, undefined$1, undefined$1, undefined$1, n);
            }
            function before(n, func) {
                var result2;
                if (typeof func != "function") throw new TypeError2(FUNC_ERROR_TEXT);
                n = toInteger(n);
                return function() {
                    if (--n > 0) result2 = func.apply(this, arguments);
                    if (n <= 1) func = undefined$1;
                    return result2;
                };
            }
            var bind = baseRest(function(func, thisArg, partials) {
                var bitmask = WRAP_BIND_FLAG;
                if (partials.length) {
                    var holders = replaceHolders(partials, getHolder(bind));
                    bitmask |= WRAP_PARTIAL_FLAG;
                }
                return createWrap(func, bitmask, thisArg, partials, holders);
            });
            var bindKey = baseRest(function(object, key, partials) {
                var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
                if (partials.length) {
                    var holders = replaceHolders(partials, getHolder(bindKey));
                    bitmask |= WRAP_PARTIAL_FLAG;
                }
                return createWrap(key, bitmask, object, partials, holders);
            });
            function curry(func, arity, guard) {
                arity = guard ? undefined$1 : arity;
                var result2 = createWrap(func, WRAP_CURRY_FLAG, undefined$1, undefined$1, undefined$1, undefined$1, undefined$1, arity);
                result2.placeholder = curry.placeholder;
                return result2;
            }
            function curryRight(func, arity, guard) {
                arity = guard ? undefined$1 : arity;
                var result2 = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined$1, undefined$1, undefined$1, undefined$1, undefined$1, arity);
                result2.placeholder = curryRight.placeholder;
                return result2;
            }
            function debounce(func, wait, options) {
                var lastArgs, lastThis, maxWait, result2, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
                if (typeof func != "function") throw new TypeError2(FUNC_ERROR_TEXT);
                wait = toNumber(wait) || 0;
                if (isObject(options)) {
                    leading = !!options.leading;
                    maxing = "maxWait" in options;
                    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
                    trailing = "trailing" in options ? !!options.trailing : trailing;
                }
                function invokeFunc(time) {
                    var args = lastArgs, thisArg = lastThis;
                    lastArgs = lastThis = undefined$1;
                    lastInvokeTime = time;
                    result2 = func.apply(thisArg, args);
                    return result2;
                }
                function leadingEdge(time) {
                    lastInvokeTime = time;
                    timerId = setTimeout2(timerExpired, wait);
                    return leading ? invokeFunc(time) : result2;
                }
                function remainingWait(time) {
                    var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
                    return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
                }
                function shouldInvoke(time) {
                    var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
                    return lastCallTime === undefined$1 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
                }
                function timerExpired() {
                    var time = now();
                    if (shouldInvoke(time)) return trailingEdge(time);
                    timerId = setTimeout2(timerExpired, remainingWait(time));
                }
                function trailingEdge(time) {
                    timerId = undefined$1;
                    if (trailing && lastArgs) return invokeFunc(time);
                    lastArgs = lastThis = undefined$1;
                    return result2;
                }
                function cancel() {
                    if (timerId !== undefined$1) clearTimeout(timerId);
                    lastInvokeTime = 0;
                    lastArgs = lastCallTime = lastThis = timerId = undefined$1;
                }
                function flush() {
                    return timerId === undefined$1 ? result2 : trailingEdge(now());
                }
                function debounced() {
                    var time = now(), isInvoking = shouldInvoke(time);
                    lastArgs = arguments;
                    lastThis = this;
                    lastCallTime = time;
                    if (isInvoking) {
                        if (timerId === undefined$1) return leadingEdge(lastCallTime);
                        if (maxing) {
                            clearTimeout(timerId);
                            timerId = setTimeout2(timerExpired, wait);
                            return invokeFunc(lastCallTime);
                        }
                    }
                    if (timerId === undefined$1) timerId = setTimeout2(timerExpired, wait);
                    return result2;
                }
                debounced.cancel = cancel;
                debounced.flush = flush;
                return debounced;
            }
            var defer = baseRest(function(func, args) {
                return baseDelay(func, 1, args);
            });
            var delay = baseRest(function(func, wait, args) {
                return baseDelay(func, toNumber(wait) || 0, args);
            });
            function flip(func) {
                return createWrap(func, WRAP_FLIP_FLAG);
            }
            function memoize(func, resolver) {
                if (typeof func != "function" || resolver != null && typeof resolver != "function") throw new TypeError2(FUNC_ERROR_TEXT);
                var memoized = function() {
                    var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
                    if (cache.has(key)) return cache.get(key);
                    var result2 = func.apply(this, args);
                    memoized.cache = cache.set(key, result2) || cache;
                    return result2;
                };
                memoized.cache = new (memoize.Cache || MapCache)();
                return memoized;
            }
            memoize.Cache = MapCache;
            function negate(predicate) {
                if (typeof predicate != "function") throw new TypeError2(FUNC_ERROR_TEXT);
                return function() {
                    var args = arguments;
                    switch(args.length){
                        case 0:
                            return !predicate.call(this);
                        case 1:
                            return !predicate.call(this, args[0]);
                        case 2:
                            return !predicate.call(this, args[0], args[1]);
                        case 3:
                            return !predicate.call(this, args[0], args[1], args[2]);
                    }
                    return !predicate.apply(this, args);
                };
            }
            function once(func) {
                return before(2, func);
            }
            var overArgs = castRest(function(func, transforms) {
                transforms = transforms.length == 1 && isArray(transforms[0]) ? arrayMap(transforms[0], baseUnary(getIteratee())) : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));
                var funcsLength = transforms.length;
                return baseRest(function(args) {
                    var index = -1, length = nativeMin(args.length, funcsLength);
                    while(++index < length)args[index] = transforms[index].call(this, args[index]);
                    return apply(func, this, args);
                });
            });
            var partial = baseRest(function(func, partials) {
                var holders = replaceHolders(partials, getHolder(partial));
                return createWrap(func, WRAP_PARTIAL_FLAG, undefined$1, partials, holders);
            });
            var partialRight = baseRest(function(func, partials) {
                var holders = replaceHolders(partials, getHolder(partialRight));
                return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined$1, partials, holders);
            });
            var rearg = flatRest(function(func, indexes) {
                return createWrap(func, WRAP_REARG_FLAG, undefined$1, undefined$1, undefined$1, indexes);
            });
            function rest(func, start) {
                if (typeof func != "function") throw new TypeError2(FUNC_ERROR_TEXT);
                start = start === undefined$1 ? start : toInteger(start);
                return baseRest(func, start);
            }
            function spread(func, start) {
                if (typeof func != "function") throw new TypeError2(FUNC_ERROR_TEXT);
                start = start == null ? 0 : nativeMax(toInteger(start), 0);
                return baseRest(function(args) {
                    var array = args[start], otherArgs = castSlice(args, 0, start);
                    if (array) arrayPush(otherArgs, array);
                    return apply(func, this, otherArgs);
                });
            }
            function throttle(func, wait, options) {
                var leading = true, trailing = true;
                if (typeof func != "function") throw new TypeError2(FUNC_ERROR_TEXT);
                if (isObject(options)) {
                    leading = "leading" in options ? !!options.leading : leading;
                    trailing = "trailing" in options ? !!options.trailing : trailing;
                }
                return debounce(func, wait, {
                    "leading": leading,
                    "maxWait": wait,
                    "trailing": trailing
                });
            }
            function unary(func) {
                return ary(func, 1);
            }
            function wrap(value, wrapper) {
                return partial(castFunction(wrapper), value);
            }
            function castArray() {
                if (!arguments.length) return [];
                var value = arguments[0];
                return isArray(value) ? value : [
                    value
                ];
            }
            function clone(value) {
                return baseClone(value, CLONE_SYMBOLS_FLAG);
            }
            function cloneWith(value, customizer) {
                customizer = typeof customizer == "function" ? customizer : undefined$1;
                return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
            }
            function cloneDeep(value) {
                return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
            }
            function cloneDeepWith(value, customizer) {
                customizer = typeof customizer == "function" ? customizer : undefined$1;
                return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
            }
            function conformsTo(object, source) {
                return source == null || baseConformsTo(object, source, keys(source));
            }
            function eq(value, other) {
                return value === other || value !== value && other !== other;
            }
            var gt = createRelationalOperation(baseGt);
            var gte = createRelationalOperation(function(value, other) {
                return value >= other;
            });
            var isArguments = baseIsArguments(function() {
                return arguments;
            }()) ? baseIsArguments : function(value) {
                return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
            };
            var isArray = Array2.isArray;
            var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;
            function isArrayLike(value) {
                return value != null && isLength(value.length) && !isFunction(value);
            }
            function isArrayLikeObject(value) {
                return isObjectLike(value) && isArrayLike(value);
            }
            function isBoolean(value) {
                return value === true || value === false || isObjectLike(value) && baseGetTag(value) == boolTag;
            }
            var isBuffer = nativeIsBuffer || stubFalse;
            var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;
            function isElement(value) {
                return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
            }
            function isEmpty(value) {
                if (value == null) return true;
                if (isArrayLike(value) && (isArray(value) || typeof value == "string" || typeof value.splice == "function" || isBuffer(value) || isTypedArray(value) || isArguments(value))) return !value.length;
                var tag = getTag(value);
                if (tag == mapTag || tag == setTag) return !value.size;
                if (isPrototype(value)) return !baseKeys(value).length;
                for(var key in value){
                    if (hasOwnProperty.call(value, key)) return false;
                }
                return true;
            }
            function isEqual(value, other) {
                return baseIsEqual(value, other);
            }
            function isEqualWith(value, other, customizer) {
                customizer = typeof customizer == "function" ? customizer : undefined$1;
                var result2 = customizer ? customizer(value, other) : undefined$1;
                return result2 === undefined$1 ? baseIsEqual(value, other, undefined$1, customizer) : !!result2;
            }
            function isError(value) {
                if (!isObjectLike(value)) return false;
                var tag = baseGetTag(value);
                return tag == errorTag || tag == domExcTag || typeof value.message == "string" && typeof value.name == "string" && !isPlainObject(value);
            }
            function isFinite(value) {
                return typeof value == "number" && nativeIsFinite(value);
            }
            function isFunction(value) {
                if (!isObject(value)) return false;
                var tag = baseGetTag(value);
                return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
            }
            function isInteger(value) {
                return typeof value == "number" && value == toInteger(value);
            }
            function isLength(value) {
                return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
            }
            function isObject(value) {
                var type = typeof value;
                return value != null && (type == "object" || type == "function");
            }
            function isObjectLike(value) {
                return value != null && typeof value == "object";
            }
            var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
            function isMatch(object, source) {
                return object === source || baseIsMatch(object, source, getMatchData(source));
            }
            function isMatchWith(object, source, customizer) {
                customizer = typeof customizer == "function" ? customizer : undefined$1;
                return baseIsMatch(object, source, getMatchData(source), customizer);
            }
            function isNaN2(value) {
                return isNumber(value) && value != +value;
            }
            function isNative(value) {
                if (isMaskable(value)) throw new Error2(CORE_ERROR_TEXT);
                return baseIsNative(value);
            }
            function isNull(value) {
                return value === null;
            }
            function isNil(value) {
                return value == null;
            }
            function isNumber(value) {
                return typeof value == "number" || isObjectLike(value) && baseGetTag(value) == numberTag;
            }
            function isPlainObject(value) {
                if (!isObjectLike(value) || baseGetTag(value) != objectTag) return false;
                var proto = getPrototype(value);
                if (proto === null) return true;
                var Ctor = hasOwnProperty.call(proto, "constructor") && proto.constructor;
                return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
            }
            var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;
            function isSafeInteger(value) {
                return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
            }
            var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
            function isString(value) {
                return typeof value == "string" || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
            }
            function isSymbol(value) {
                return typeof value == "symbol" || isObjectLike(value) && baseGetTag(value) == symbolTag;
            }
            var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
            function isUndefined(value) {
                return value === undefined$1;
            }
            function isWeakMap(value) {
                return isObjectLike(value) && getTag(value) == weakMapTag;
            }
            function isWeakSet(value) {
                return isObjectLike(value) && baseGetTag(value) == weakSetTag;
            }
            var lt = createRelationalOperation(baseLt);
            var lte = createRelationalOperation(function(value, other) {
                return value <= other;
            });
            function toArray(value) {
                if (!value) return [];
                if (isArrayLike(value)) return isString(value) ? stringToArray(value) : copyArray(value);
                if (symIterator && value[symIterator]) return iteratorToArray(value[symIterator]());
                var tag = getTag(value), func = tag == mapTag ? mapToArray : tag == setTag ? setToArray : values;
                return func(value);
            }
            function toFinite(value) {
                if (!value) return value === 0 ? value : 0;
                value = toNumber(value);
                if (value === INFINITY || value === -INFINITY) {
                    var sign = value < 0 ? -1 : 1;
                    return sign * MAX_INTEGER;
                }
                return value === value ? value : 0;
            }
            function toInteger(value) {
                var result2 = toFinite(value), remainder = result2 % 1;
                return result2 === result2 ? remainder ? result2 - remainder : result2 : 0;
            }
            function toLength(value) {
                return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
            }
            function toNumber(value) {
                if (typeof value == "number") return value;
                if (isSymbol(value)) return NAN;
                if (isObject(value)) {
                    var other = typeof value.valueOf == "function" ? value.valueOf() : value;
                    value = isObject(other) ? other + "" : other;
                }
                if (typeof value != "string") return value === 0 ? value : +value;
                value = baseTrim(value);
                var isBinary = reIsBinary.test(value);
                return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
            }
            function toPlainObject(value) {
                return copyObject(value, keysIn(value));
            }
            function toSafeInteger(value) {
                return value ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER) : value === 0 ? value : 0;
            }
            function toString(value) {
                return value == null ? "" : baseToString(value);
            }
            var assign = createAssigner(function(object, source) {
                if (isPrototype(source) || isArrayLike(source)) {
                    copyObject(source, keys(source), object);
                    return;
                }
                for(var key in source)if (hasOwnProperty.call(source, key)) assignValue(object, key, source[key]);
            });
            var assignIn = createAssigner(function(object, source) {
                copyObject(source, keysIn(source), object);
            });
            var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
                copyObject(source, keysIn(source), object, customizer);
            });
            var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
                copyObject(source, keys(source), object, customizer);
            });
            var at = flatRest(baseAt);
            function create(prototype, properties) {
                var result2 = baseCreate(prototype);
                return properties == null ? result2 : baseAssign(result2, properties);
            }
            var defaults = baseRest(function(object, sources) {
                object = Object2(object);
                var index = -1;
                var length = sources.length;
                var guard = length > 2 ? sources[2] : undefined$1;
                if (guard && isIterateeCall(sources[0], sources[1], guard)) length = 1;
                while(++index < length){
                    var source = sources[index];
                    var props = keysIn(source);
                    var propsIndex = -1;
                    var propsLength = props.length;
                    while(++propsIndex < propsLength){
                        var key = props[propsIndex];
                        var value = object[key];
                        if (value === undefined$1 || eq(value, objectProto[key]) && !hasOwnProperty.call(object, key)) object[key] = source[key];
                    }
                }
                return object;
            });
            var defaultsDeep = baseRest(function(args) {
                args.push(undefined$1, customDefaultsMerge);
                return apply(mergeWith, undefined$1, args);
            });
            function findKey(object, predicate) {
                return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
            }
            function findLastKey(object, predicate) {
                return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
            }
            function forIn(object, iteratee2) {
                return object == null ? object : baseFor(object, getIteratee(iteratee2, 3), keysIn);
            }
            function forInRight(object, iteratee2) {
                return object == null ? object : baseForRight(object, getIteratee(iteratee2, 3), keysIn);
            }
            function forOwn(object, iteratee2) {
                return object && baseForOwn(object, getIteratee(iteratee2, 3));
            }
            function forOwnRight(object, iteratee2) {
                return object && baseForOwnRight(object, getIteratee(iteratee2, 3));
            }
            function functions(object) {
                return object == null ? [] : baseFunctions(object, keys(object));
            }
            function functionsIn(object) {
                return object == null ? [] : baseFunctions(object, keysIn(object));
            }
            function get(object, path, defaultValue) {
                var result2 = object == null ? undefined$1 : baseGet(object, path);
                return result2 === undefined$1 ? defaultValue : result2;
            }
            function has(object, path) {
                return object != null && hasPath(object, path, baseHas);
            }
            function hasIn(object, path) {
                return object != null && hasPath(object, path, baseHasIn);
            }
            var invert = createInverter(function(result2, value, key) {
                if (value != null && typeof value.toString != "function") value = nativeObjectToString.call(value);
                result2[value] = key;
            }, constant(identity));
            var invertBy = createInverter(function(result2, value, key) {
                if (value != null && typeof value.toString != "function") value = nativeObjectToString.call(value);
                if (hasOwnProperty.call(result2, value)) result2[value].push(key);
                else result2[value] = [
                    key
                ];
            }, getIteratee);
            var invoke = baseRest(baseInvoke);
            function keys(object) {
                return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
            }
            function keysIn(object) {
                return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
            }
            function mapKeys(object, iteratee2) {
                var result2 = {};
                iteratee2 = getIteratee(iteratee2, 3);
                baseForOwn(object, function(value, key, object2) {
                    baseAssignValue(result2, iteratee2(value, key, object2), value);
                });
                return result2;
            }
            function mapValues(object, iteratee2) {
                var result2 = {};
                iteratee2 = getIteratee(iteratee2, 3);
                baseForOwn(object, function(value, key, object2) {
                    baseAssignValue(result2, key, iteratee2(value, key, object2));
                });
                return result2;
            }
            var merge = createAssigner(function(object, source, srcIndex) {
                baseMerge(object, source, srcIndex);
            });
            var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
                baseMerge(object, source, srcIndex, customizer);
            });
            var omit = flatRest(function(object, paths) {
                var result2 = {};
                if (object == null) return result2;
                var isDeep = false;
                paths = arrayMap(paths, function(path) {
                    path = castPath(path, object);
                    isDeep || (isDeep = path.length > 1);
                    return path;
                });
                copyObject(object, getAllKeysIn(object), result2);
                if (isDeep) result2 = baseClone(result2, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
                var length = paths.length;
                while(length--)baseUnset(result2, paths[length]);
                return result2;
            });
            function omitBy(object, predicate) {
                return pickBy(object, negate(getIteratee(predicate)));
            }
            var pick = flatRest(function(object, paths) {
                return object == null ? {} : basePick(object, paths);
            });
            function pickBy(object, predicate) {
                if (object == null) return {};
                var props = arrayMap(getAllKeysIn(object), function(prop) {
                    return [
                        prop
                    ];
                });
                predicate = getIteratee(predicate);
                return basePickBy(object, props, function(value, path) {
                    return predicate(value, path[0]);
                });
            }
            function result(object, path, defaultValue) {
                path = castPath(path, object);
                var index = -1, length = path.length;
                if (!length) {
                    length = 1;
                    object = undefined$1;
                }
                while(++index < length){
                    var value = object == null ? undefined$1 : object[toKey(path[index])];
                    if (value === undefined$1) {
                        index = length;
                        value = defaultValue;
                    }
                    object = isFunction(value) ? value.call(object) : value;
                }
                return object;
            }
            function set(object, path, value) {
                return object == null ? object : baseSet(object, path, value);
            }
            function setWith(object, path, value, customizer) {
                customizer = typeof customizer == "function" ? customizer : undefined$1;
                return object == null ? object : baseSet(object, path, value, customizer);
            }
            var toPairs = createToPairs(keys);
            var toPairsIn = createToPairs(keysIn);
            function transform(object, iteratee2, accumulator) {
                var isArr = isArray(object), isArrLike = isArr || isBuffer(object) || isTypedArray(object);
                iteratee2 = getIteratee(iteratee2, 4);
                if (accumulator == null) {
                    var Ctor = object && object.constructor;
                    if (isArrLike) accumulator = isArr ? new Ctor() : [];
                    else if (isObject(object)) accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
                    else accumulator = {};
                }
                (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object2) {
                    return iteratee2(accumulator, value, index, object2);
                });
                return accumulator;
            }
            function unset(object, path) {
                return object == null ? true : baseUnset(object, path);
            }
            function update(object, path, updater) {
                return object == null ? object : baseUpdate(object, path, castFunction(updater));
            }
            function updateWith(object, path, updater, customizer) {
                customizer = typeof customizer == "function" ? customizer : undefined$1;
                return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
            }
            function values(object) {
                return object == null ? [] : baseValues(object, keys(object));
            }
            function valuesIn(object) {
                return object == null ? [] : baseValues(object, keysIn(object));
            }
            function clamp(number, lower, upper) {
                if (upper === undefined$1) {
                    upper = lower;
                    lower = undefined$1;
                }
                if (upper !== undefined$1) {
                    upper = toNumber(upper);
                    upper = upper === upper ? upper : 0;
                }
                if (lower !== undefined$1) {
                    lower = toNumber(lower);
                    lower = lower === lower ? lower : 0;
                }
                return baseClamp(toNumber(number), lower, upper);
            }
            function inRange(number, start, end) {
                start = toFinite(start);
                if (end === undefined$1) {
                    end = start;
                    start = 0;
                } else end = toFinite(end);
                number = toNumber(number);
                return baseInRange(number, start, end);
            }
            function random(lower, upper, floating) {
                if (floating && typeof floating != "boolean" && isIterateeCall(lower, upper, floating)) upper = floating = undefined$1;
                if (floating === undefined$1) {
                    if (typeof upper == "boolean") {
                        floating = upper;
                        upper = undefined$1;
                    } else if (typeof lower == "boolean") {
                        floating = lower;
                        lower = undefined$1;
                    }
                }
                if (lower === undefined$1 && upper === undefined$1) {
                    lower = 0;
                    upper = 1;
                } else {
                    lower = toFinite(lower);
                    if (upper === undefined$1) {
                        upper = lower;
                        lower = 0;
                    } else upper = toFinite(upper);
                }
                if (lower > upper) {
                    var temp = lower;
                    lower = upper;
                    upper = temp;
                }
                if (floating || lower % 1 || upper % 1) {
                    var rand = nativeRandom();
                    return nativeMin(lower + rand * (upper - lower + freeParseFloat("1e-" + ((rand + "").length - 1))), upper);
                }
                return baseRandom(lower, upper);
            }
            var camelCase = createCompounder(function(result2, word, index) {
                word = word.toLowerCase();
                return result2 + (index ? capitalize2(word) : word);
            });
            function capitalize2(string) {
                return upperFirst(toString(string).toLowerCase());
            }
            function deburr(string) {
                string = toString(string);
                return string && string.replace(reLatin, deburrLetter).replace(reComboMark, "");
            }
            function endsWith(string, target, position) {
                string = toString(string);
                target = baseToString(target);
                var length = string.length;
                position = position === undefined$1 ? length : baseClamp(toInteger(position), 0, length);
                var end = position;
                position -= target.length;
                return position >= 0 && string.slice(position, end) == target;
            }
            function escape(string) {
                string = toString(string);
                return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;
            }
            function escapeRegExp(string) {
                string = toString(string);
                return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, "\\$&") : string;
            }
            var kebabCase = createCompounder(function(result2, word, index) {
                return result2 + (index ? "-" : "") + word.toLowerCase();
            });
            var lowerCase = createCompounder(function(result2, word, index) {
                return result2 + (index ? " " : "") + word.toLowerCase();
            });
            var lowerFirst = createCaseFirst("toLowerCase");
            function pad(string, length, chars) {
                string = toString(string);
                length = toInteger(length);
                var strLength = length ? stringSize(string) : 0;
                if (!length || strLength >= length) return string;
                var mid = (length - strLength) / 2;
                return createPadding(nativeFloor(mid), chars) + string + createPadding(nativeCeil(mid), chars);
            }
            function padEnd(string, length, chars) {
                string = toString(string);
                length = toInteger(length);
                var strLength = length ? stringSize(string) : 0;
                return length && strLength < length ? string + createPadding(length - strLength, chars) : string;
            }
            function padStart(string, length, chars) {
                string = toString(string);
                length = toInteger(length);
                var strLength = length ? stringSize(string) : 0;
                return length && strLength < length ? createPadding(length - strLength, chars) + string : string;
            }
            function parseInt2(string, radix, guard) {
                if (guard || radix == null) radix = 0;
                else if (radix) radix = +radix;
                return nativeParseInt(toString(string).replace(reTrimStart, ""), radix || 0);
            }
            function repeat(string, n, guard) {
                if (guard ? isIterateeCall(string, n, guard) : n === undefined$1) n = 1;
                else n = toInteger(n);
                return baseRepeat(toString(string), n);
            }
            function replace() {
                var args = arguments, string = toString(args[0]);
                return args.length < 3 ? string : string.replace(args[1], args[2]);
            }
            var snakeCase = createCompounder(function(result2, word, index) {
                return result2 + (index ? "_" : "") + word.toLowerCase();
            });
            function split(string, separator, limit) {
                if (limit && typeof limit != "number" && isIterateeCall(string, separator, limit)) separator = limit = undefined$1;
                limit = limit === undefined$1 ? MAX_ARRAY_LENGTH : limit >>> 0;
                if (!limit) return [];
                string = toString(string);
                if (string && (typeof separator == "string" || separator != null && !isRegExp(separator))) {
                    separator = baseToString(separator);
                    if (!separator && hasUnicode(string)) return castSlice(stringToArray(string), 0, limit);
                }
                return string.split(separator, limit);
            }
            var startCase = createCompounder(function(result2, word, index) {
                return result2 + (index ? " " : "") + upperFirst(word);
            });
            function startsWith(string, target, position) {
                string = toString(string);
                position = position == null ? 0 : baseClamp(toInteger(position), 0, string.length);
                target = baseToString(target);
                return string.slice(position, position + target.length) == target;
            }
            function template(string, options, guard) {
                var settings = lodash2.templateSettings;
                if (guard && isIterateeCall(string, options, guard)) options = undefined$1;
                string = toString(string);
                options = assignInWith({}, options, settings, customDefaultsAssignIn);
                var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn), importsKeys = keys(imports), importsValues = baseValues(imports, importsKeys);
                var isEscaping, isEvaluating, index = 0, interpolate = options.interpolate || reNoMatch, source = "__p += '";
                var reDelimiters = RegExp2((options.escape || reNoMatch).source + "|" + interpolate.source + "|" + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + "|" + (options.evaluate || reNoMatch).source + "|$", "g");
                var sourceURL = "//# sourceURL=" + (hasOwnProperty.call(options, "sourceURL") ? (options.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++templateCounter + "]") + "\n";
                string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
                    interpolateValue || (interpolateValue = esTemplateValue);
                    source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);
                    if (escapeValue) {
                        isEscaping = true;
                        source += "' +\n__e(" + escapeValue + ") +\n'";
                    }
                    if (evaluateValue) {
                        isEvaluating = true;
                        source += "';\n" + evaluateValue + ";\n__p += '";
                    }
                    if (interpolateValue) source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
                    index = offset + match.length;
                    return match;
                });
                source += "';\n";
                var variable = hasOwnProperty.call(options, "variable") && options.variable;
                if (!variable) source = "with (obj) {\n" + source + "\n}\n";
                else if (reForbiddenIdentifierChars.test(variable)) throw new Error2(INVALID_TEMPL_VAR_ERROR_TEXT);
                source = (isEvaluating ? source.replace(reEmptyStringLeading, "") : source).replace(reEmptyStringMiddle, "$1").replace(reEmptyStringTrailing, "$1;");
                source = "function(" + (variable || "obj") + ") {\n" + (variable ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (isEscaping ? ", __e = _.escape" : "") + (isEvaluating ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + source + "return __p\n}";
                var result2 = attempt(function() {
                    return Function2(importsKeys, sourceURL + "return " + source).apply(undefined$1, importsValues);
                });
                result2.source = source;
                if (isError(result2)) throw result2;
                return result2;
            }
            function toLower(value) {
                return toString(value).toLowerCase();
            }
            function toUpper(value) {
                return toString(value).toUpperCase();
            }
            function trim(string, chars, guard) {
                string = toString(string);
                if (string && (guard || chars === undefined$1)) return baseTrim(string);
                if (!string || !(chars = baseToString(chars))) return string;
                var strSymbols = stringToArray(string), chrSymbols = stringToArray(chars), start = charsStartIndex(strSymbols, chrSymbols), end = charsEndIndex(strSymbols, chrSymbols) + 1;
                return castSlice(strSymbols, start, end).join("");
            }
            function trimEnd(string, chars, guard) {
                string = toString(string);
                if (string && (guard || chars === undefined$1)) return string.slice(0, trimmedEndIndex(string) + 1);
                if (!string || !(chars = baseToString(chars))) return string;
                var strSymbols = stringToArray(string), end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;
                return castSlice(strSymbols, 0, end).join("");
            }
            function trimStart(string, chars, guard) {
                string = toString(string);
                if (string && (guard || chars === undefined$1)) return string.replace(reTrimStart, "");
                if (!string || !(chars = baseToString(chars))) return string;
                var strSymbols = stringToArray(string), start = charsStartIndex(strSymbols, stringToArray(chars));
                return castSlice(strSymbols, start).join("");
            }
            function truncate(string, options) {
                var length = DEFAULT_TRUNC_LENGTH, omission = DEFAULT_TRUNC_OMISSION;
                if (isObject(options)) {
                    var separator = "separator" in options ? options.separator : separator;
                    length = "length" in options ? toInteger(options.length) : length;
                    omission = "omission" in options ? baseToString(options.omission) : omission;
                }
                string = toString(string);
                var strLength = string.length;
                if (hasUnicode(string)) {
                    var strSymbols = stringToArray(string);
                    strLength = strSymbols.length;
                }
                if (length >= strLength) return string;
                var end = length - stringSize(omission);
                if (end < 1) return omission;
                var result2 = strSymbols ? castSlice(strSymbols, 0, end).join("") : string.slice(0, end);
                if (separator === undefined$1) return result2 + omission;
                if (strSymbols) end += result2.length - end;
                if (isRegExp(separator)) {
                    if (string.slice(end).search(separator)) {
                        var match, substring = result2;
                        if (!separator.global) separator = RegExp2(separator.source, toString(reFlags.exec(separator)) + "g");
                        separator.lastIndex = 0;
                        while(match = separator.exec(substring))var newEnd = match.index;
                        result2 = result2.slice(0, newEnd === undefined$1 ? end : newEnd);
                    }
                } else if (string.indexOf(baseToString(separator), end) != end) {
                    var index = result2.lastIndexOf(separator);
                    if (index > -1) result2 = result2.slice(0, index);
                }
                return result2 + omission;
            }
            function unescape(string) {
                string = toString(string);
                return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;
            }
            var upperCase = createCompounder(function(result2, word, index) {
                return result2 + (index ? " " : "") + word.toUpperCase();
            });
            var upperFirst = createCaseFirst("toUpperCase");
            function words(string, pattern, guard) {
                string = toString(string);
                pattern = guard ? undefined$1 : pattern;
                if (pattern === undefined$1) return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
                return string.match(pattern) || [];
            }
            var attempt = baseRest(function(func, args) {
                try {
                    return apply(func, undefined$1, args);
                } catch (e) {
                    return isError(e) ? e : new Error2(e);
                }
            });
            var bindAll = flatRest(function(object, methodNames) {
                arrayEach(methodNames, function(key) {
                    key = toKey(key);
                    baseAssignValue(object, key, bind(object[key], object));
                });
                return object;
            });
            function cond(pairs) {
                var length = pairs == null ? 0 : pairs.length, toIteratee = getIteratee();
                pairs = !length ? [] : arrayMap(pairs, function(pair) {
                    if (typeof pair[1] != "function") throw new TypeError2(FUNC_ERROR_TEXT);
                    return [
                        toIteratee(pair[0]),
                        pair[1]
                    ];
                });
                return baseRest(function(args) {
                    var index = -1;
                    while(++index < length){
                        var pair = pairs[index];
                        if (apply(pair[0], this, args)) return apply(pair[1], this, args);
                    }
                });
            }
            function conforms(source) {
                return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
            }
            function constant(value) {
                return function() {
                    return value;
                };
            }
            function defaultTo(value, defaultValue) {
                return value == null || value !== value ? defaultValue : value;
            }
            var flow = createFlow();
            var flowRight = createFlow(true);
            function identity(value) {
                return value;
            }
            function iteratee(func) {
                return baseIteratee(typeof func == "function" ? func : baseClone(func, CLONE_DEEP_FLAG));
            }
            function matches(source) {
                return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
            }
            function matchesProperty(path, srcValue) {
                return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
            }
            var method = baseRest(function(path, args) {
                return function(object) {
                    return baseInvoke(object, path, args);
                };
            });
            var methodOf = baseRest(function(object, args) {
                return function(path) {
                    return baseInvoke(object, path, args);
                };
            });
            function mixin(object, source, options) {
                var props = keys(source), methodNames = baseFunctions(source, props);
                if (options == null && !(isObject(source) && (methodNames.length || !props.length))) {
                    options = source;
                    source = object;
                    object = this;
                    methodNames = baseFunctions(source, keys(source));
                }
                var chain2 = !(isObject(options) && "chain" in options) || !!options.chain, isFunc = isFunction(object);
                arrayEach(methodNames, function(methodName) {
                    var func = source[methodName];
                    object[methodName] = func;
                    if (isFunc) object.prototype[methodName] = function() {
                        var chainAll = this.__chain__;
                        if (chain2 || chainAll) {
                            var result2 = object(this.__wrapped__), actions = result2.__actions__ = copyArray(this.__actions__);
                            actions.push({
                                "func": func,
                                "args": arguments,
                                "thisArg": object
                            });
                            result2.__chain__ = chainAll;
                            return result2;
                        }
                        return func.apply(object, arrayPush([
                            this.value()
                        ], arguments));
                    };
                });
                return object;
            }
            function noConflict() {
                if (root._ === this) root._ = oldDash;
                return this;
            }
            function noop() {}
            function nthArg(n) {
                n = toInteger(n);
                return baseRest(function(args) {
                    return baseNth(args, n);
                });
            }
            var over = createOver(arrayMap);
            var overEvery = createOver(arrayEvery);
            var overSome = createOver(arraySome);
            function property(path) {
                return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
            }
            function propertyOf(object) {
                return function(path) {
                    return object == null ? undefined$1 : baseGet(object, path);
                };
            }
            var range = createRange();
            var rangeRight = createRange(true);
            function stubArray() {
                return [];
            }
            function stubFalse() {
                return false;
            }
            function stubObject() {
                return {};
            }
            function stubString() {
                return "";
            }
            function stubTrue() {
                return true;
            }
            function times(n, iteratee2) {
                n = toInteger(n);
                if (n < 1 || n > MAX_SAFE_INTEGER) return [];
                var index = MAX_ARRAY_LENGTH, length = nativeMin(n, MAX_ARRAY_LENGTH);
                iteratee2 = getIteratee(iteratee2);
                n -= MAX_ARRAY_LENGTH;
                var result2 = baseTimes(length, iteratee2);
                while(++index < n)iteratee2(index);
                return result2;
            }
            function toPath(value) {
                if (isArray(value)) return arrayMap(value, toKey);
                return isSymbol(value) ? [
                    value
                ] : copyArray(stringToPath(toString(value)));
            }
            function uniqueId(prefix) {
                var id = ++idCounter;
                return toString(prefix) + id;
            }
            var add = createMathOperation(function(augend, addend) {
                return augend + addend;
            }, 0);
            var ceil = createRound("ceil");
            var divide = createMathOperation(function(dividend, divisor) {
                return dividend / divisor;
            }, 1);
            var floor = createRound("floor");
            function max(array) {
                return array && array.length ? baseExtremum(array, identity, baseGt) : undefined$1;
            }
            function maxBy(array, iteratee2) {
                return array && array.length ? baseExtremum(array, getIteratee(iteratee2, 2), baseGt) : undefined$1;
            }
            function mean(array) {
                return baseMean(array, identity);
            }
            function meanBy(array, iteratee2) {
                return baseMean(array, getIteratee(iteratee2, 2));
            }
            function min(array) {
                return array && array.length ? baseExtremum(array, identity, baseLt) : undefined$1;
            }
            function minBy(array, iteratee2) {
                return array && array.length ? baseExtremum(array, getIteratee(iteratee2, 2), baseLt) : undefined$1;
            }
            var multiply = createMathOperation(function(multiplier, multiplicand) {
                return multiplier * multiplicand;
            }, 1);
            var round = createRound("round");
            var subtract = createMathOperation(function(minuend, subtrahend) {
                return minuend - subtrahend;
            }, 0);
            function sum(array) {
                return array && array.length ? baseSum(array, identity) : 0;
            }
            function sumBy(array, iteratee2) {
                return array && array.length ? baseSum(array, getIteratee(iteratee2, 2)) : 0;
            }
            lodash2.after = after;
            lodash2.ary = ary;
            lodash2.assign = assign;
            lodash2.assignIn = assignIn;
            lodash2.assignInWith = assignInWith;
            lodash2.assignWith = assignWith;
            lodash2.at = at;
            lodash2.before = before;
            lodash2.bind = bind;
            lodash2.bindAll = bindAll;
            lodash2.bindKey = bindKey;
            lodash2.castArray = castArray;
            lodash2.chain = chain;
            lodash2.chunk = chunk;
            lodash2.compact = compact;
            lodash2.concat = concat;
            lodash2.cond = cond;
            lodash2.conforms = conforms;
            lodash2.constant = constant;
            lodash2.countBy = countBy;
            lodash2.create = create;
            lodash2.curry = curry;
            lodash2.curryRight = curryRight;
            lodash2.debounce = debounce;
            lodash2.defaults = defaults;
            lodash2.defaultsDeep = defaultsDeep;
            lodash2.defer = defer;
            lodash2.delay = delay;
            lodash2.difference = difference;
            lodash2.differenceBy = differenceBy;
            lodash2.differenceWith = differenceWith;
            lodash2.drop = drop;
            lodash2.dropRight = dropRight;
            lodash2.dropRightWhile = dropRightWhile;
            lodash2.dropWhile = dropWhile;
            lodash2.fill = fill;
            lodash2.filter = filter;
            lodash2.flatMap = flatMap;
            lodash2.flatMapDeep = flatMapDeep;
            lodash2.flatMapDepth = flatMapDepth;
            lodash2.flatten = flatten;
            lodash2.flattenDeep = flattenDeep;
            lodash2.flattenDepth = flattenDepth;
            lodash2.flip = flip;
            lodash2.flow = flow;
            lodash2.flowRight = flowRight;
            lodash2.fromPairs = fromPairs;
            lodash2.functions = functions;
            lodash2.functionsIn = functionsIn;
            lodash2.groupBy = groupBy;
            lodash2.initial = initial;
            lodash2.intersection = intersection;
            lodash2.intersectionBy = intersectionBy;
            lodash2.intersectionWith = intersectionWith;
            lodash2.invert = invert;
            lodash2.invertBy = invertBy;
            lodash2.invokeMap = invokeMap;
            lodash2.iteratee = iteratee;
            lodash2.keyBy = keyBy;
            lodash2.keys = keys;
            lodash2.keysIn = keysIn;
            lodash2.map = map;
            lodash2.mapKeys = mapKeys;
            lodash2.mapValues = mapValues;
            lodash2.matches = matches;
            lodash2.matchesProperty = matchesProperty;
            lodash2.memoize = memoize;
            lodash2.merge = merge;
            lodash2.mergeWith = mergeWith;
            lodash2.method = method;
            lodash2.methodOf = methodOf;
            lodash2.mixin = mixin;
            lodash2.negate = negate;
            lodash2.nthArg = nthArg;
            lodash2.omit = omit;
            lodash2.omitBy = omitBy;
            lodash2.once = once;
            lodash2.orderBy = orderBy;
            lodash2.over = over;
            lodash2.overArgs = overArgs;
            lodash2.overEvery = overEvery;
            lodash2.overSome = overSome;
            lodash2.partial = partial;
            lodash2.partialRight = partialRight;
            lodash2.partition = partition;
            lodash2.pick = pick;
            lodash2.pickBy = pickBy;
            lodash2.property = property;
            lodash2.propertyOf = propertyOf;
            lodash2.pull = pull;
            lodash2.pullAll = pullAll;
            lodash2.pullAllBy = pullAllBy;
            lodash2.pullAllWith = pullAllWith;
            lodash2.pullAt = pullAt;
            lodash2.range = range;
            lodash2.rangeRight = rangeRight;
            lodash2.rearg = rearg;
            lodash2.reject = reject;
            lodash2.remove = remove;
            lodash2.rest = rest;
            lodash2.reverse = reverse;
            lodash2.sampleSize = sampleSize;
            lodash2.set = set;
            lodash2.setWith = setWith;
            lodash2.shuffle = shuffle;
            lodash2.slice = slice;
            lodash2.sortBy = sortBy;
            lodash2.sortedUniq = sortedUniq;
            lodash2.sortedUniqBy = sortedUniqBy;
            lodash2.split = split;
            lodash2.spread = spread;
            lodash2.tail = tail;
            lodash2.take = take;
            lodash2.takeRight = takeRight;
            lodash2.takeRightWhile = takeRightWhile;
            lodash2.takeWhile = takeWhile;
            lodash2.tap = tap;
            lodash2.throttle = throttle;
            lodash2.thru = thru;
            lodash2.toArray = toArray;
            lodash2.toPairs = toPairs;
            lodash2.toPairsIn = toPairsIn;
            lodash2.toPath = toPath;
            lodash2.toPlainObject = toPlainObject;
            lodash2.transform = transform;
            lodash2.unary = unary;
            lodash2.union = union;
            lodash2.unionBy = unionBy;
            lodash2.unionWith = unionWith;
            lodash2.uniq = uniq;
            lodash2.uniqBy = uniqBy;
            lodash2.uniqWith = uniqWith;
            lodash2.unset = unset;
            lodash2.unzip = unzip;
            lodash2.unzipWith = unzipWith;
            lodash2.update = update;
            lodash2.updateWith = updateWith;
            lodash2.values = values;
            lodash2.valuesIn = valuesIn;
            lodash2.without = without;
            lodash2.words = words;
            lodash2.wrap = wrap;
            lodash2.xor = xor;
            lodash2.xorBy = xorBy;
            lodash2.xorWith = xorWith;
            lodash2.zip = zip;
            lodash2.zipObject = zipObject;
            lodash2.zipObjectDeep = zipObjectDeep;
            lodash2.zipWith = zipWith;
            lodash2.entries = toPairs;
            lodash2.entriesIn = toPairsIn;
            lodash2.extend = assignIn;
            lodash2.extendWith = assignInWith;
            mixin(lodash2, lodash2);
            lodash2.add = add;
            lodash2.attempt = attempt;
            lodash2.camelCase = camelCase;
            lodash2.capitalize = capitalize2;
            lodash2.ceil = ceil;
            lodash2.clamp = clamp;
            lodash2.clone = clone;
            lodash2.cloneDeep = cloneDeep;
            lodash2.cloneDeepWith = cloneDeepWith;
            lodash2.cloneWith = cloneWith;
            lodash2.conformsTo = conformsTo;
            lodash2.deburr = deburr;
            lodash2.defaultTo = defaultTo;
            lodash2.divide = divide;
            lodash2.endsWith = endsWith;
            lodash2.eq = eq;
            lodash2.escape = escape;
            lodash2.escapeRegExp = escapeRegExp;
            lodash2.every = every;
            lodash2.find = find;
            lodash2.findIndex = findIndex;
            lodash2.findKey = findKey;
            lodash2.findLast = findLast;
            lodash2.findLastIndex = findLastIndex;
            lodash2.findLastKey = findLastKey;
            lodash2.floor = floor;
            lodash2.forEach = forEach;
            lodash2.forEachRight = forEachRight;
            lodash2.forIn = forIn;
            lodash2.forInRight = forInRight;
            lodash2.forOwn = forOwn;
            lodash2.forOwnRight = forOwnRight;
            lodash2.get = get;
            lodash2.gt = gt;
            lodash2.gte = gte;
            lodash2.has = has;
            lodash2.hasIn = hasIn;
            lodash2.head = head;
            lodash2.identity = identity;
            lodash2.includes = includes;
            lodash2.indexOf = indexOf;
            lodash2.inRange = inRange;
            lodash2.invoke = invoke;
            lodash2.isArguments = isArguments;
            lodash2.isArray = isArray;
            lodash2.isArrayBuffer = isArrayBuffer;
            lodash2.isArrayLike = isArrayLike;
            lodash2.isArrayLikeObject = isArrayLikeObject;
            lodash2.isBoolean = isBoolean;
            lodash2.isBuffer = isBuffer;
            lodash2.isDate = isDate;
            lodash2.isElement = isElement;
            lodash2.isEmpty = isEmpty;
            lodash2.isEqual = isEqual;
            lodash2.isEqualWith = isEqualWith;
            lodash2.isError = isError;
            lodash2.isFinite = isFinite;
            lodash2.isFunction = isFunction;
            lodash2.isInteger = isInteger;
            lodash2.isLength = isLength;
            lodash2.isMap = isMap;
            lodash2.isMatch = isMatch;
            lodash2.isMatchWith = isMatchWith;
            lodash2.isNaN = isNaN2;
            lodash2.isNative = isNative;
            lodash2.isNil = isNil;
            lodash2.isNull = isNull;
            lodash2.isNumber = isNumber;
            lodash2.isObject = isObject;
            lodash2.isObjectLike = isObjectLike;
            lodash2.isPlainObject = isPlainObject;
            lodash2.isRegExp = isRegExp;
            lodash2.isSafeInteger = isSafeInteger;
            lodash2.isSet = isSet;
            lodash2.isString = isString;
            lodash2.isSymbol = isSymbol;
            lodash2.isTypedArray = isTypedArray;
            lodash2.isUndefined = isUndefined;
            lodash2.isWeakMap = isWeakMap;
            lodash2.isWeakSet = isWeakSet;
            lodash2.join = join;
            lodash2.kebabCase = kebabCase;
            lodash2.last = last;
            lodash2.lastIndexOf = lastIndexOf;
            lodash2.lowerCase = lowerCase;
            lodash2.lowerFirst = lowerFirst;
            lodash2.lt = lt;
            lodash2.lte = lte;
            lodash2.max = max;
            lodash2.maxBy = maxBy;
            lodash2.mean = mean;
            lodash2.meanBy = meanBy;
            lodash2.min = min;
            lodash2.minBy = minBy;
            lodash2.stubArray = stubArray;
            lodash2.stubFalse = stubFalse;
            lodash2.stubObject = stubObject;
            lodash2.stubString = stubString;
            lodash2.stubTrue = stubTrue;
            lodash2.multiply = multiply;
            lodash2.nth = nth;
            lodash2.noConflict = noConflict;
            lodash2.noop = noop;
            lodash2.now = now;
            lodash2.pad = pad;
            lodash2.padEnd = padEnd;
            lodash2.padStart = padStart;
            lodash2.parseInt = parseInt2;
            lodash2.random = random;
            lodash2.reduce = reduce;
            lodash2.reduceRight = reduceRight;
            lodash2.repeat = repeat;
            lodash2.replace = replace;
            lodash2.result = result;
            lodash2.round = round;
            lodash2.runInContext = runInContext2;
            lodash2.sample = sample;
            lodash2.size = size;
            lodash2.snakeCase = snakeCase;
            lodash2.some = some;
            lodash2.sortedIndex = sortedIndex;
            lodash2.sortedIndexBy = sortedIndexBy;
            lodash2.sortedIndexOf = sortedIndexOf;
            lodash2.sortedLastIndex = sortedLastIndex;
            lodash2.sortedLastIndexBy = sortedLastIndexBy;
            lodash2.sortedLastIndexOf = sortedLastIndexOf;
            lodash2.startCase = startCase;
            lodash2.startsWith = startsWith;
            lodash2.subtract = subtract;
            lodash2.sum = sum;
            lodash2.sumBy = sumBy;
            lodash2.template = template;
            lodash2.times = times;
            lodash2.toFinite = toFinite;
            lodash2.toInteger = toInteger;
            lodash2.toLength = toLength;
            lodash2.toLower = toLower;
            lodash2.toNumber = toNumber;
            lodash2.toSafeInteger = toSafeInteger;
            lodash2.toString = toString;
            lodash2.toUpper = toUpper;
            lodash2.trim = trim;
            lodash2.trimEnd = trimEnd;
            lodash2.trimStart = trimStart;
            lodash2.truncate = truncate;
            lodash2.unescape = unescape;
            lodash2.uniqueId = uniqueId;
            lodash2.upperCase = upperCase;
            lodash2.upperFirst = upperFirst;
            lodash2.each = forEach;
            lodash2.eachRight = forEachRight;
            lodash2.first = head;
            mixin(lodash2, function() {
                var source = {};
                baseForOwn(lodash2, function(func, methodName) {
                    if (!hasOwnProperty.call(lodash2.prototype, methodName)) source[methodName] = func;
                });
                return source;
            }(), {
                "chain": false
            });
            lodash2.VERSION = VERSION;
            arrayEach([
                "bind",
                "bindKey",
                "curry",
                "curryRight",
                "partial",
                "partialRight"
            ], function(methodName) {
                lodash2[methodName].placeholder = lodash2;
            });
            arrayEach([
                "drop",
                "take"
            ], function(methodName, index) {
                LazyWrapper.prototype[methodName] = function(n) {
                    n = n === undefined$1 ? 1 : nativeMax(toInteger(n), 0);
                    var result2 = this.__filtered__ && !index ? new LazyWrapper(this) : this.clone();
                    if (result2.__filtered__) result2.__takeCount__ = nativeMin(n, result2.__takeCount__);
                    else result2.__views__.push({
                        "size": nativeMin(n, MAX_ARRAY_LENGTH),
                        "type": methodName + (result2.__dir__ < 0 ? "Right" : "")
                    });
                    return result2;
                };
                LazyWrapper.prototype[methodName + "Right"] = function(n) {
                    return this.reverse()[methodName](n).reverse();
                };
            });
            arrayEach([
                "filter",
                "map",
                "takeWhile"
            ], function(methodName, index) {
                var type = index + 1, isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;
                LazyWrapper.prototype[methodName] = function(iteratee2) {
                    var result2 = this.clone();
                    result2.__iteratees__.push({
                        "iteratee": getIteratee(iteratee2, 3),
                        "type": type
                    });
                    result2.__filtered__ = result2.__filtered__ || isFilter;
                    return result2;
                };
            });
            arrayEach([
                "head",
                "last"
            ], function(methodName, index) {
                var takeName = "take" + (index ? "Right" : "");
                LazyWrapper.prototype[methodName] = function() {
                    return this[takeName](1).value()[0];
                };
            });
            arrayEach([
                "initial",
                "tail"
            ], function(methodName, index) {
                var dropName = "drop" + (index ? "" : "Right");
                LazyWrapper.prototype[methodName] = function() {
                    return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
                };
            });
            LazyWrapper.prototype.compact = function() {
                return this.filter(identity);
            };
            LazyWrapper.prototype.find = function(predicate) {
                return this.filter(predicate).head();
            };
            LazyWrapper.prototype.findLast = function(predicate) {
                return this.reverse().find(predicate);
            };
            LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
                if (typeof path == "function") return new LazyWrapper(this);
                return this.map(function(value) {
                    return baseInvoke(value, path, args);
                });
            });
            LazyWrapper.prototype.reject = function(predicate) {
                return this.filter(negate(getIteratee(predicate)));
            };
            LazyWrapper.prototype.slice = function(start, end) {
                start = toInteger(start);
                var result2 = this;
                if (result2.__filtered__ && (start > 0 || end < 0)) return new LazyWrapper(result2);
                if (start < 0) result2 = result2.takeRight(-start);
                else if (start) result2 = result2.drop(start);
                if (end !== undefined$1) {
                    end = toInteger(end);
                    result2 = end < 0 ? result2.dropRight(-end) : result2.take(end - start);
                }
                return result2;
            };
            LazyWrapper.prototype.takeRightWhile = function(predicate) {
                return this.reverse().takeWhile(predicate).reverse();
            };
            LazyWrapper.prototype.toArray = function() {
                return this.take(MAX_ARRAY_LENGTH);
            };
            baseForOwn(LazyWrapper.prototype, function(func, methodName) {
                var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName), isTaker = /^(?:head|last)$/.test(methodName), lodashFunc = lodash2[isTaker ? "take" + (methodName == "last" ? "Right" : "") : methodName], retUnwrapped = isTaker || /^find/.test(methodName);
                if (!lodashFunc) return;
                lodash2.prototype[methodName] = function() {
                    var value = this.__wrapped__, args = isTaker ? [
                        1
                    ] : arguments, isLazy = value instanceof LazyWrapper, iteratee2 = args[0], useLazy = isLazy || isArray(value);
                    var interceptor = function(value2) {
                        var result3 = lodashFunc.apply(lodash2, arrayPush([
                            value2
                        ], args));
                        return isTaker && chainAll ? result3[0] : result3;
                    };
                    if (useLazy && checkIteratee && typeof iteratee2 == "function" && iteratee2.length != 1) isLazy = useLazy = false;
                    var chainAll = this.__chain__, isHybrid = !!this.__actions__.length, isUnwrapped = retUnwrapped && !chainAll, onlyLazy = isLazy && !isHybrid;
                    if (!retUnwrapped && useLazy) {
                        value = onlyLazy ? value : new LazyWrapper(this);
                        var result2 = func.apply(value, args);
                        result2.__actions__.push({
                            "func": thru,
                            "args": [
                                interceptor
                            ],
                            "thisArg": undefined$1
                        });
                        return new LodashWrapper(result2, chainAll);
                    }
                    if (isUnwrapped && onlyLazy) return func.apply(this, args);
                    result2 = this.thru(interceptor);
                    return isUnwrapped ? isTaker ? result2.value()[0] : result2.value() : result2;
                };
            });
            arrayEach([
                "pop",
                "push",
                "shift",
                "sort",
                "splice",
                "unshift"
            ], function(methodName) {
                var func = arrayProto[methodName], chainName = /^(?:push|sort|unshift)$/.test(methodName) ? "tap" : "thru", retUnwrapped = /^(?:pop|shift)$/.test(methodName);
                lodash2.prototype[methodName] = function() {
                    var args = arguments;
                    if (retUnwrapped && !this.__chain__) {
                        var value = this.value();
                        return func.apply(isArray(value) ? value : [], args);
                    }
                    return this[chainName](function(value2) {
                        return func.apply(isArray(value2) ? value2 : [], args);
                    });
                };
            });
            baseForOwn(LazyWrapper.prototype, function(func, methodName) {
                var lodashFunc = lodash2[methodName];
                if (lodashFunc) {
                    var key = lodashFunc.name + "";
                    if (!hasOwnProperty.call(realNames, key)) realNames[key] = [];
                    realNames[key].push({
                        "name": methodName,
                        "func": lodashFunc
                    });
                }
            });
            realNames[createHybrid(undefined$1, WRAP_BIND_KEY_FLAG).name] = [
                {
                    "name": "wrapper",
                    "func": undefined$1
                }
            ];
            LazyWrapper.prototype.clone = lazyClone;
            LazyWrapper.prototype.reverse = lazyReverse;
            LazyWrapper.prototype.value = lazyValue;
            lodash2.prototype.at = wrapperAt;
            lodash2.prototype.chain = wrapperChain;
            lodash2.prototype.commit = wrapperCommit;
            lodash2.prototype.next = wrapperNext;
            lodash2.prototype.plant = wrapperPlant;
            lodash2.prototype.reverse = wrapperReverse;
            lodash2.prototype.toJSON = lodash2.prototype.valueOf = lodash2.prototype.value = wrapperValue;
            lodash2.prototype.first = lodash2.prototype.head;
            if (symIterator) lodash2.prototype[symIterator] = wrapperToIterator;
            return lodash2;
        };
        var _ = runInContext();
        if (freeModule) {
            (freeModule.exports = _)._ = _;
            freeExports._ = _;
        } else root._ = _;
    }).call(commonjsGlobal);
})(lodash, lodash.exports);
class image_selector_controller_default extends Controller {
    connect() {
        this._renderResults();
    }
    _renderResults() {
        if (this.relatedMediaValue.thumb && this.relatedMediaValue.thumb.length > 0) {
            this.imageContainerTarget.innerHTML = this.imageTemplate(this.relatedMediaValue);
            if (this.idValue) this.imageContainerTarget.innerHTML += this.existingFieldsTemplate(this.relatedMediaValue);
            else this.imageContainerTarget.innerHTML += this.newFieldsTemplate(this.relatedMediaValue);
        } else {
            this.imageContainerTarget.innerHTML = this.emptyTemplate(this.relatedMediaValue);
            if (this.idValue) this.imageContainerTarget.innerHTML += this.existingFieldsDeleteTemplate(this.relatedMediaValue);
        }
    }
    get imageTemplate() {
        return lodash.exports.template(this.imageTemplateTarget.innerHTML);
    }
    get emptyTemplate() {
        return lodash.exports.template(this.emptyTemplateTarget.innerHTML);
    }
    get existingFieldsDeleteTemplate() {
        return lodash.exports.template(this.existingFieldsDeleteTemplateTarget.innerHTML);
    }
    get existingFieldsTemplate() {
        return lodash.exports.template(this.existingFieldsTemplateTarget.innerHTML);
    }
    get newFieldsTemplate() {
        return lodash.exports.template(this.newFieldsTemplateTarget.innerHTML);
    }
    relatedMediaValueChanged() {
        this._renderResults();
    }
    receiveModalReturn(returnObject) {
        this.relatedMediaValue = returnObject.payload;
    }
    removeImage() {
        this.relatedMediaValue = {
            id: this.idValue,
            thumb: null,
            kubik_media_upload_id: null
        };
    }
}
image_selector_controller_default.values = {
    id: Number,
    relatedMedia: Object
};
image_selector_controller_default.targets = [
    "imageContainer",
    "emptyTemplate",
    "imageTemplate",
    "newFieldsDeleteTemplate",
    "newFieldsTemplate",
    "existingFieldsTemplate",
    "existingFieldsDeleteTemplate",
    "associationId",
    "mediaUploadId",
    "mediaUploadDelete"
];
class multiple_image_selector_controller_default extends Controller {
    connect() {
        this._renderImages();
    }
    _renderImages() {
        this.imageContainerTarget.innerHTML = "";
        this.relatedMediaValue.forEach(function(image, index) {
            const imageData = {
                ...image,
                index
            };
            if (image.thumb && image.thumb.length > 0) {
                if (imageData.deleteImage) this.imageContainerTarget.innerHTML += this.existingFieldsDeleteTemplate(imageData);
                else this.imageContainerTarget.innerHTML += this.imageTemplate(imageData);
                if (typeof imageData.id !== "undefined") this.imageContainerTarget.innerHTML += this.existingFieldsTemplate(imageData);
                else this.imageContainerTarget.innerHTML += this.newFieldsTemplate(imageData);
            }
        }, this);
        this.imageContainerTarget.innerHTML += this.emptyTemplate();
    }
    get imageTemplate() {
        return lodash.exports.template(this.imageTemplateTarget.innerHTML);
    }
    get emptyTemplate() {
        return lodash.exports.template(this.emptyTemplateTarget.innerHTML);
    }
    get existingFieldsDeleteTemplate() {
        return lodash.exports.template(this.existingFieldsDeleteTemplateTarget.innerHTML);
    }
    get existingFieldsTemplate() {
        return lodash.exports.template(this.existingFieldsTemplateTarget.innerHTML);
    }
    get newFieldsTemplate() {
        return lodash.exports.template(this.newFieldsTemplateTarget.innerHTML);
    }
    relatedMediaValueChanged() {
        this._renderImages();
    }
    receiveModalReturn(returnObject) {
        if (typeof returnObject.return_payload.index !== "undefined") this.relatedMediaValue = [
            ...this.relatedMediaValue.slice(0, returnObject.return_payload.index),
            Object.assign(returnObject.payload, returnObject.return_payload),
            ...this.relatedMediaValue.slice(returnObject.return_payload.index + 1)
        ];
        else this.relatedMediaValue = [
            ...this.relatedMediaValue,
            Object.assign(returnObject.payload, {
                id: null
            })
        ];
    }
    removeImage(e) {
        if (!(e.currentTarget instanceof HTMLElement)) return;
        var index = parseInt(e.currentTarget.dataset.imageIndex);
        if (this.relatedMediaValue.length > 0 && this.relatedMediaValue[index].id) this.relatedMediaValue = Object.assign([], this.relatedMediaValue, {
            [index]: Object.assign(this.relatedMediaValue[index], {
                deleteImage: true
            })
        });
        else this.relatedMediaValue = [
            ...this.relatedMediaValue.slice(0, index),
            ...this.relatedMediaValue.slice(index + 1)
        ];
    }
}
multiple_image_selector_controller_default.values = {
    relatedMedia: {
        type: Array,
        default: []
    }
};
multiple_image_selector_controller_default.targets = [
    "imageContainer",
    "emptyTemplate",
    "imageTemplate",
    "newFieldsDeleteTemplate",
    "newFieldsTemplate",
    "existingFieldsTemplate",
    "existingFieldsDeleteTemplate",
    "associationId",
    "mediaUploadId",
    "mediaUploadDelete"
];
var objectExtend = extend;
function extend() {
    var args = [].slice.call(arguments);
    var deep = false;
    if (typeof args[0] == "boolean") deep = args.shift();
    var result = args[0];
    if (isUnextendable(result)) throw new Error("extendee must be an object");
    var extenders = args.slice(1);
    var len = extenders.length;
    for(var i = 0; i < len; i++){
        var extender = extenders[i];
        for(var key in extender)if (Object.prototype.hasOwnProperty.call(extender, key)) {
            var value = extender[key];
            if (deep && isCloneable(value)) {
                var base = Array.isArray(value) ? [] : {};
                result[key] = extend(true, Object.prototype.hasOwnProperty.call(result, key) && !isUnextendable(result[key]) ? result[key] : base, value);
            } else result[key] = value;
        }
    }
    return result;
}
function isCloneable(obj) {
    return Array.isArray(obj) || ({}).toString.call(obj) == "[object Object]";
}
function isUnextendable(val) {
    return !val || typeof val != "object" && typeof val != "function";
}
function $parcel$interopDefault(a) {
    return a && a.__esModule ? a.default : a;
}
class $4040acfd8584338d$export$2e2bcd8739ae039 {
    on(event, fn) {
        this._callbacks = this._callbacks || {};
        if (!this._callbacks[event]) this._callbacks[event] = [];
        this._callbacks[event].push(fn);
        return this;
    }
    emit(event, ...args) {
        this._callbacks = this._callbacks || {};
        let callbacks = this._callbacks[event];
        if (callbacks) for (let callback of callbacks)callback.apply(this, args);
        if (this.element) this.element.dispatchEvent(this.makeEvent("dropzone:" + event, {
            args
        }));
        return this;
    }
    makeEvent(eventName, detail) {
        let params = {
            bubbles: true,
            cancelable: true,
            detail
        };
        if (typeof window.CustomEvent === "function") return new CustomEvent(eventName, params);
        else {
            var evt = document.createEvent("CustomEvent");
            evt.initCustomEvent(eventName, params.bubbles, params.cancelable, params.detail);
            return evt;
        }
    }
    off(event, fn) {
        if (!this._callbacks || arguments.length === 0) {
            this._callbacks = {};
            return this;
        }
        let callbacks = this._callbacks[event];
        if (!callbacks) return this;
        if (arguments.length === 1) {
            delete this._callbacks[event];
            return this;
        }
        for(let i = 0; i < callbacks.length; i++){
            let callback = callbacks[i];
            if (callback === fn) {
                callbacks.splice(i, 1);
                break;
            }
        }
        return this;
    }
}
var $fd6031f88dce2e32$exports = {};
$fd6031f88dce2e32$exports = '<div class="dz-preview dz-file-preview">\n  <div class="dz-image"><img data-dz-thumbnail=""></div>\n  <div class="dz-details">\n    <div class="dz-size"><span data-dz-size=""></span></div>\n    <div class="dz-filename"><span data-dz-name=""></span></div>\n  </div>\n  <div class="dz-progress">\n    <span class="dz-upload" data-dz-uploadprogress=""></span>\n  </div>\n  <div class="dz-error-message"><span data-dz-errormessage=""></span></div>\n  <div class="dz-success-mark">\n    <svg width="54" height="54" viewBox="0 0 54 54" fill="white" xmlns="http://www.w3.org/2000/svg">\n      <path d="M10.2071 29.7929L14.2929 25.7071C14.6834 25.3166 15.3166 25.3166 15.7071 25.7071L21.2929 31.2929C21.6834 31.6834 22.3166 31.6834 22.7071 31.2929L38.2929 15.7071C38.6834 15.3166 39.3166 15.3166 39.7071 15.7071L43.7929 19.7929C44.1834 20.1834 44.1834 20.8166 43.7929 21.2071L22.7071 42.2929C22.3166 42.6834 21.6834 42.6834 21.2929 42.2929L10.2071 31.2071C9.81658 30.8166 9.81658 30.1834 10.2071 29.7929Z"></path>\n    </svg>\n  </div>\n  <div class="dz-error-mark">\n    <svg width="54" height="54" viewBox="0 0 54 54" fill="white" xmlns="http://www.w3.org/2000/svg">\n      <path d="M26.2929 20.2929L19.2071 13.2071C18.8166 12.8166 18.1834 12.8166 17.7929 13.2071L13.2071 17.7929C12.8166 18.1834 12.8166 18.8166 13.2071 19.2071L20.2929 26.2929C20.6834 26.6834 20.6834 27.3166 20.2929 27.7071L13.2071 34.7929C12.8166 35.1834 12.8166 35.8166 13.2071 36.2071L17.7929 40.7929C18.1834 41.1834 18.8166 41.1834 19.2071 40.7929L26.2929 33.7071C26.6834 33.3166 27.3166 33.3166 27.7071 33.7071L34.7929 40.7929C35.1834 41.1834 35.8166 41.1834 36.2071 40.7929L40.7929 36.2071C41.1834 35.8166 41.1834 35.1834 40.7929 34.7929L33.7071 27.7071C33.3166 27.3166 33.3166 26.6834 33.7071 26.2929L40.7929 19.2071C41.1834 18.8166 41.1834 18.1834 40.7929 17.7929L36.2071 13.2071C35.8166 12.8166 35.1834 12.8166 34.7929 13.2071L27.7071 20.2929C27.3166 20.6834 26.6834 20.6834 26.2929 20.2929Z"></path>\n    </svg>\n  </div>\n</div>\n';
let $4ca367182776f80b$var$defaultOptions = {
    url: null,
    method: "post",
    withCredentials: false,
    timeout: null,
    parallelUploads: 2,
    uploadMultiple: false,
    chunking: false,
    forceChunking: false,
    chunkSize: 2097152,
    parallelChunkUploads: false,
    retryChunks: false,
    retryChunksLimit: 3,
    maxFilesize: 256,
    paramName: "file",
    createImageThumbnails: true,
    maxThumbnailFilesize: 10,
    thumbnailWidth: 120,
    thumbnailHeight: 120,
    thumbnailMethod: "crop",
    resizeWidth: null,
    resizeHeight: null,
    resizeMimeType: null,
    resizeQuality: 0.8,
    resizeMethod: "contain",
    filesizeBase: 1e3,
    maxFiles: null,
    headers: null,
    defaultHeaders: true,
    clickable: true,
    ignoreHiddenFiles: true,
    acceptedFiles: null,
    acceptedMimeTypes: null,
    autoProcessQueue: true,
    autoQueue: true,
    addRemoveLinks: false,
    previewsContainer: null,
    disablePreviews: false,
    hiddenInputContainer: "body",
    capture: null,
    renameFilename: null,
    renameFile: null,
    forceFallback: false,
    dictDefaultMessage: "Drop files here to upload",
    dictFallbackMessage: "Your browser does not support drag'n'drop file uploads.",
    dictFallbackText: "Please use the fallback form below to upload your files like in the olden days.",
    dictFileTooBig: "File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.",
    dictInvalidFileType: "You can't upload files of this type.",
    dictResponseError: "Server responded with {{statusCode}} code.",
    dictCancelUpload: "Cancel upload",
    dictUploadCanceled: "Upload canceled.",
    dictCancelUploadConfirmation: "Are you sure you want to cancel this upload?",
    dictRemoveFile: "Remove file",
    dictRemoveFileConfirmation: null,
    dictMaxFilesExceeded: "You can not upload any more files.",
    dictFileSizeUnits: {
        tb: "TB",
        gb: "GB",
        mb: "MB",
        kb: "KB",
        b: "b"
    },
    init () {},
    params (files, xhr, chunk) {
        if (chunk) return {
            dzuuid: chunk.file.upload.uuid,
            dzchunkindex: chunk.index,
            dztotalfilesize: chunk.file.size,
            dzchunksize: this.options.chunkSize,
            dztotalchunkcount: chunk.file.upload.totalChunkCount,
            dzchunkbyteoffset: chunk.index * this.options.chunkSize
        };
    },
    accept (file, done) {
        return done();
    },
    chunksUploaded: function(file, done) {
        done();
    },
    binaryBody: false,
    fallback () {
        let messageElement;
        this.element.className = `${this.element.className} dz-browser-not-supported`;
        for (let child of this.element.getElementsByTagName("div"))if (/(^| )dz-message($| )/.test(child.className)) {
            messageElement = child;
            child.className = "dz-message";
            break;
        }
        if (!messageElement) {
            messageElement = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement('<div class="dz-message"><span></span></div>');
            this.element.appendChild(messageElement);
        }
        let span = messageElement.getElementsByTagName("span")[0];
        if (span) {
            if (span.textContent != null) span.textContent = this.options.dictFallbackMessage;
            else if (span.innerText != null) span.innerText = this.options.dictFallbackMessage;
        }
        return this.element.appendChild(this.getFallbackForm());
    },
    resize (file, width, height, resizeMethod) {
        let info = {
            srcX: 0,
            srcY: 0,
            srcWidth: file.width,
            srcHeight: file.height
        };
        let srcRatio = file.width / file.height;
        if (width == null && height == null) {
            width = info.srcWidth;
            height = info.srcHeight;
        } else if (width == null) width = height * srcRatio;
        else if (height == null) height = width / srcRatio;
        width = Math.min(width, info.srcWidth);
        height = Math.min(height, info.srcHeight);
        let trgRatio = width / height;
        if (info.srcWidth > width || info.srcHeight > height) {
            if (resizeMethod === "crop") {
                if (srcRatio > trgRatio) {
                    info.srcHeight = file.height;
                    info.srcWidth = info.srcHeight * trgRatio;
                } else {
                    info.srcWidth = file.width;
                    info.srcHeight = info.srcWidth / trgRatio;
                }
            } else if (resizeMethod === "contain") {
                if (srcRatio > trgRatio) height = width / srcRatio;
                else width = height * srcRatio;
            } else throw new Error(`Unknown resizeMethod '${resizeMethod}'`);
        }
        info.srcX = (file.width - info.srcWidth) / 2;
        info.srcY = (file.height - info.srcHeight) / 2;
        info.trgWidth = width;
        info.trgHeight = height;
        return info;
    },
    transformFile (file, done) {
        if ((this.options.resizeWidth || this.options.resizeHeight) && file.type.match(/image.*/)) return this.resizeImage(file, this.options.resizeWidth, this.options.resizeHeight, this.options.resizeMethod, done);
        else return done(file);
    },
    previewTemplate: /* @__PURE__ */ $parcel$interopDefault($fd6031f88dce2e32$exports),
    drop (e) {
        return this.element.classList.remove("dz-drag-hover");
    },
    dragstart (e) {},
    dragend (e) {
        return this.element.classList.remove("dz-drag-hover");
    },
    dragenter (e) {
        return this.element.classList.add("dz-drag-hover");
    },
    dragover (e) {
        return this.element.classList.add("dz-drag-hover");
    },
    dragleave (e) {
        return this.element.classList.remove("dz-drag-hover");
    },
    paste (e) {},
    reset () {
        return this.element.classList.remove("dz-started");
    },
    addedfile (file) {
        if (this.element === this.previewsContainer) this.element.classList.add("dz-started");
        if (this.previewsContainer && !this.options.disablePreviews) {
            file.previewElement = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(this.options.previewTemplate.trim());
            file.previewTemplate = file.previewElement;
            this.previewsContainer.appendChild(file.previewElement);
            for (var node of file.previewElement.querySelectorAll("[data-dz-name]"))node.textContent = file.name;
            for (node of file.previewElement.querySelectorAll("[data-dz-size]"))node.innerHTML = this.filesize(file.size);
            if (this.options.addRemoveLinks) {
                file._removeLink = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(`<a class="dz-remove" href="javascript:undefined;" data-dz-remove>${this.options.dictRemoveFile}</a>`);
                file.previewElement.appendChild(file._removeLink);
            }
            let removeFileEvent = (e)=>{
                e.preventDefault();
                e.stopPropagation();
                if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING) return $3ed269f2f0fb224b$export$2e2bcd8739ae039.confirm(this.options.dictCancelUploadConfirmation, ()=>this.removeFile(file));
                else {
                    if (this.options.dictRemoveFileConfirmation) return $3ed269f2f0fb224b$export$2e2bcd8739ae039.confirm(this.options.dictRemoveFileConfirmation, ()=>this.removeFile(file));
                    else return this.removeFile(file);
                }
            };
            for (let removeLink of file.previewElement.querySelectorAll("[data-dz-remove]"))removeLink.addEventListener("click", removeFileEvent);
        }
    },
    removedfile (file) {
        if (file.previewElement != null && file.previewElement.parentNode != null) file.previewElement.parentNode.removeChild(file.previewElement);
        return this._updateMaxFilesReachedClass();
    },
    thumbnail (file, dataUrl) {
        if (file.previewElement) {
            file.previewElement.classList.remove("dz-file-preview");
            for (let thumbnailElement of file.previewElement.querySelectorAll("[data-dz-thumbnail]")){
                thumbnailElement.alt = file.name;
                thumbnailElement.src = dataUrl;
            }
            return setTimeout(()=>file.previewElement.classList.add("dz-image-preview"), 1);
        }
    },
    error (file, message) {
        if (file.previewElement) {
            file.previewElement.classList.add("dz-error");
            if (typeof message !== "string" && message.error) message = message.error;
            for (let node of file.previewElement.querySelectorAll("[data-dz-errormessage]"))node.textContent = message;
        }
    },
    errormultiple () {},
    processing (file) {
        if (file.previewElement) {
            file.previewElement.classList.add("dz-processing");
            if (file._removeLink) return file._removeLink.innerHTML = this.options.dictCancelUpload;
        }
    },
    processingmultiple () {},
    uploadprogress (file, progress, bytesSent) {
        if (file.previewElement) for (let node of file.previewElement.querySelectorAll("[data-dz-uploadprogress]"))node.nodeName === "PROGRESS" ? node.value = progress : node.style.width = `${progress}%`;
    },
    totaluploadprogress () {},
    sending () {},
    sendingmultiple () {},
    success (file) {
        if (file.previewElement) return file.previewElement.classList.add("dz-success");
    },
    successmultiple () {},
    canceled (file) {
        return this.emit("error", file, this.options.dictUploadCanceled);
    },
    canceledmultiple () {},
    complete (file) {
        if (file._removeLink) file._removeLink.innerHTML = this.options.dictRemoveFile;
        if (file.previewElement) return file.previewElement.classList.add("dz-complete");
    },
    completemultiple () {},
    maxfilesexceeded () {},
    maxfilesreached () {},
    queuecomplete () {},
    addedfiles () {}
};
var $4ca367182776f80b$export$2e2bcd8739ae039 = $4ca367182776f80b$var$defaultOptions;
class $3ed269f2f0fb224b$export$2e2bcd8739ae039 extends $4040acfd8584338d$export$2e2bcd8739ae039 {
    static initClass() {
        this.prototype.Emitter = $4040acfd8584338d$export$2e2bcd8739ae039;
        this.prototype.events = [
            "drop",
            "dragstart",
            "dragend",
            "dragenter",
            "dragover",
            "dragleave",
            "addedfile",
            "addedfiles",
            "removedfile",
            "thumbnail",
            "error",
            "errormultiple",
            "processing",
            "processingmultiple",
            "uploadprogress",
            "totaluploadprogress",
            "sending",
            "sendingmultiple",
            "success",
            "successmultiple",
            "canceled",
            "canceledmultiple",
            "complete",
            "completemultiple",
            "reset",
            "maxfilesexceeded",
            "maxfilesreached",
            "queuecomplete"
        ];
        this.prototype._thumbnailQueue = [];
        this.prototype._processingThumbnail = false;
    }
    getAcceptedFiles() {
        return this.files.filter((file)=>file.accepted).map((file)=>file);
    }
    getRejectedFiles() {
        return this.files.filter((file)=>!file.accepted).map((file)=>file);
    }
    getFilesWithStatus(status) {
        return this.files.filter((file)=>file.status === status).map((file)=>file);
    }
    getQueuedFiles() {
        return this.getFilesWithStatus($3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED);
    }
    getUploadingFiles() {
        return this.getFilesWithStatus($3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING);
    }
    getAddedFiles() {
        return this.getFilesWithStatus($3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED);
    }
    getActiveFiles() {
        return this.files.filter((file)=>file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING || file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED).map((file)=>file);
    }
    init() {
        if (this.element.tagName === "form") this.element.setAttribute("enctype", "multipart/form-data");
        if (this.element.classList.contains("dropzone") && !this.element.querySelector(".dz-message")) this.element.appendChild($3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(`<div class="dz-default dz-message"><button class="dz-button" type="button">${this.options.dictDefaultMessage}</button></div>`));
        if (this.clickableElements.length) {
            let setupHiddenFileInput = ()=>{
                if (this.hiddenFileInput) this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);
                this.hiddenFileInput = document.createElement("input");
                this.hiddenFileInput.setAttribute("type", "file");
                if (this.options.maxFiles === null || this.options.maxFiles > 1) this.hiddenFileInput.setAttribute("multiple", "multiple");
                this.hiddenFileInput.className = "dz-hidden-input";
                if (this.options.acceptedFiles !== null) this.hiddenFileInput.setAttribute("accept", this.options.acceptedFiles);
                if (this.options.capture !== null) this.hiddenFileInput.setAttribute("capture", this.options.capture);
                this.hiddenFileInput.setAttribute("tabindex", "-1");
                this.hiddenFileInput.style.visibility = "hidden";
                this.hiddenFileInput.style.position = "absolute";
                this.hiddenFileInput.style.top = "0";
                this.hiddenFileInput.style.left = "0";
                this.hiddenFileInput.style.height = "0";
                this.hiddenFileInput.style.width = "0";
                $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElement(this.options.hiddenInputContainer, "hiddenInputContainer").appendChild(this.hiddenFileInput);
                this.hiddenFileInput.addEventListener("change", ()=>{
                    let { files  } = this.hiddenFileInput;
                    if (files.length) for (let file of files)this.addFile(file);
                    this.emit("addedfiles", files);
                    setupHiddenFileInput();
                });
            };
            setupHiddenFileInput();
        }
        this.URL = window.URL !== null ? window.URL : window.webkitURL;
        for (let eventName of this.events)this.on(eventName, this.options[eventName]);
        this.on("uploadprogress", ()=>this.updateTotalUploadProgress());
        this.on("removedfile", ()=>this.updateTotalUploadProgress());
        this.on("canceled", (file)=>this.emit("complete", file));
        this.on("complete", (file)=>{
            if (this.getAddedFiles().length === 0 && this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) return setTimeout(()=>this.emit("queuecomplete"), 0);
        });
        const containsFiles = function(e) {
            if (e.dataTransfer.types) for(var i = 0; i < e.dataTransfer.types.length; i++){
                if (e.dataTransfer.types[i] === "Files") return true;
            }
            return false;
        };
        let noPropagation = function(e) {
            if (!containsFiles(e)) return;
            e.stopPropagation();
            if (e.preventDefault) return e.preventDefault();
            else return e.returnValue = false;
        };
        this.listeners = [
            {
                element: this.element,
                events: {
                    dragstart: (e)=>{
                        return this.emit("dragstart", e);
                    },
                    dragenter: (e)=>{
                        noPropagation(e);
                        return this.emit("dragenter", e);
                    },
                    dragover: (e)=>{
                        let efct;
                        try {
                            efct = e.dataTransfer.effectAllowed;
                        } catch (error) {}
                        e.dataTransfer.dropEffect = "move" === efct || "linkMove" === efct ? "move" : "copy";
                        noPropagation(e);
                        return this.emit("dragover", e);
                    },
                    dragleave: (e)=>{
                        return this.emit("dragleave", e);
                    },
                    drop: (e)=>{
                        noPropagation(e);
                        return this.drop(e);
                    },
                    dragend: (e)=>{
                        return this.emit("dragend", e);
                    }
                }
            }
        ];
        this.clickableElements.forEach((clickableElement)=>{
            return this.listeners.push({
                element: clickableElement,
                events: {
                    click: (evt)=>{
                        if (clickableElement !== this.element || evt.target === this.element || $3ed269f2f0fb224b$export$2e2bcd8739ae039.elementInside(evt.target, this.element.querySelector(".dz-message"))) this.hiddenFileInput.click();
                        return true;
                    }
                }
            });
        });
        this.enable();
        return this.options.init.call(this);
    }
    destroy() {
        this.disable();
        this.removeAllFiles(true);
        if (this.hiddenFileInput != null ? this.hiddenFileInput.parentNode : void 0) {
            this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);
            this.hiddenFileInput = null;
        }
        delete this.element.dropzone;
        return $3ed269f2f0fb224b$export$2e2bcd8739ae039.instances.splice($3ed269f2f0fb224b$export$2e2bcd8739ae039.instances.indexOf(this), 1);
    }
    updateTotalUploadProgress() {
        let totalUploadProgress;
        let totalBytesSent = 0;
        let totalBytes = 0;
        let activeFiles = this.getActiveFiles();
        if (activeFiles.length) {
            for (let file of this.getActiveFiles()){
                totalBytesSent += file.upload.bytesSent;
                totalBytes += file.upload.total;
            }
            totalUploadProgress = 100 * totalBytesSent / totalBytes;
        } else totalUploadProgress = 100;
        return this.emit("totaluploadprogress", totalUploadProgress, totalBytes, totalBytesSent);
    }
    _getParamName(n) {
        if (typeof this.options.paramName === "function") return this.options.paramName(n);
        else return `${this.options.paramName}${this.options.uploadMultiple ? `[${n}]` : ""}`;
    }
    _renameFile(file) {
        if (typeof this.options.renameFile !== "function") return file.name;
        return this.options.renameFile(file);
    }
    getFallbackForm() {
        let existingFallback, form;
        if (existingFallback = this.getExistingFallback()) return existingFallback;
        let fieldsString = '<div class="dz-fallback">';
        if (this.options.dictFallbackText) fieldsString += `<p>${this.options.dictFallbackText}</p>`;
        fieldsString += `<input type="file" name="${this._getParamName(0)}" ${this.options.uploadMultiple ? 'multiple="multiple"' : void 0} /><input type="submit" value="Upload!"></div>`;
        let fields = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(fieldsString);
        if (this.element.tagName !== "FORM") {
            form = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(`<form action="${this.options.url}" enctype="multipart/form-data" method="${this.options.method}"></form>`);
            form.appendChild(fields);
        } else {
            this.element.setAttribute("enctype", "multipart/form-data");
            this.element.setAttribute("method", this.options.method);
        }
        return form != null ? form : fields;
    }
    getExistingFallback() {
        let getFallback = function(elements) {
            for (let el of elements){
                if (/(^| )fallback($| )/.test(el.className)) return el;
            }
        };
        for (let tagName of [
            "div",
            "form"
        ]){
            var fallback;
            if (fallback = getFallback(this.element.getElementsByTagName(tagName))) return fallback;
        }
    }
    setupEventListeners() {
        return this.listeners.map((elementListeners)=>(()=>{
                let result = [];
                for(let event in elementListeners.events){
                    let listener = elementListeners.events[event];
                    result.push(elementListeners.element.addEventListener(event, listener, false));
                }
                return result;
            })());
    }
    removeEventListeners() {
        return this.listeners.map((elementListeners)=>(()=>{
                let result = [];
                for(let event in elementListeners.events){
                    let listener = elementListeners.events[event];
                    result.push(elementListeners.element.removeEventListener(event, listener, false));
                }
                return result;
            })());
    }
    disable() {
        this.clickableElements.forEach((element)=>element.classList.remove("dz-clickable"));
        this.removeEventListeners();
        this.disabled = true;
        return this.files.map((file)=>this.cancelUpload(file));
    }
    enable() {
        delete this.disabled;
        this.clickableElements.forEach((element)=>element.classList.add("dz-clickable"));
        return this.setupEventListeners();
    }
    filesize(size) {
        let selectedSize = 0;
        let selectedUnit = "b";
        if (size > 0) {
            let units = [
                "tb",
                "gb",
                "mb",
                "kb",
                "b"
            ];
            for(let i = 0; i < units.length; i++){
                let unit = units[i];
                let cutoff = Math.pow(this.options.filesizeBase, 4 - i) / 10;
                if (size >= cutoff) {
                    selectedSize = size / Math.pow(this.options.filesizeBase, 4 - i);
                    selectedUnit = unit;
                    break;
                }
            }
            selectedSize = Math.round(10 * selectedSize) / 10;
        }
        return `<strong>${selectedSize}</strong> ${this.options.dictFileSizeUnits[selectedUnit]}`;
    }
    _updateMaxFilesReachedClass() {
        if (this.options.maxFiles != null && this.getAcceptedFiles().length >= this.options.maxFiles) {
            if (this.getAcceptedFiles().length === this.options.maxFiles) this.emit("maxfilesreached", this.files);
            return this.element.classList.add("dz-max-files-reached");
        } else return this.element.classList.remove("dz-max-files-reached");
    }
    drop(e) {
        if (!e.dataTransfer) return;
        this.emit("drop", e);
        let files = [];
        for(let i = 0; i < e.dataTransfer.files.length; i++)files[i] = e.dataTransfer.files[i];
        if (files.length) {
            let { items  } = e.dataTransfer;
            if (items && items.length && items[0].webkitGetAsEntry != null) this._addFilesFromItems(items);
            else this.handleFiles(files);
        }
        this.emit("addedfiles", files);
    }
    paste(e) {
        if ($3ed269f2f0fb224b$var$__guard__(e != null ? e.clipboardData : void 0, (x)=>x.items) == null) return;
        this.emit("paste", e);
        let { items  } = e.clipboardData;
        if (items.length) return this._addFilesFromItems(items);
    }
    handleFiles(files) {
        for (let file of files)this.addFile(file);
    }
    _addFilesFromItems(items) {
        return (()=>{
            let result = [];
            for (let item of items){
                var entry;
                if (item.webkitGetAsEntry != null && (entry = item.webkitGetAsEntry())) {
                    if (entry.isFile) result.push(this.addFile(item.getAsFile()));
                    else if (entry.isDirectory) result.push(this._addFilesFromDirectory(entry, entry.name));
                    else result.push(void 0);
                } else if (item.getAsFile != null) {
                    if (item.kind == null || item.kind === "file") result.push(this.addFile(item.getAsFile()));
                    else result.push(void 0);
                } else result.push(void 0);
            }
            return result;
        })();
    }
    _addFilesFromDirectory(directory, path) {
        let dirReader = directory.createReader();
        let errorHandler = (error)=>$3ed269f2f0fb224b$var$__guardMethod__(console, "log", (o)=>o.log(error));
        var readEntries = ()=>{
            return dirReader.readEntries((entries)=>{
                if (entries.length > 0) {
                    for (let entry of entries){
                        if (entry.isFile) entry.file((file)=>{
                            if (this.options.ignoreHiddenFiles && file.name.substring(0, 1) === ".") return;
                            file.fullPath = `${path}/${file.name}`;
                            return this.addFile(file);
                        });
                        else if (entry.isDirectory) this._addFilesFromDirectory(entry, `${path}/${entry.name}`);
                    }
                    readEntries();
                }
                return null;
            }, errorHandler);
        };
        return readEntries();
    }
    accept(file, done) {
        if (this.options.maxFilesize && file.size > this.options.maxFilesize * 1048576) done(this.options.dictFileTooBig.replace("{{filesize}}", Math.round(file.size / 1024 / 10.24) / 100).replace("{{maxFilesize}}", this.options.maxFilesize));
        else if (!$3ed269f2f0fb224b$export$2e2bcd8739ae039.isValidFile(file, this.options.acceptedFiles)) done(this.options.dictInvalidFileType);
        else if (this.options.maxFiles != null && this.getAcceptedFiles().length >= this.options.maxFiles) {
            done(this.options.dictMaxFilesExceeded.replace("{{maxFiles}}", this.options.maxFiles));
            this.emit("maxfilesexceeded", file);
        } else this.options.accept.call(this, file, done);
    }
    addFile(file) {
        file.upload = {
            uuid: $3ed269f2f0fb224b$export$2e2bcd8739ae039.uuidv4(),
            progress: 0,
            total: file.size,
            bytesSent: 0,
            filename: this._renameFile(file)
        };
        this.files.push(file);
        file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED;
        this.emit("addedfile", file);
        this._enqueueThumbnail(file);
        this.accept(file, (error)=>{
            if (error) {
                file.accepted = false;
                this._errorProcessing([
                    file
                ], error);
            } else {
                file.accepted = true;
                if (this.options.autoQueue) this.enqueueFile(file);
            }
            this._updateMaxFilesReachedClass();
        });
    }
    enqueueFiles(files) {
        for (let file of files)this.enqueueFile(file);
        return null;
    }
    enqueueFile(file) {
        if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED && file.accepted === true) {
            file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED;
            if (this.options.autoProcessQueue) return setTimeout(()=>this.processQueue(), 0);
        } else throw new Error("This file can't be queued because it has already been processed or was rejected.");
    }
    _enqueueThumbnail(file) {
        if (this.options.createImageThumbnails && file.type.match(/image.*/) && file.size <= this.options.maxThumbnailFilesize * 1048576) {
            this._thumbnailQueue.push(file);
            return setTimeout(()=>this._processThumbnailQueue(), 0);
        }
    }
    _processThumbnailQueue() {
        if (this._processingThumbnail || this._thumbnailQueue.length === 0) return;
        this._processingThumbnail = true;
        let file = this._thumbnailQueue.shift();
        return this.createThumbnail(file, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.thumbnailMethod, true, (dataUrl)=>{
            this.emit("thumbnail", file, dataUrl);
            this._processingThumbnail = false;
            return this._processThumbnailQueue();
        });
    }
    removeFile(file) {
        if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING) this.cancelUpload(file);
        this.files = $3ed269f2f0fb224b$var$without(this.files, file);
        this.emit("removedfile", file);
        if (this.files.length === 0) return this.emit("reset");
    }
    removeAllFiles(cancelIfNecessary) {
        if (cancelIfNecessary == null) cancelIfNecessary = false;
        for (let file of this.files.slice())if (file.status !== $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING || cancelIfNecessary) this.removeFile(file);
        return null;
    }
    resizeImage(file, width, height, resizeMethod, callback) {
        return this.createThumbnail(file, width, height, resizeMethod, true, (dataUrl, canvas)=>{
            if (canvas == null) return callback(file);
            else {
                let { resizeMimeType  } = this.options;
                if (resizeMimeType == null) resizeMimeType = file.type;
                let resizedDataURL = canvas.toDataURL(resizeMimeType, this.options.resizeQuality);
                if (resizeMimeType === "image/jpeg" || resizeMimeType === "image/jpg") resizedDataURL = $3ed269f2f0fb224b$var$ExifRestore.restore(file.dataURL, resizedDataURL);
                return callback($3ed269f2f0fb224b$export$2e2bcd8739ae039.dataURItoBlob(resizedDataURL));
            }
        });
    }
    createThumbnail(file, width, height, resizeMethod, fixOrientation, callback) {
        let fileReader = new FileReader();
        fileReader.onload = ()=>{
            file.dataURL = fileReader.result;
            if (file.type === "image/svg+xml") {
                if (callback != null) callback(fileReader.result);
                return;
            }
            this.createThumbnailFromUrl(file, width, height, resizeMethod, fixOrientation, callback);
        };
        fileReader.readAsDataURL(file);
    }
    displayExistingFile(mockFile, imageUrl, callback, crossOrigin, resizeThumbnail = true) {
        this.emit("addedfile", mockFile);
        this.emit("complete", mockFile);
        if (!resizeThumbnail) {
            this.emit("thumbnail", mockFile, imageUrl);
            if (callback) callback();
        } else {
            let onDone = (thumbnail)=>{
                this.emit("thumbnail", mockFile, thumbnail);
                if (callback) callback();
            };
            mockFile.dataURL = imageUrl;
            this.createThumbnailFromUrl(mockFile, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.thumbnailMethod, this.options.fixOrientation, onDone, crossOrigin);
        }
    }
    createThumbnailFromUrl(file, width, height, resizeMethod, fixOrientation, callback, crossOrigin) {
        let img = document.createElement("img");
        if (crossOrigin) img.crossOrigin = crossOrigin;
        fixOrientation = getComputedStyle(document.body)["imageOrientation"] == "from-image" ? false : fixOrientation;
        img.onload = ()=>{
            let loadExif = (callback2)=>callback2(1);
            if (typeof EXIF !== "undefined" && EXIF !== null && fixOrientation) loadExif = (callback2)=>EXIF.getData(img, function() {
                    return callback2(EXIF.getTag(this, "Orientation"));
                });
            return loadExif((orientation)=>{
                file.width = img.width;
                file.height = img.height;
                let resizeInfo = this.options.resize.call(this, file, width, height, resizeMethod);
                let canvas = document.createElement("canvas");
                let ctx = canvas.getContext("2d");
                canvas.width = resizeInfo.trgWidth;
                canvas.height = resizeInfo.trgHeight;
                if (orientation > 4) {
                    canvas.width = resizeInfo.trgHeight;
                    canvas.height = resizeInfo.trgWidth;
                }
                switch(orientation){
                    case 2:
                        ctx.translate(canvas.width, 0);
                        ctx.scale(-1, 1);
                        break;
                    case 3:
                        ctx.translate(canvas.width, canvas.height);
                        ctx.rotate(Math.PI);
                        break;
                    case 4:
                        ctx.translate(0, canvas.height);
                        ctx.scale(1, -1);
                        break;
                    case 5:
                        ctx.rotate(0.5 * Math.PI);
                        ctx.scale(1, -1);
                        break;
                    case 6:
                        ctx.rotate(0.5 * Math.PI);
                        ctx.translate(0, -canvas.width);
                        break;
                    case 7:
                        ctx.rotate(0.5 * Math.PI);
                        ctx.translate(canvas.height, -canvas.width);
                        ctx.scale(-1, 1);
                        break;
                    case 8:
                        ctx.rotate(-0.5 * Math.PI);
                        ctx.translate(-canvas.height, 0);
                        break;
                }
                $3ed269f2f0fb224b$var$drawImageIOSFix(ctx, img, resizeInfo.srcX != null ? resizeInfo.srcX : 0, resizeInfo.srcY != null ? resizeInfo.srcY : 0, resizeInfo.srcWidth, resizeInfo.srcHeight, resizeInfo.trgX != null ? resizeInfo.trgX : 0, resizeInfo.trgY != null ? resizeInfo.trgY : 0, resizeInfo.trgWidth, resizeInfo.trgHeight);
                let thumbnail = canvas.toDataURL("image/png");
                if (callback != null) return callback(thumbnail, canvas);
            });
        };
        if (callback != null) img.onerror = callback;
        return img.src = file.dataURL;
    }
    processQueue() {
        let { parallelUploads  } = this.options;
        let processingLength = this.getUploadingFiles().length;
        let i = processingLength;
        if (processingLength >= parallelUploads) return;
        let queuedFiles = this.getQueuedFiles();
        if (!(queuedFiles.length > 0)) return;
        if (this.options.uploadMultiple) return this.processFiles(queuedFiles.slice(0, parallelUploads - processingLength));
        else while(i < parallelUploads){
            if (!queuedFiles.length) return;
            this.processFile(queuedFiles.shift());
            i++;
        }
    }
    processFile(file) {
        return this.processFiles([
            file
        ]);
    }
    processFiles(files) {
        for (let file of files){
            file.processing = true;
            file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING;
            this.emit("processing", file);
        }
        if (this.options.uploadMultiple) this.emit("processingmultiple", files);
        return this.uploadFiles(files);
    }
    _getFilesWithXhr(xhr) {
        return this.files.filter((file)=>file.xhr === xhr).map((file)=>file);
    }
    cancelUpload(file) {
        if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING) {
            let groupedFiles = this._getFilesWithXhr(file.xhr);
            for (let groupedFile of groupedFiles)groupedFile.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED;
            if (typeof file.xhr !== "undefined") file.xhr.abort();
            for (let groupedFile1 of groupedFiles)this.emit("canceled", groupedFile1);
            if (this.options.uploadMultiple) this.emit("canceledmultiple", groupedFiles);
        } else if (file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED || file.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED) {
            file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED;
            this.emit("canceled", file);
            if (this.options.uploadMultiple) this.emit("canceledmultiple", [
                file
            ]);
        }
        if (this.options.autoProcessQueue) return this.processQueue();
    }
    resolveOption(option, ...args) {
        if (typeof option === "function") return option.apply(this, args);
        return option;
    }
    uploadFile(file) {
        return this.uploadFiles([
            file
        ]);
    }
    uploadFiles(files) {
        this._transformFiles(files, (transformedFiles)=>{
            if (this.options.chunking) {
                let transformedFile = transformedFiles[0];
                files[0].upload.chunked = this.options.chunking && (this.options.forceChunking || transformedFile.size > this.options.chunkSize);
                files[0].upload.totalChunkCount = Math.ceil(transformedFile.size / this.options.chunkSize);
            }
            if (files[0].upload.chunked) {
                let file = files[0];
                let transformedFile1 = transformedFiles[0];
                file.upload.chunks = [];
                let handleNextChunk = ()=>{
                    let chunkIndex = 0;
                    while(file.upload.chunks[chunkIndex] !== void 0)chunkIndex++;
                    if (chunkIndex >= file.upload.totalChunkCount) return;
                    let start = chunkIndex * this.options.chunkSize;
                    let end = Math.min(start + this.options.chunkSize, transformedFile1.size);
                    let dataBlock = {
                        name: this._getParamName(0),
                        data: transformedFile1.webkitSlice ? transformedFile1.webkitSlice(start, end) : transformedFile1.slice(start, end),
                        filename: file.upload.filename,
                        chunkIndex
                    };
                    file.upload.chunks[chunkIndex] = {
                        file,
                        index: chunkIndex,
                        dataBlock,
                        status: $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING,
                        progress: 0,
                        retries: 0
                    };
                    this._uploadData(files, [
                        dataBlock
                    ]);
                };
                file.upload.finishedChunkUpload = (chunk, response)=>{
                    let allFinished = true;
                    chunk.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS;
                    chunk.dataBlock = null;
                    chunk.response = chunk.xhr.responseText;
                    chunk.responseHeaders = chunk.xhr.getAllResponseHeaders();
                    chunk.xhr = null;
                    for(let i = 0; i < file.upload.totalChunkCount; i++){
                        if (file.upload.chunks[i] === void 0) return handleNextChunk();
                        if (file.upload.chunks[i].status !== $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS) allFinished = false;
                    }
                    if (allFinished) this.options.chunksUploaded(file, ()=>{
                        this._finished(files, response, null);
                    });
                };
                if (this.options.parallelChunkUploads) for(let i = 0; i < file.upload.totalChunkCount; i++)handleNextChunk();
                else handleNextChunk();
            } else {
                let dataBlocks = [];
                for(let i1 = 0; i1 < files.length; i1++)dataBlocks[i1] = {
                    name: this._getParamName(i1),
                    data: transformedFiles[i1],
                    filename: files[i1].upload.filename
                };
                this._uploadData(files, dataBlocks);
            }
        });
    }
    _getChunk(file, xhr) {
        for(let i = 0; i < file.upload.totalChunkCount; i++){
            if (file.upload.chunks[i] !== void 0 && file.upload.chunks[i].xhr === xhr) return file.upload.chunks[i];
        }
    }
    _uploadData(files, dataBlocks) {
        let xhr = new XMLHttpRequest();
        for (let file of files)file.xhr = xhr;
        if (files[0].upload.chunked) files[0].upload.chunks[dataBlocks[0].chunkIndex].xhr = xhr;
        let method = this.resolveOption(this.options.method, files, dataBlocks);
        let url = this.resolveOption(this.options.url, files, dataBlocks);
        xhr.open(method, url, true);
        let timeout = this.resolveOption(this.options.timeout, files);
        if (timeout) xhr.timeout = this.resolveOption(this.options.timeout, files);
        xhr.withCredentials = !!this.options.withCredentials;
        xhr.onload = (e)=>{
            this._finishedUploading(files, xhr, e);
        };
        xhr.ontimeout = ()=>{
            this._handleUploadError(files, xhr, `Request timedout after ${this.options.timeout / 1e3} seconds`);
        };
        xhr.onerror = ()=>{
            this._handleUploadError(files, xhr);
        };
        let progressObj = xhr.upload != null ? xhr.upload : xhr;
        progressObj.onprogress = (e)=>this._updateFilesUploadProgress(files, xhr, e);
        let headers = this.options.defaultHeaders ? {
            Accept: "application/json",
            "Cache-Control": "no-cache",
            "X-Requested-With": "XMLHttpRequest"
        } : {};
        if (this.options.binaryBody) headers["Content-Type"] = files[0].type;
        if (this.options.headers) objectExtend(headers, this.options.headers);
        for(let headerName in headers){
            let headerValue = headers[headerName];
            if (headerValue) xhr.setRequestHeader(headerName, headerValue);
        }
        if (this.options.binaryBody) {
            for (let file1 of files)this.emit("sending", file1, xhr);
            if (this.options.uploadMultiple) this.emit("sendingmultiple", files, xhr);
            this.submitRequest(xhr, null, files);
        } else {
            let formData = new FormData();
            if (this.options.params) {
                let additionalParams = this.options.params;
                if (typeof additionalParams === "function") additionalParams = additionalParams.call(this, files, xhr, files[0].upload.chunked ? this._getChunk(files[0], xhr) : null);
                for(let key in additionalParams){
                    let value = additionalParams[key];
                    if (Array.isArray(value)) for(let i = 0; i < value.length; i++)formData.append(key, value[i]);
                    else formData.append(key, value);
                }
            }
            for (let file2 of files)this.emit("sending", file2, xhr, formData);
            if (this.options.uploadMultiple) this.emit("sendingmultiple", files, xhr, formData);
            this._addFormElementData(formData);
            for(let i1 = 0; i1 < dataBlocks.length; i1++){
                let dataBlock = dataBlocks[i1];
                formData.append(dataBlock.name, dataBlock.data, dataBlock.filename);
            }
            this.submitRequest(xhr, formData, files);
        }
    }
    _transformFiles(files, done) {
        let transformedFiles = [];
        let doneCounter = 0;
        for(let i = 0; i < files.length; i++)this.options.transformFile.call(this, files[i], (transformedFile)=>{
            transformedFiles[i] = transformedFile;
            if (++doneCounter === files.length) done(transformedFiles);
        });
    }
    _addFormElementData(formData) {
        if (this.element.tagName === "FORM") for (let input of this.element.querySelectorAll("input, textarea, select, button")){
            let inputName = input.getAttribute("name");
            let inputType = input.getAttribute("type");
            if (inputType) inputType = inputType.toLowerCase();
            if (typeof inputName === "undefined" || inputName === null) continue;
            if (input.tagName === "SELECT" && input.hasAttribute("multiple")) {
                for (let option of input.options)if (option.selected) formData.append(inputName, option.value);
            } else if (!inputType || inputType !== "checkbox" && inputType !== "radio" || input.checked) formData.append(inputName, input.value);
        }
    }
    _updateFilesUploadProgress(files, xhr, e) {
        if (!files[0].upload.chunked) for (let file of files){
            if (file.upload.total && file.upload.bytesSent && file.upload.bytesSent == file.upload.total) continue;
            if (e) {
                file.upload.progress = 100 * e.loaded / e.total;
                file.upload.total = e.total;
                file.upload.bytesSent = e.loaded;
            } else {
                file.upload.progress = 100;
                file.upload.bytesSent = file.upload.total;
            }
            this.emit("uploadprogress", file, file.upload.progress, file.upload.bytesSent);
        }
        else {
            let file1 = files[0];
            let chunk = this._getChunk(file1, xhr);
            if (e) {
                chunk.progress = 100 * e.loaded / e.total;
                chunk.total = e.total;
                chunk.bytesSent = e.loaded;
            } else {
                chunk.progress = 100;
                chunk.bytesSent = chunk.total;
            }
            file1.upload.progress = 0;
            file1.upload.total = 0;
            file1.upload.bytesSent = 0;
            for(let i = 0; i < file1.upload.totalChunkCount; i++)if (file1.upload.chunks[i] && typeof file1.upload.chunks[i].progress !== "undefined") {
                file1.upload.progress += file1.upload.chunks[i].progress;
                file1.upload.total += file1.upload.chunks[i].total;
                file1.upload.bytesSent += file1.upload.chunks[i].bytesSent;
            }
            file1.upload.progress = file1.upload.progress / file1.upload.totalChunkCount;
            this.emit("uploadprogress", file1, file1.upload.progress, file1.upload.bytesSent);
        }
    }
    _finishedUploading(files, xhr, e) {
        let response;
        if (files[0].status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED) return;
        if (xhr.readyState !== 4) return;
        if (xhr.responseType !== "arraybuffer" && xhr.responseType !== "blob") {
            response = xhr.responseText;
            if (xhr.getResponseHeader("content-type") && ~xhr.getResponseHeader("content-type").indexOf("application/json")) try {
                response = JSON.parse(response);
            } catch (error) {
                e = error;
                response = "Invalid JSON response from server.";
            }
        }
        this._updateFilesUploadProgress(files, xhr);
        if (!(200 <= xhr.status && xhr.status < 300)) this._handleUploadError(files, xhr, response);
        else if (files[0].upload.chunked) files[0].upload.finishedChunkUpload(this._getChunk(files[0], xhr), response);
        else this._finished(files, response, e);
    }
    _handleUploadError(files, xhr, response) {
        if (files[0].status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED) return;
        if (files[0].upload.chunked && this.options.retryChunks) {
            let chunk = this._getChunk(files[0], xhr);
            if ((chunk.retries++) < this.options.retryChunksLimit) {
                this._uploadData(files, [
                    chunk.dataBlock
                ]);
                return;
            } else console.warn("Retried this chunk too often. Giving up.");
        }
        this._errorProcessing(files, response || this.options.dictResponseError.replace("{{statusCode}}", xhr.status), xhr);
    }
    submitRequest(xhr, formData, files) {
        if (xhr.readyState != 1) {
            console.warn("Cannot send this request because the XMLHttpRequest.readyState is not OPENED.");
            return;
        }
        if (this.options.binaryBody) {
            if (files[0].upload.chunked) {
                const chunk = this._getChunk(files[0], xhr);
                xhr.send(chunk.dataBlock.data);
            } else xhr.send(files[0]);
        } else xhr.send(formData);
    }
    _finished(files, responseText, e) {
        for (let file of files){
            file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS;
            this.emit("success", file, responseText, e);
            this.emit("complete", file);
        }
        if (this.options.uploadMultiple) {
            this.emit("successmultiple", files, responseText, e);
            this.emit("completemultiple", files);
        }
        if (this.options.autoProcessQueue) return this.processQueue();
    }
    _errorProcessing(files, message, xhr) {
        for (let file of files){
            file.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.ERROR;
            this.emit("error", file, message, xhr);
            this.emit("complete", file);
        }
        if (this.options.uploadMultiple) {
            this.emit("errormultiple", files, message, xhr);
            this.emit("completemultiple", files);
        }
        if (this.options.autoProcessQueue) return this.processQueue();
    }
    static uuidv4() {
        return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(c) {
            let r = Math.random() * 16 | 0, v = c === "x" ? r : r & 3 | 8;
            return v.toString(16);
        });
    }
    constructor(el, options){
        super();
        let fallback, left;
        this.element = el;
        this.clickableElements = [];
        this.listeners = [];
        this.files = [];
        if (typeof this.element === "string") this.element = document.querySelector(this.element);
        if (!this.element || this.element.nodeType == null) throw new Error("Invalid dropzone element.");
        if (this.element.dropzone) throw new Error("Dropzone already attached.");
        $3ed269f2f0fb224b$export$2e2bcd8739ae039.instances.push(this);
        this.element.dropzone = this;
        let elementOptions = (left = $3ed269f2f0fb224b$export$2e2bcd8739ae039.optionsForElement(this.element)) != null ? left : {};
        this.options = objectExtend(true, {}, $4ca367182776f80b$export$2e2bcd8739ae039, elementOptions, options != null ? options : {});
        this.options.previewTemplate = this.options.previewTemplate.replace(/\n*/g, "");
        if (this.options.forceFallback || !$3ed269f2f0fb224b$export$2e2bcd8739ae039.isBrowserSupported()) return this.options.fallback.call(this);
        if (this.options.url == null) this.options.url = this.element.getAttribute("action");
        if (!this.options.url) throw new Error("No URL provided.");
        if (this.options.acceptedFiles && this.options.acceptedMimeTypes) throw new Error("You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.");
        if (this.options.uploadMultiple && this.options.chunking) throw new Error("You cannot set both: uploadMultiple and chunking.");
        if (this.options.binaryBody && this.options.uploadMultiple) throw new Error("You cannot set both: binaryBody and uploadMultiple.");
        if (this.options.acceptedMimeTypes) {
            this.options.acceptedFiles = this.options.acceptedMimeTypes;
            delete this.options.acceptedMimeTypes;
        }
        if (this.options.renameFilename != null) this.options.renameFile = (file)=>this.options.renameFilename.call(this, file.name, file);
        if (typeof this.options.method === "string") this.options.method = this.options.method.toUpperCase();
        if ((fallback = this.getExistingFallback()) && fallback.parentNode) fallback.parentNode.removeChild(fallback);
        if (this.options.previewsContainer !== false) {
            if (this.options.previewsContainer) this.previewsContainer = $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElement(this.options.previewsContainer, "previewsContainer");
            else this.previewsContainer = this.element;
        }
        if (this.options.clickable) {
            if (this.options.clickable === true) this.clickableElements = [
                this.element
            ];
            else this.clickableElements = $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElements(this.options.clickable, "clickable");
        }
        this.init();
    }
}
$3ed269f2f0fb224b$export$2e2bcd8739ae039.initClass();
$3ed269f2f0fb224b$export$2e2bcd8739ae039.options = {};
$3ed269f2f0fb224b$export$2e2bcd8739ae039.optionsForElement = function(element) {
    if (element.getAttribute("id")) return $3ed269f2f0fb224b$export$2e2bcd8739ae039.options[$3ed269f2f0fb224b$var$camelize(element.getAttribute("id"))];
    else return void 0;
};
$3ed269f2f0fb224b$export$2e2bcd8739ae039.instances = [];
$3ed269f2f0fb224b$export$2e2bcd8739ae039.forElement = function(element) {
    if (typeof element === "string") element = document.querySelector(element);
    if ((element != null ? element.dropzone : void 0) == null) throw new Error("No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.");
    return element.dropzone;
};
$3ed269f2f0fb224b$export$2e2bcd8739ae039.discover = function() {
    let dropzones;
    if (document.querySelectorAll) dropzones = document.querySelectorAll(".dropzone");
    else {
        dropzones = [];
        let checkElements = (elements)=>(()=>{
                let result = [];
                for (let el of elements)if (/(^| )dropzone($| )/.test(el.className)) result.push(dropzones.push(el));
                else result.push(void 0);
                return result;
            })();
        checkElements(document.getElementsByTagName("div"));
        checkElements(document.getElementsByTagName("form"));
    }
    return (()=>{
        let result = [];
        for (let dropzone of dropzones)if ($3ed269f2f0fb224b$export$2e2bcd8739ae039.optionsForElement(dropzone) !== false) result.push(new $3ed269f2f0fb224b$export$2e2bcd8739ae039(dropzone));
        else result.push(void 0);
        return result;
    })();
};
$3ed269f2f0fb224b$export$2e2bcd8739ae039.blockedBrowsers = [
    /opera.*(Macintosh|Windows Phone).*version\/12/i
];
$3ed269f2f0fb224b$export$2e2bcd8739ae039.isBrowserSupported = function() {
    let capableBrowser = true;
    if (window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) {
        if (!("classList" in document.createElement("a"))) capableBrowser = false;
        else {
            if ($3ed269f2f0fb224b$export$2e2bcd8739ae039.blacklistedBrowsers !== void 0) $3ed269f2f0fb224b$export$2e2bcd8739ae039.blockedBrowsers = $3ed269f2f0fb224b$export$2e2bcd8739ae039.blacklistedBrowsers;
            for (let regex of $3ed269f2f0fb224b$export$2e2bcd8739ae039.blockedBrowsers)if (regex.test(navigator.userAgent)) {
                capableBrowser = false;
                continue;
            }
        }
    } else capableBrowser = false;
    return capableBrowser;
};
$3ed269f2f0fb224b$export$2e2bcd8739ae039.dataURItoBlob = function(dataURI) {
    let byteString = atob(dataURI.split(",")[1]);
    let mimeString = dataURI.split(",")[0].split(":")[1].split(";")[0];
    let ab = new ArrayBuffer(byteString.length);
    let ia = new Uint8Array(ab);
    for(let i = 0, end = byteString.length, asc = 0 <= end; asc ? i <= end : i >= end; asc ? i++ : i--)ia[i] = byteString.charCodeAt(i);
    return new Blob([
        ab
    ], {
        type: mimeString
    });
};
const $3ed269f2f0fb224b$var$without = (list, rejectedItem)=>list.filter((item)=>item !== rejectedItem).map((item)=>item);
const $3ed269f2f0fb224b$var$camelize = (str)=>str.replace(/[\-_](\w)/g, (match)=>match.charAt(1).toUpperCase());
$3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement = function(string) {
    let div = document.createElement("div");
    div.innerHTML = string;
    return div.childNodes[0];
};
$3ed269f2f0fb224b$export$2e2bcd8739ae039.elementInside = function(element, container) {
    if (element === container) return true;
    while(element = element.parentNode){
        if (element === container) return true;
    }
    return false;
};
$3ed269f2f0fb224b$export$2e2bcd8739ae039.getElement = function(el, name) {
    let element;
    if (typeof el === "string") element = document.querySelector(el);
    else if (el.nodeType != null) element = el;
    if (element == null) throw new Error(`Invalid \`${name}\` option provided. Please provide a CSS selector or a plain HTML element.`);
    return element;
};
$3ed269f2f0fb224b$export$2e2bcd8739ae039.getElements = function(els, name) {
    let el, elements;
    if (els instanceof Array) {
        elements = [];
        try {
            for (el of els)elements.push(this.getElement(el, name));
        } catch (e) {
            elements = null;
        }
    } else if (typeof els === "string") {
        elements = [];
        for (el of document.querySelectorAll(els))elements.push(el);
    } else if (els.nodeType != null) elements = [
        els
    ];
    if (elements == null || !elements.length) throw new Error(`Invalid \`${name}\` option provided. Please provide a CSS selector, a plain HTML element or a list of those.`);
    return elements;
};
$3ed269f2f0fb224b$export$2e2bcd8739ae039.confirm = function(question, accepted, rejected) {
    if (window.confirm(question)) return accepted();
    else if (rejected != null) return rejected();
};
$3ed269f2f0fb224b$export$2e2bcd8739ae039.isValidFile = function(file, acceptedFiles) {
    if (!acceptedFiles) return true;
    acceptedFiles = acceptedFiles.split(",");
    let mimeType = file.type;
    let baseMimeType = mimeType.replace(/\/.*$/, "");
    for (let validType of acceptedFiles){
        validType = validType.trim();
        if (validType.charAt(0) === ".") {
            if (file.name.toLowerCase().indexOf(validType.toLowerCase(), file.name.length - validType.length) !== -1) return true;
        } else if (/\/\*$/.test(validType)) {
            if (baseMimeType === validType.replace(/\/.*$/, "")) return true;
        } else {
            if (mimeType === validType) return true;
        }
    }
    return false;
};
if (typeof jQuery !== "undefined" && jQuery !== null) jQuery.fn.dropzone = function(options) {
    return this.each(function() {
        return new $3ed269f2f0fb224b$export$2e2bcd8739ae039(this, options);
    });
};
$3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED = "added";
$3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED = "queued";
$3ed269f2f0fb224b$export$2e2bcd8739ae039.ACCEPTED = $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED;
$3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING = "uploading";
$3ed269f2f0fb224b$export$2e2bcd8739ae039.PROCESSING = $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING;
$3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED = "canceled";
$3ed269f2f0fb224b$export$2e2bcd8739ae039.ERROR = "error";
$3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS = "success";
let $3ed269f2f0fb224b$var$detectVerticalSquash = function(img) {
    img.naturalWidth;
    let ih = img.naturalHeight;
    let canvas = document.createElement("canvas");
    canvas.width = 1;
    canvas.height = ih;
    let ctx = canvas.getContext("2d");
    ctx.drawImage(img, 0, 0);
    let { data  } = ctx.getImageData(1, 0, 1, ih);
    let sy = 0;
    let ey = ih;
    let py = ih;
    while(py > sy){
        let alpha = data[(py - 1) * 4 + 3];
        if (alpha === 0) ey = py;
        else sy = py;
        py = ey + sy >> 1;
    }
    let ratio = py / ih;
    if (ratio === 0) return 1;
    else return ratio;
};
var $3ed269f2f0fb224b$var$drawImageIOSFix = function(ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) {
    let vertSquashRatio = $3ed269f2f0fb224b$var$detectVerticalSquash(img);
    return ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);
};
class $3ed269f2f0fb224b$var$ExifRestore {
    static initClass() {
        this.KEY_STR = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
    }
    static encode64(input) {
        let output = "";
        let chr1 = void 0;
        let chr2 = void 0;
        let chr3 = "";
        let enc1 = void 0;
        let enc2 = void 0;
        let enc3 = void 0;
        let enc4 = "";
        let i = 0;
        while(true){
            chr1 = input[i++];
            chr2 = input[i++];
            chr3 = input[i++];
            enc1 = chr1 >> 2;
            enc2 = (chr1 & 3) << 4 | chr2 >> 4;
            enc3 = (chr2 & 15) << 2 | chr3 >> 6;
            enc4 = chr3 & 63;
            if (isNaN(chr2)) enc3 = enc4 = 64;
            else if (isNaN(chr3)) enc4 = 64;
            output = output + this.KEY_STR.charAt(enc1) + this.KEY_STR.charAt(enc2) + this.KEY_STR.charAt(enc3) + this.KEY_STR.charAt(enc4);
            chr1 = chr2 = chr3 = "";
            enc1 = enc2 = enc3 = enc4 = "";
            if (!(i < input.length)) break;
        }
        return output;
    }
    static restore(origFileBase64, resizedFileBase64) {
        if (!origFileBase64.match("data:image/jpeg;base64,")) return resizedFileBase64;
        let rawImage = this.decode64(origFileBase64.replace("data:image/jpeg;base64,", ""));
        let segments = this.slice2Segments(rawImage);
        let image = this.exifManipulation(resizedFileBase64, segments);
        return `data:image/jpeg;base64,${this.encode64(image)}`;
    }
    static exifManipulation(resizedFileBase64, segments) {
        let exifArray = this.getExifArray(segments);
        let newImageArray = this.insertExif(resizedFileBase64, exifArray);
        let aBuffer = new Uint8Array(newImageArray);
        return aBuffer;
    }
    static getExifArray(segments) {
        let seg = void 0;
        let x = 0;
        while(x < segments.length){
            seg = segments[x];
            if (seg[0] === 255 & seg[1] === 225) return seg;
            x++;
        }
        return [];
    }
    static insertExif(resizedFileBase64, exifArray) {
        let imageData = resizedFileBase64.replace("data:image/jpeg;base64,", "");
        let buf = this.decode64(imageData);
        let separatePoint = buf.indexOf(255, 3);
        let mae = buf.slice(0, separatePoint);
        let ato = buf.slice(separatePoint);
        let array = mae;
        array = array.concat(exifArray);
        array = array.concat(ato);
        return array;
    }
    static slice2Segments(rawImageArray) {
        let head = 0;
        let segments = [];
        while(true){
            var length;
            if (rawImageArray[head] === 255 & rawImageArray[head + 1] === 218) break;
            if (rawImageArray[head] === 255 & rawImageArray[head + 1] === 216) head += 2;
            else {
                length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3];
                let endPoint = head + length + 2;
                let seg = rawImageArray.slice(head, endPoint);
                segments.push(seg);
                head = endPoint;
            }
            if (head > rawImageArray.length) break;
        }
        return segments;
    }
    static decode64(input) {
        let chr1 = void 0;
        let chr2 = void 0;
        let chr3 = "";
        let enc1 = void 0;
        let enc2 = void 0;
        let enc3 = void 0;
        let enc4 = "";
        let i = 0;
        let buf = [];
        let base64test = /[^A-Za-z0-9\+\/\=]/g;
        if (base64test.exec(input)) console.warn("There were invalid base64 characters in the input text.\nValid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\nExpect errors in decoding.");
        input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");
        while(true){
            enc1 = this.KEY_STR.indexOf(input.charAt(i++));
            enc2 = this.KEY_STR.indexOf(input.charAt(i++));
            enc3 = this.KEY_STR.indexOf(input.charAt(i++));
            enc4 = this.KEY_STR.indexOf(input.charAt(i++));
            chr1 = enc1 << 2 | enc2 >> 4;
            chr2 = (enc2 & 15) << 4 | enc3 >> 2;
            chr3 = (enc3 & 3) << 6 | enc4;
            buf.push(chr1);
            if (enc3 !== 64) buf.push(chr2);
            if (enc4 !== 64) buf.push(chr3);
            chr1 = chr2 = chr3 = "";
            enc1 = enc2 = enc3 = enc4 = "";
            if (!(i < input.length)) break;
        }
        return buf;
    }
}
$3ed269f2f0fb224b$var$ExifRestore.initClass();
function $3ed269f2f0fb224b$var$__guard__(value, transform) {
    return typeof value !== "undefined" && value !== null ? transform(value) : void 0;
}
function $3ed269f2f0fb224b$var$__guardMethod__(obj, methodName, transform) {
    if (typeof obj !== "undefined" && obj !== null && typeof obj[methodName] === "function") return transform(obj, methodName);
    else return void 0;
}
class image_dropzone_controller_default extends Controller {
    connect() {
        new $3ed269f2f0fb224b$export$2e2bcd8739ae039(this.formTarget, {
            paramName: "kubik_media_upload[image]",
            thumbnailHeight: 180,
            thumbnailWidth: 180,
            thumbnailMethod: "crop",
            headers: this.headers
        });
        this.element.classList.add("dropzone_ready");
    }
    textValueChanged() {
        this.textTarget.innerHTML = this.textValue;
    }
    get headers() {
        return this.turboValue === true ? {
            "Accept": "text/vnd.turbo-stream.html"
        } : null;
    }
    file_changed(e) {
        const target = e.target;
        const filename = target.files[0].name;
        this.textValue = filename;
        if (filename.length > 0) {
            this.submitTarget.style.display = "block";
            this.placeholderTarget.classList.remove("no-file");
        } else this.placeholderTarget.classList.add("no-file");
    }
}
image_dropzone_controller_default.targets = [
    "input",
    "text",
    "submit",
    "placeholder",
    "form"
];
image_dropzone_controller_default.values = {
    text: String,
    turbo: Boolean
};
module.exports = {
    ImageSelectorController: image_selector_controller_default,
    MultipleImageSelectorController: multiple_image_selector_controller_default,
    ImageDropzoneController: image_dropzone_controller_default
};

},{}],"ky8gR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ModalController", ()=>modal_controller_default);
parcelHelpers.export(exports, "modalInit", ()=>modalInit);
function camelize(value) {
    return value.replace(/(?:[_-])([a-z0-9])/g, (_, char)=>char.toUpperCase());
}
function capitalize(value) {
    return value.charAt(0).toUpperCase() + value.slice(1);
}
function dasherize(value) {
    return value.replace(/([A-Z])/g, (_, char)=>`-${char.toLowerCase()}`);
}
function readInheritableStaticArrayValues(constructor, propertyName) {
    const ancestors = getAncestorsForConstructor(constructor);
    return Array.from(ancestors.reduce((values, constructor2)=>{
        getOwnStaticArrayValues(constructor2, propertyName).forEach((name)=>values.add(name));
        return values;
    }, /* @__PURE__ */ new Set()));
}
function readInheritableStaticObjectPairs(constructor, propertyName) {
    const ancestors = getAncestorsForConstructor(constructor);
    return ancestors.reduce((pairs, constructor2)=>{
        pairs.push(...getOwnStaticObjectPairs(constructor2, propertyName));
        return pairs;
    }, []);
}
function getAncestorsForConstructor(constructor) {
    const ancestors = [];
    while(constructor){
        ancestors.push(constructor);
        constructor = Object.getPrototypeOf(constructor);
    }
    return ancestors.reverse();
}
function getOwnStaticArrayValues(constructor, propertyName) {
    const definition = constructor[propertyName];
    return Array.isArray(definition) ? definition : [];
}
function getOwnStaticObjectPairs(constructor, propertyName) {
    const definition = constructor[propertyName];
    return definition ? Object.keys(definition).map((key)=>[
            key,
            definition[key]
        ]) : [];
}
(()=>{
    function extendWithReflect(constructor) {
        function extended() {
            return Reflect.construct(constructor, arguments, new.target);
        }
        extended.prototype = Object.create(constructor.prototype, {
            constructor: {
                value: extended
            }
        });
        Reflect.setPrototypeOf(extended, constructor);
        return extended;
    }
    function testReflectExtension() {
        const a = function() {
            this.a.call(this);
        };
        const b = extendWithReflect(a);
        b.prototype.a = function() {};
        return new b();
    }
    try {
        testReflectExtension();
        return extendWithReflect;
    } catch (error) {
        return (constructor)=>class extended extends constructor {
            };
    }
})();
function ClassPropertiesBlessing(constructor) {
    const classes = readInheritableStaticArrayValues(constructor, "classes");
    return classes.reduce((properties, classDefinition)=>{
        return Object.assign(properties, propertiesForClassDefinition(classDefinition));
    }, {});
}
function propertiesForClassDefinition(key) {
    return {
        [`${key}Class`]: {
            get () {
                const { classes  } = this;
                if (classes.has(key)) return classes.get(key);
                else {
                    const attribute = classes.getAttributeName(key);
                    throw new Error(`Missing attribute "${attribute}"`);
                }
            }
        },
        [`${key}Classes`]: {
            get () {
                return this.classes.getAll(key);
            }
        },
        [`has${capitalize(key)}Class`]: {
            get () {
                return this.classes.has(key);
            }
        }
    };
}
function TargetPropertiesBlessing(constructor) {
    const targets = readInheritableStaticArrayValues(constructor, "targets");
    return targets.reduce((properties, targetDefinition)=>{
        return Object.assign(properties, propertiesForTargetDefinition(targetDefinition));
    }, {});
}
function propertiesForTargetDefinition(name) {
    return {
        [`${name}Target`]: {
            get () {
                const target = this.targets.find(name);
                if (target) return target;
                else throw new Error(`Missing target element "${name}" for "${this.identifier}" controller`);
            }
        },
        [`${name}Targets`]: {
            get () {
                return this.targets.findAll(name);
            }
        },
        [`has${capitalize(name)}Target`]: {
            get () {
                return this.targets.has(name);
            }
        }
    };
}
function ValuePropertiesBlessing(constructor) {
    const valueDefinitionPairs = readInheritableStaticObjectPairs(constructor, "values");
    const propertyDescriptorMap = {
        valueDescriptorMap: {
            get () {
                return valueDefinitionPairs.reduce((result, valueDefinitionPair)=>{
                    const valueDescriptor = parseValueDefinitionPair(valueDefinitionPair, this.identifier);
                    const attributeName = this.data.getAttributeNameForKey(valueDescriptor.key);
                    return Object.assign(result, {
                        [attributeName]: valueDescriptor
                    });
                }, {});
            }
        }
    };
    return valueDefinitionPairs.reduce((properties, valueDefinitionPair)=>{
        return Object.assign(properties, propertiesForValueDefinitionPair(valueDefinitionPair));
    }, propertyDescriptorMap);
}
function propertiesForValueDefinitionPair(valueDefinitionPair, controller) {
    const definition = parseValueDefinitionPair(valueDefinitionPair, controller);
    const { key , name , reader: read , writer: write  } = definition;
    return {
        [name]: {
            get () {
                const value = this.data.get(key);
                if (value !== null) return read(value);
                else return definition.defaultValue;
            },
            set (value) {
                if (value === void 0) this.data.delete(key);
                else this.data.set(key, write(value));
            }
        },
        [`has${capitalize(name)}`]: {
            get () {
                return this.data.has(key) || definition.hasCustomDefaultValue;
            }
        }
    };
}
function parseValueDefinitionPair([token, typeDefinition], controller) {
    return valueDescriptorForTokenAndTypeDefinition({
        controller,
        token,
        typeDefinition
    });
}
function parseValueTypeConstant(constant) {
    switch(constant){
        case Array:
            return "array";
        case Boolean:
            return "boolean";
        case Number:
            return "number";
        case Object:
            return "object";
        case String:
            return "string";
    }
}
function parseValueTypeDefault(defaultValue) {
    switch(typeof defaultValue){
        case "boolean":
            return "boolean";
        case "number":
            return "number";
        case "string":
            return "string";
    }
    if (Array.isArray(defaultValue)) return "array";
    if (Object.prototype.toString.call(defaultValue) === "[object Object]") return "object";
}
function parseValueTypeObject(payload) {
    const typeFromObject = parseValueTypeConstant(payload.typeObject.type);
    if (!typeFromObject) return;
    const defaultValueType = parseValueTypeDefault(payload.typeObject.default);
    if (typeFromObject !== defaultValueType) {
        const propertyPath = payload.controller ? `${payload.controller}.${payload.token}` : payload.token;
        throw new Error(`The specified default value for the Stimulus Value "${propertyPath}" must match the defined type "${typeFromObject}". The provided default value of "${payload.typeObject.default}" is of type "${defaultValueType}".`);
    }
    return typeFromObject;
}
function parseValueTypeDefinition(payload) {
    const typeFromObject = parseValueTypeObject({
        controller: payload.controller,
        token: payload.token,
        typeObject: payload.typeDefinition
    });
    const typeFromDefaultValue = parseValueTypeDefault(payload.typeDefinition);
    const typeFromConstant = parseValueTypeConstant(payload.typeDefinition);
    const type = typeFromObject || typeFromDefaultValue || typeFromConstant;
    if (type) return type;
    const propertyPath = payload.controller ? `${payload.controller}.${payload.typeDefinition}` : payload.token;
    throw new Error(`Unknown value type "${propertyPath}" for "${payload.token}" value`);
}
function defaultValueForDefinition(typeDefinition) {
    const constant = parseValueTypeConstant(typeDefinition);
    if (constant) return defaultValuesByType[constant];
    const defaultValue = typeDefinition.default;
    if (defaultValue !== void 0) return defaultValue;
    return typeDefinition;
}
function valueDescriptorForTokenAndTypeDefinition(payload) {
    const key = `${dasherize(payload.token)}-value`;
    const type = parseValueTypeDefinition(payload);
    return {
        type,
        key,
        name: camelize(key),
        get defaultValue () {
            return defaultValueForDefinition(payload.typeDefinition);
        },
        get hasCustomDefaultValue () {
            return parseValueTypeDefault(payload.typeDefinition) !== void 0;
        },
        reader: readers[type],
        writer: writers[type] || writers.default
    };
}
const defaultValuesByType = {
    get array () {
        return [];
    },
    boolean: false,
    number: 0,
    get object () {
        return {};
    },
    string: ""
};
const readers = {
    array (value) {
        const array = JSON.parse(value);
        if (!Array.isArray(array)) throw new TypeError(`expected value of type "array" but instead got value "${value}" of type "${parseValueTypeDefault(array)}"`);
        return array;
    },
    boolean (value) {
        return !(value == "0" || String(value).toLowerCase() == "false");
    },
    number (value) {
        return Number(value);
    },
    object (value) {
        const object = JSON.parse(value);
        if (object === null || typeof object != "object" || Array.isArray(object)) throw new TypeError(`expected value of type "object" but instead got value "${value}" of type "${parseValueTypeDefault(object)}"`);
        return object;
    },
    string (value) {
        return value;
    }
};
const writers = {
    default: writeString,
    array: writeJSON,
    object: writeJSON
};
function writeJSON(value) {
    return JSON.stringify(value);
}
function writeString(value) {
    return `${value}`;
}
class Controller {
    static get shouldLoad() {
        return true;
    }
    get application() {
        return this.context.application;
    }
    get scope() {
        return this.context.scope;
    }
    get element() {
        return this.scope.element;
    }
    get identifier() {
        return this.scope.identifier;
    }
    get targets() {
        return this.scope.targets;
    }
    get classes() {
        return this.scope.classes;
    }
    get data() {
        return this.scope.data;
    }
    initialize() {}
    connect() {}
    disconnect() {}
    dispatch(eventName, { target =this.element , detail ={} , prefix =this.identifier , bubbles =true , cancelable =true  } = {}) {
        const type = prefix ? `${prefix}:${eventName}` : eventName;
        const event = new CustomEvent(type, {
            detail,
            bubbles,
            cancelable
        });
        target.dispatchEvent(event);
        return event;
    }
    constructor(context){
        this.context = context;
    }
}
Controller.blessings = [
    ClassPropertiesBlessing,
    TargetPropertiesBlessing,
    ValuePropertiesBlessing
];
Controller.targets = [];
Controller.values = {};
class modal_controller_default extends Controller {
    initialize() {
        document.head.insertAdjacentHTML("beforeend", `<template id='kubik-modal-template' data-kubik-modal-target='modalTemplate'>
         <div id='kubik-modal' class='kubik-modal-element' data-kubik-modal-target='modalContainer'>
          <div class='kubik-modal-background' data-action='click->kubik-modal#closeModal'>
        </div>
      <div class='kubik-modal-element-window'>
        <div data-kubik-modal-target='modalHeader' class='h4 kubik-modal-title-bar'>Test header</div>
        <turbo-frame id='media_library_frame' class='kubik-modal-element-content' data-kubik-modal-target='modalFrame'>
        </turbo-frame>
      </div>
    </div>
  </template>
`);
    }
    connect() {
        this._renderDOMElements();
        document.addEventListener("keydown", (event)=>{
            if (event.keyCode === 27) this.closeModal();
        });
    }
    get modalTemplate() {
        return this.modalTemplateTarget.innerHTML;
    }
    selectModal(e) {
        const target = e.currentTarget;
        if (this.modalActionValue === "return") {
            const [targetControllerName, targetControllerId] = this.modalReturnControllerValue.split("#");
            const targetController = this.application.getControllerForElementAndIdentifier(document.getElementById(targetControllerId), targetControllerName);
            targetController.receiveModalReturn({
                payload: {
                    kubik_media_upload_id: parseInt(target.dataset.selectedKubikMediaUploadId),
                    thumb: target.dataset.selectedThumb
                },
                return_payload: this.modalReturnPayloadValue
            });
            this.closeModal();
        }
    }
    modalStatusValueChanged() {
        if (this.hasModalContainerTarget) {
            if (this.modalStatusValue === "opened") this.modalContainerTarget.classList.add("kubik-modal-element__open");
            else this.modalContainerTarget.classList.remove("kubik-modal-element__open");
        }
    }
    modalSrcValueChanged() {
        if (this.hasModalFrameTarget) {
            if (this.modalSrcValue === "") {
                this.modalFrameTarget.setAttribute("src", this.modalSrcValue);
                this.modalFrameTarget.innerHTML = "";
            } else this.modalFrameTarget.setAttribute("src", this.modalSrcValue);
        }
    }
    modalHeaderValueChanged() {
        if (this.hasModalHeaderTarget) this.modalHeaderTarget.innerText = this.modalHeaderValue;
    }
    openModal(e) {
        const target = e.currentTarget;
        this.modalSrcValue = target.getAttribute("src");
        this.modalHeaderValue = target.dataset.kubikModalHeaderText;
        this.modalActionValue = target.dataset.kubikModalAction;
        this.modalReturnControllerValue = target.dataset.kubikModalReturnController;
        if (target.dataset.kubikModalReturnPayload) this.modalReturnPayloadValue = JSON.parse(target.dataset.kubikModalReturnPayload);
        this.modalStatusValue = "opened";
    }
    closeModal() {
        this.modalStatusValue = "closed";
        this.modalSrcValue = "";
        this.modalHeaderValue = "";
        this.modalActionValue = "";
        this.modalReturnControllerValue = "";
        this.modalReturnPayloadValue = {};
    }
    _renderDOMElements() {
        if (!document.getElementById("kubik-modal")) document.body.insertAdjacentHTML("beforeend", this.modalTemplate);
    }
}
modal_controller_default.targets = [
    "modalTemplate",
    "modalContainer",
    "modalFrame",
    "modalHeader"
];
modal_controller_default.values = {
    modalHeader: {
        type: String,
        default: ""
    },
    modalStatus: {
        type: String,
        default: "closed"
    },
    modalSrc: {
        type: String,
        default: ""
    },
    modalAction: {
        type: String,
        default: ""
    },
    modalReturnPayload: {
        type: Object,
        default: {}
    },
    modalReturnController: {
        type: String,
        default: ""
    }
};
const modalInit = function() {
    document.addEventListener("DOMContentLoaded", function() {
        document.documentElement.setAttribute("data-controller", "kubik-modal");
    });
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}]},["hhGPZ","3Cw6g"], "3Cw6g", "parcelRequireed2a")

//# sourceMappingURL=kubik_wysiwyg.js.map
